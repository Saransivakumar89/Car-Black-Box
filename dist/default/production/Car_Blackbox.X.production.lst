

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jan 20 14:23:29 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Version 2.20
    77                           ; Generated 12/02/2020 GMT
    78                           ; 
    79                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4580 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataCOMRAM
   112   0025FC                     __pidataCOMRAM:
   113                           	callstack 0
   114                           
   115                           ;initializer for _arrow_pos
   116   0025FC  0001               	dw	1
   117                           
   118                           ;initializer for _pos
   119   0025FE  0006               	dw	6
   120                           
   121                           ;initializer for _seconds
   122   002600  000A               	dw	10
   123                           
   124                           ;initializer for read_switches@once
   125   002602  01                 	db	1
   126                           
   127                           	psect	idataBANK0
   128   00240E                     __pidataBANK0:
   129                           	callstack 0
   130                           
   131                           ;initializer for _arr
   132   00240E  F2                 	db	low STR_1
   133   00240F  2F                 	db	high STR_1
   134   002410  EF                 	db	low STR_2
   135   002411  2F                 	db	high STR_2
   136   002412  D4                 	db	low STR_3
   137   002413  2F                 	db	high STR_3
   138   002414  D7                 	db	low STR_4
   139   002415  2F                 	db	high STR_4
   140   002416  DA                 	db	low STR_5
   141   002417  2F                 	db	high STR_5
   142   002418  DD                 	db	low STR_6
   143   002419  2F                 	db	high STR_6
   144   00241A  E0                 	db	low STR_7
   145   00241B  2F                 	db	high STR_7
   146   00241C  F8                 	db	low STR_8
   147   00241D  2F                 	db	high STR_8
   148   00241E  D1                 	db	low STR_9
   149   00241F  2F                 	db	high STR_9
   150   002420  EC                 	db	low STR_10
   151   002421  2F                 	db	high STR_10
   152   002422  FB                 	db	low STR_11
   153   002423  2F                 	db	high STR_11
   154   002424  E9                 	db	low STR_12
   155   002425  2F                 	db	high STR_12
   156   002426  E6                 	db	low STR_13
   157   002427  2F                 	db	high STR_13
   158   002428  F5                 	db	low STR_14
   159   002429  2F                 	db	high STR_14
   160   00242A  00                 	db	0
   161   00242B  00                 	db	0
   162                           
   163                           ;initializer for _main_menu
   164   00242C  7E                 	db	low STR_15
   165   00242D  2E                 	db	high STR_15
   166   00242E  40                 	db	low STR_16
   167   00242F  2F                 	db	high STR_16
   168   002430  67                 	db	low STR_17
   169   002431  2F                 	db	high STR_17
   170   002432  4D                 	db	low STR_18
   171   002433  2F                 	db	high STR_18
   172   002434  5A                 	db	low STR_19
   173   002435  2F                 	db	high STR_19
   174   002436  00                 	db	0
   175   002437  00                 	db	0
   176                           
   177                           ;initializer for _position
   178   002438  FFFF               	dw	65535
   179                           
   180                           ;initializer for _x
   181   00243A  0005               	dw	5
   182                           
   183                           ;initializer for _time
   184   00243C  31                 	db	49
   185   00243D  30                 	db	48
   186   00243E  3A                 	db	58
   187   00243F  30                 	db	48
   188   002440  30                 	db	48
   189   002441  3A                 	db	58
   190   002442  30                 	db	48
   191   002443  30                 	db	48
   192   002444  00                 	db	0
   193   000000                     _RCREG	set	4014
   194   000000                     _TXREG	set	4013
   195   000000                     _SPBRG	set	4015
   196   000000                     _SSPBUF	set	4041
   197   000000                     _SSPADD	set	4040
   198   000000                     _SSPCON1	set	4038
   199   000000                     _ADRESL	set	4035
   200   000000                     _ADRESH	set	4036
   201   000000                     _ABDOVF	set	32199
   202   000000                     _ACKSTAT	set	32302
   203   000000                     _CKE	set	32318
   204   000000                     _GODONE	set	32273
   205   000000                     _TMR2ON	set	32338
   206   000000                     _RBPU	set	32655
   207   000000                     _ADCON0	set	4034
   208   000000                     _PORTBbits	set	3969
   209   000000                     _TRISD	set	3989
   210   000000                     _PSA	set	32427
   211   000000                     _TMR0ON	set	32431
   212   000000                     _T0CS	set	32429
   213   000000                     _TMR0IF	set	32658
   214   000000                     _RCIF	set	31989
   215   000000                     _RCIE	set	31981
   216   000000                     _TXIF	set	31988
   217   000000                     _TXIE	set	31980
   218   000000                     _ABDEN	set	32192
   219   000000                     _WUE	set	32193
   220   000000                     _BRG16	set	32195
   221   000000                     _CREN	set	32092
   222   000000                     _RX9	set	32094
   223   000000                     _BRGH	set	32098
   224   000000                     _SENDB	set	32099
   225   000000                     _SYNC	set	32100
   226   000000                     _TXEN	set	32101
   227   000000                     _TRISC6	set	31910
   228   000000                     _TRISC7	set	31911
   229   000000                     _ACKEN	set	32300
   230   000000                     _ACKDT	set	32301
   231   000000                     _RCEN	set	32299
   232   000000                     _RSEN	set	32297
   233   000000                     _PEN	set	32298
   234   000000                     _SEN	set	32296
   235   000000                     _SMP	set	32319
   236   000000                     _TRISC4	set	31908
   237   000000                     _TRISC3	set	31907
   238   000000                     _GO	set	32273
   239   000000                     _ADON	set	32272
   240   000000                     _VCFG0	set	32268
   241   000000                     _VCFG1	set	32269
   242   000000                     _ADCS2	set	32258
   243   000000                     _ADCS1	set	32257
   244   000000                     _ADCS0	set	32256
   245   000000                     _ACQT0	set	32259
   246   000000                     _ACQT1	set	32260
   247   000000                     _ACQT2	set	32261
   248   000000                     _TMR0IE	set	32661
   249   000000                     _PEIE	set	32662
   250   000000                     _RD7	set	31775
   251   000000                     _RC0	set	31760
   252   000000                     _RC2	set	31762
   253   000000                     _PORTB	set	3969
   254   000000                     _RC1	set	31761
   255   000000                     _TRISB	set	3987
   256   000000                     _TRISC	set	3988
   257   000000                     _PORTD	set	3971
   258   000000                     _TRISD7	set	31919
   259   000000                     _ADCON1	set	4033
   260   000000                     _TMR2IE	set	31977
   261   000000                     _GIE	set	32663
   262   000000                     _BCLIF	set	32011
   263   000000                     _SSPIF	set	31987
   264   000000                     _ADFM	set	32263
   265   000000                     _TMR0	set	4054
   266   000000                     _T08BIT	set	32430
   267   000000                     _SPEN	set	32095
   268   000000                     _TX9	set	32102
   269                           
   270                           	psect	mediumconst
   271   002DE2                     __pmediumconst:
   272                           	callstack 0
   273   002DE2  00                 	db	0
   274   002DE3                     STR_36:
   275   002DE3  2A                 	db	42
   276   002DE4  2D                 	db	45
   277   002DE5  2D                 	db	45
   278   002DE6  2D                 	db	45
   279   002DE7  2D                 	db	45
   280   002DE8  2D                 	db	45
   281   002DE9  2D                 	db	45
   282   002DEA  2D                 	db	45
   283   002DEB  2D                 	db	45
   284   002DEC  2D                 	db	45
   285   002DED  2D                 	db	45
   286   002DEE  44                 	db	68	;'D'
   287   002DEF  6F                 	db	111	;'o'
   288   002DF0  77                 	db	119	;'w'
   289   002DF1  6E                 	db	110	;'n'
   290   002DF2  6C                 	db	108	;'l'
   291   002DF3  6F                 	db	111	;'o'
   292   002DF4  61                 	db	97	;'a'
   293   002DF5  64                 	db	100	;'d'
   294   002DF6  69                 	db	105	;'i'
   295   002DF7  6E                 	db	110	;'n'
   296   002DF8  67                 	db	103	;'g'
   297   002DF9  20                 	db	32
   298   002DFA  2D                 	db	45
   299   002DFB  2D                 	db	45
   300   002DFC  2D                 	db	45
   301   002DFD  2D                 	db	45
   302   002DFE  2D                 	db	45
   303   002DFF  2D                 	db	45
   304   002E00  2D                 	db	45
   305   002E01  2D                 	db	45
   306   002E02  2A                 	db	42
   307   002E03  0A                 	db	10
   308   002E04  0D                 	db	13
   309   002E05  00                 	db	0
   310   002E06                     STR_37:
   311   002E06  23                 	db	35
   312   002E07  20                 	db	32
   313   002E08  54                 	db	84	;'T'
   314   002E09  49                 	db	73	;'I'
   315   002E0A  4D                 	db	77	;'M'
   316   002E0B  45                 	db	69	;'E'
   317   002E0C  20                 	db	32
   318   002E0D  20                 	db	32
   319   002E0E  20                 	db	32
   320   002E0F  20                 	db	32
   321   002E10  20                 	db	32
   322   002E11  45                 	db	69	;'E'
   323   002E12  56                 	db	86	;'V'
   324   002E13  45                 	db	69	;'E'
   325   002E14  4E                 	db	78	;'N'
   326   002E15  54                 	db	84	;'T'
   327   002E16  20                 	db	32
   328   002E17  53                 	db	83	;'S'
   329   002E18  50                 	db	80	;'P'
   330   002E19  45                 	db	69	;'E'
   331   002E1A  45                 	db	69	;'E'
   332   002E1B  44                 	db	68	;'D'
   333   002E1C  0A                 	db	10
   334   002E1D  0D                 	db	13
   335   002E1E  00                 	db	0
   336   002E1F  20                 	db	32
   337   002E20  45                 	db	69	;'E'
   338   002E21  6E                 	db	110	;'n'
   339   002E22  74                 	db	116	;'t'
   340   002E23  65                 	db	101	;'e'
   341   002E24  72                 	db	114	;'r'
   342   002E25  20                 	db	32
   343   002E26  6F                 	db	111	;'o'
   344   002E27  6C                 	db	108	;'l'
   345   002E28  64                 	db	100	;'d'
   346   002E29  20                 	db	32
   347   002E2A  70                 	db	112	;'p'
   348   002E2B  61                 	db	97	;'a'
   349   002E2C  73                 	db	115	;'s'
   350   002E2D  73                 	db	115	;'s'
   351   002E2E  77                 	db	119	;'w'
   352   002E2F  6F                 	db	111	;'o'
   353   002E30  72                 	db	114	;'r'
   354   002E31  64                 	db	100	;'d'
   355   002E32  20                 	db	32
   356   002E33  00                 	db	0
   357   002E34                     STR_39:
   358   002E34  20                 	db	32
   359   002E35  20                 	db	32
   360   002E36  20                 	db	32
   361   002E37  4C                 	db	76	;'L'
   362   002E38  6F                 	db	111	;'o'
   363   002E39  67                 	db	103	;'g'
   364   002E3A  73                 	db	115	;'s'
   365   002E3B  20                 	db	32
   366   002E3C  43                 	db	67	;'C'
   367   002E3D  6C                 	db	108	;'l'
   368   002E3E  65                 	db	101	;'e'
   369   002E3F  61                 	db	97	;'a'
   370   002E40  72                 	db	114	;'r'
   371   002E41  65                 	db	101	;'e'
   372   002E42  64                 	db	100	;'d'
   373   002E43  20                 	db	32
   374   002E44  20                 	db	32
   375   002E45  20                 	db	32
   376   002E46  00                 	db	0
   377   002E47  45                 	db	69	;'E'
   378   002E48  6E                 	db	110	;'n'
   379   002E49  74                 	db	116	;'t'
   380   002E4A  65                 	db	101	;'e'
   381   002E4B  72                 	db	114	;'r'
   382   002E4C  20                 	db	32
   383   002E4D  6E                 	db	110	;'n'
   384   002E4E  65                 	db	101	;'e'
   385   002E4F  77                 	db	119	;'w'
   386   002E50  20                 	db	32
   387   002E51  70                 	db	112	;'p'
   388   002E52  61                 	db	97	;'a'
   389   002E53  73                 	db	115	;'s'
   390   002E54  73                 	db	115	;'s'
   391   002E55  77                 	db	119	;'w'
   392   002E56  6F                 	db	111	;'o'
   393   002E57  72                 	db	114	;'r'
   394   002E58  64                 	db	100	;'d'
   395   002E59  00                 	db	0
   396   002E5A                     STR_42:
   397   002E5A  20                 	db	32
   398   002E5B  20                 	db	32
   399   002E5C  20                 	db	32
   400   002E5D  20                 	db	32
   401   002E5E  20                 	db	32
   402   002E5F  20                 	db	32
   403   002E60  20                 	db	32
   404   002E61  20                 	db	32
   405   002E62  20                 	db	32
   406   002E63  20                 	db	32
   407   002E64  20                 	db	32
   408   002E65  20                 	db	32
   409   002E66  20                 	db	32
   410   002E67  20                 	db	32
   411   002E68  20                 	db	32
   412   002E69  20                 	db	32
   413   002E6A  20                 	db	32
   414   002E6B  00                 	db	0
   415   002E6C  50                 	db	80	;'P'
   416   002E6D  61                 	db	97	;'a'
   417   002E6E  73                 	db	115	;'s'
   418   002E6F  73                 	db	115	;'s'
   419   002E70  77                 	db	119	;'w'
   420   002E71  6F                 	db	111	;'o'
   421   002E72  72                 	db	114	;'r'
   422   002E73  64                 	db	100	;'d'
   423   002E74  20                 	db	32
   424   002E75  20                 	db	32
   425   002E76  63                 	db	99	;'c'
   426   002E77  68                 	db	104	;'h'
   427   002E78  61                 	db	97	;'a'
   428   002E79  6E                 	db	110	;'n'
   429   002E7A  67                 	db	103	;'g'
   430   002E7B  65                 	db	101	;'e'
   431   002E7C  64                 	db	100	;'d'
   432   002E7D  00                 	db	0
   433   002E7E                     STR_15:
   434   002E7E  56                 	db	86	;'V'
   435   002E7F  69                 	db	105	;'i'
   436   002E80  65                 	db	101	;'e'
   437   002E81  77                 	db	119	;'w'
   438   002E82  20                 	db	32
   439   002E83  4C                 	db	76	;'L'
   440   002E84  6F                 	db	111	;'o'
   441   002E85  67                 	db	103	;'g'
   442   002E86  20                 	db	32
   443   002E87  20                 	db	32
   444   002E88  20                 	db	32
   445   002E89  20                 	db	32
   446   002E8A  20                 	db	32
   447   002E8B  20                 	db	32
   448   002E8C  20                 	db	32
   449   002E8D  20                 	db	32
   450   002E8E  00                 	db	0
   451   002E8F  20                 	db	32
   452   002E90  57                 	db	87	;'W'
   453   002E91  52                 	db	82	;'R'
   454   002E92  4F                 	db	79	;'O'
   455   002E93  4E                 	db	78	;'N'
   456   002E94  47                 	db	71	;'G'
   457   002E95  20                 	db	32
   458   002E96  50                 	db	80	;'P'
   459   002E97  41                 	db	65	;'A'
   460   002E98  53                 	db	83	;'S'
   461   002E99  53                 	db	83	;'S'
   462   002E9A  57                 	db	87	;'W'
   463   002E9B  4F                 	db	79	;'O'
   464   002E9C  52                 	db	82	;'R'
   465   002E9D  44                 	db	68	;'D'
   466   002E9E  20                 	db	32
   467   002E9F  00                 	db	0
   468   002EA0                     STR_27:
   469   002EA0  20                 	db	32
   470   002EA1  45                 	db	69	;'E'
   471   002EA2  6E                 	db	110	;'n'
   472   002EA3  74                 	db	116	;'t'
   473   002EA4  65                 	db	101	;'e'
   474   002EA5  72                 	db	114	;'r'
   475   002EA6  20                 	db	32
   476   002EA7  50                 	db	80	;'P'
   477   002EA8  61                 	db	97	;'a'
   478   002EA9  73                 	db	115	;'s'
   479   002EAA  73                 	db	115	;'s'
   480   002EAB  77                 	db	119	;'w'
   481   002EAC  6F                 	db	111	;'o'
   482   002EAD  72                 	db	114	;'r'
   483   002EAE  64                 	db	100	;'d'
   484   002EAF  20                 	db	32
   485   002EB0  00                 	db	0
   486   002EB1                     STR_35:
   487   002EB1  20                 	db	32
   488   002EB2  53                 	db	83	;'S'
   489   002EB3  75                 	db	117	;'u'
   490   002EB4  63                 	db	99	;'c'
   491   002EB5  63                 	db	99	;'c'
   492   002EB6  65                 	db	101	;'e'
   493   002EB7  73                 	db	115	;'s'
   494   002EB8  73                 	db	115	;'s'
   495   002EB9  66                 	db	102	;'f'
   496   002EBA  75                 	db	117	;'u'
   497   002EBB  6C                 	db	108	;'l'
   498   002EBC  6C                 	db	108	;'l'
   499   002EBD  79                 	db	121	;'y'
   500   002EBE  2E                 	db	46
   501   002EBF  2E                 	db	46
   502   002EC0  2E                 	db	46
   503   002EC1  00                 	db	0
   504   002EC2                     STR_26:
   505   002EC2  20                 	db	32
   506   002EC3  20                 	db	32
   507   002EC4  54                 	db	84	;'T'
   508   002EC5  49                 	db	73	;'I'
   509   002EC6  4D                 	db	77	;'M'
   510   002EC7  45                 	db	69	;'E'
   511   002EC8  20                 	db	32
   512   002EC9  20                 	db	32
   513   002ECA  20                 	db	32
   514   002ECB  20                 	db	32
   515   002ECC  45                 	db	69	;'E'
   516   002ECD  56                 	db	86	;'V'
   517   002ECE  20                 	db	32
   518   002ECF  20                 	db	32
   519   002ED0  53                 	db	83	;'S'
   520   002ED1  50                 	db	80	;'P'
   521   002ED2  00                 	db	0
   522   002ED3                     STR_23:
   523   002ED3  23                 	db	35
   524   002ED4  20                 	db	32
   525   002ED5  20                 	db	32
   526   002ED6  20                 	db	32
   527   002ED7  54                 	db	84	;'T'
   528   002ED8  49                 	db	73	;'I'
   529   002ED9  4D                 	db	77	;'M'
   530   002EDA  45                 	db	69	;'E'
   531   002EDB  20                 	db	32
   532   002EDC  20                 	db	32
   533   002EDD  20                 	db	32
   534   002EDE  45                 	db	69	;'E'
   535   002EDF  56                 	db	86	;'V'
   536   002EE0  20                 	db	32
   537   002EE1  53                 	db	83	;'S'
   538   002EE2  50                 	db	80	;'P'
   539   002EE3  00                 	db	0
   540   002EE4  50                 	db	80	;'P'
   541   002EE5  61                 	db	97	;'a'
   542   002EE6  73                 	db	115	;'s'
   543   002EE7  73                 	db	115	;'s'
   544   002EE8  77                 	db	119	;'w'
   545   002EE9  6F                 	db	111	;'o'
   546   002EEA  72                 	db	114	;'r'
   547   002EEB  64                 	db	100	;'d'
   548   002EEC  20                 	db	32
   549   002EED  63                 	db	99	;'c'
   550   002EEE  68                 	db	104	;'h'
   551   002EEF  61                 	db	97	;'a'
   552   002EF0  6E                 	db	110	;'n'
   553   002EF1  67                 	db	103	;'g'
   554   002EF2  65                 	db	101	;'e'
   555   002EF3  64                 	db	100	;'d'
   556   002EF4  00                 	db	0
   557   002EF5                     STR_20:
   558   002EF5  20                 	db	32
   559   002EF6  20                 	db	32
   560   002EF7  50                 	db	80	;'P'
   561   002EF8  6C                 	db	108	;'l'
   562   002EF9  65                 	db	101	;'e'
   563   002EFA  61                 	db	97	;'a'
   564   002EFB  73                 	db	115	;'s'
   565   002EFC  65                 	db	101	;'e'
   566   002EFD  20                 	db	32
   567   002EFE  54                 	db	84	;'T'
   568   002EFF  72                 	db	114	;'r'
   569   002F00  79                 	db	121	;'y'
   570   002F01  20                 	db	32
   571   002F02  20                 	db	32
   572   002F03  20                 	db	32
   573   002F04  00                 	db	0
   574   002F05                     STR_34:
   575   002F05  20                 	db	32
   576   002F06  20                 	db	32
   577   002F07  44                 	db	68	;'D'
   578   002F08  6F                 	db	111	;'o'
   579   002F09  77                 	db	119	;'w'
   580   002F0A  6E                 	db	110	;'n'
   581   002F0B  6C                 	db	108	;'l'
   582   002F0C  6F                 	db	111	;'o'
   583   002F0D  61                 	db	97	;'a'
   584   002F0E  64                 	db	100	;'d'
   585   002F0F  65                 	db	101	;'e'
   586   002F10  64                 	db	100	;'d'
   587   002F11  20                 	db	32
   588   002F12  20                 	db	32
   589   002F13  00                 	db	0
   590   002F14                     STR_29:
   591   002F14  53                 	db	83	;'S'
   592   002F15  75                 	db	117	;'u'
   593   002F16  63                 	db	99	;'c'
   594   002F17  63                 	db	99	;'c'
   595   002F18  65                 	db	101	;'e'
   596   002F19  73                 	db	115	;'s'
   597   002F1A  73                 	db	115	;'s'
   598   002F1B  66                 	db	102	;'f'
   599   002F1C  75                 	db	117	;'u'
   600   002F1D  6C                 	db	108	;'l'
   601   002F1E  6C                 	db	108	;'l'
   602   002F1F  2E                 	db	46
   603   002F20  2E                 	db	46
   604   002F21  2E                 	db	46
   605   002F22  00                 	db	0
   606   002F23                     STR_31:
   607   002F23  41                 	db	65	;'A'
   608   002F24  74                 	db	116	;'t'
   609   002F25  74                 	db	116	;'t'
   610   002F26  65                 	db	101	;'e'
   611   002F27  6D                 	db	109	;'m'
   612   002F28  70                 	db	112	;'p'
   613   002F29  74                 	db	116	;'t'
   614   002F2A  73                 	db	115	;'s'
   615   002F2B  20                 	db	32
   616   002F2C  4C                 	db	76	;'L'
   617   002F2D  65                 	db	101	;'e'
   618   002F2E  66                 	db	102	;'f'
   619   002F2F  74                 	db	116	;'t'
   620   002F30  3A                 	db	58	;':'
   621   002F31  00                 	db	0
   622   002F32  52                 	db	82	;'R'
   623   002F33  65                 	db	101	;'e'
   624   002F34  5F                 	db	95	;'_'
   625   002F35  65                 	db	101	;'e'
   626   002F36  6E                 	db	110	;'n'
   627   002F37  74                 	db	116	;'t'
   628   002F38  65                 	db	101	;'e'
   629   002F39  72                 	db	114	;'r'
   630   002F3A  20                 	db	32
   631   002F3B  20                 	db	32
   632   002F3C  70                 	db	112	;'p'
   633   002F3D  77                 	db	119	;'w'
   634   002F3E  64                 	db	100	;'d'
   635   002F3F  00                 	db	0
   636   002F40                     STR_16:
   637   002F40  53                 	db	83	;'S'
   638   002F41  65                 	db	101	;'e'
   639   002F42  74                 	db	116	;'t'
   640   002F43  20                 	db	32
   641   002F44  54                 	db	84	;'T'
   642   002F45  69                 	db	105	;'i'
   643   002F46  6D                 	db	109	;'m'
   644   002F47  65                 	db	101	;'e'
   645   002F48  20                 	db	32
   646   002F49  20                 	db	32
   647   002F4A  20                 	db	32
   648   002F4B  20                 	db	32
   649   002F4C  00                 	db	0
   650   002F4D                     STR_18:
   651   002F4D  43                 	db	67	;'C'
   652   002F4E  6C                 	db	108	;'l'
   653   002F4F  65                 	db	101	;'e'
   654   002F50  61                 	db	97	;'a'
   655   002F51  72                 	db	114	;'r'
   656   002F52  20                 	db	32
   657   002F53  4C                 	db	76	;'L'
   658   002F54  6F                 	db	111	;'o'
   659   002F55  67                 	db	103	;'g'
   660   002F56  20                 	db	32
   661   002F57  20                 	db	32
   662   002F58  20                 	db	32
   663   002F59  00                 	db	0
   664   002F5A                     STR_19:
   665   002F5A  43                 	db	67	;'C'
   666   002F5B  68                 	db	104	;'h'
   667   002F5C  61                 	db	97	;'a'
   668   002F5D  6E                 	db	110	;'n'
   669   002F5E  67                 	db	103	;'g'
   670   002F5F  65                 	db	101	;'e'
   671   002F60  20                 	db	32
   672   002F61  50                 	db	80	;'P'
   673   002F62  61                 	db	97	;'a'
   674   002F63  73                 	db	115	;'s'
   675   002F64  73                 	db	115	;'s'
   676   002F65  20                 	db	32
   677   002F66  00                 	db	0
   678   002F67                     STR_17:
   679   002F67  44                 	db	68	;'D'
   680   002F68  6F                 	db	111	;'o'
   681   002F69  77                 	db	119	;'w'
   682   002F6A  6E                 	db	110	;'n'
   683   002F6B  6C                 	db	108	;'l'
   684   002F6C  6F                 	db	111	;'o'
   685   002F6D  61                 	db	97	;'a'
   686   002F6E  64                 	db	100	;'d'
   687   002F6F  20                 	db	32
   688   002F70  4C                 	db	76	;'L'
   689   002F71  6F                 	db	111	;'o'
   690   002F72  67                 	db	103	;'g'
   691   002F73  00                 	db	0
   692   002F74  61                 	db	97	;'a'
   693   002F75  74                 	db	116	;'t'
   694   002F76  74                 	db	116	;'t'
   695   002F77  65                 	db	101	;'e'
   696   002F78  6D                 	db	109	;'m'
   697   002F79  70                 	db	112	;'p'
   698   002F7A  74                 	db	116	;'t'
   699   002F7B  20                 	db	32
   700   002F7C  6C                 	db	108	;'l'
   701   002F7D  65                 	db	101	;'e'
   702   002F7E  66                 	db	102	;'f'
   703   002F7F  74                 	db	116	;'t'
   704   002F80  00                 	db	0
   705   002F81  53                 	db	83	;'S'
   706   002F82  75                 	db	117	;'u'
   707   002F83  63                 	db	99	;'c'
   708   002F84  63                 	db	99	;'c'
   709   002F85  65                 	db	101	;'e'
   710   002F86  73                 	db	115	;'s'
   711   002F87  73                 	db	115	;'s'
   712   002F88  66                 	db	102	;'f'
   713   002F89  75                 	db	117	;'u'
   714   002F8A  6C                 	db	108	;'l'
   715   002F8B  6C                 	db	108	;'l'
   716   002F8C  79                 	db	121	;'y'
   717   002F8D  00                 	db	0
   718   002F8E                     STR_30:
   719   002F8E  49                 	db	73	;'I'
   720   002F8F  6E                 	db	110	;'n'
   721   002F90  63                 	db	99	;'c'
   722   002F91  6F                 	db	111	;'o'
   723   002F92  72                 	db	114	;'r'
   724   002F93  72                 	db	114	;'r'
   725   002F94  65                 	db	101	;'e'
   726   002F95  63                 	db	99	;'c'
   727   002F96  74                 	db	116	;'t'
   728   002F97  20                 	db	32
   729   002F98  20                 	db	32
   730   002F99  00                 	db	0
   731   002F9A                     STR_41:
   732   002F9A  20                 	db	32
   733   002F9B  45                 	db	69	;'E'
   734   002F9C  6E                 	db	110	;'n'
   735   002F9D  74                 	db	116	;'t'
   736   002F9E  65                 	db	101	;'e'
   737   002F9F  72                 	db	114	;'r'
   738   002FA0  20                 	db	32
   739   002FA1  70                 	db	112	;'p'
   740   002FA2  77                 	db	119	;'w'
   741   002FA3  64                 	db	100	;'d'
   742   002FA4  20                 	db	32
   743   002FA5  00                 	db	0
   744   002FA6                     STR_40:
   745   002FA6  3C                 	db	60	;'<'
   746   002FA7  3C                 	db	60	;'<'
   747   002FA8  2E                 	db	46
   748   002FA9  2E                 	db	46
   749   002FAA  2E                 	db	46
   750   002FAB  2E                 	db	46
   751   002FAC  2E                 	db	46
   752   002FAD  2E                 	db	46
   753   002FAE  2E                 	db	46
   754   002FAF  3E                 	db	62	;'>'
   755   002FB0  3E                 	db	62	;'>'
   756   002FB1  00                 	db	0
   757   002FB2                     STR_21:
   758   002FB2  41                 	db	65	;'A'
   759   002FB3  67                 	db	103	;'g'
   760   002FB4  61                 	db	97	;'a'
   761   002FB5  69                 	db	105	;'i'
   762   002FB6  6E                 	db	110	;'n'
   763   002FB7  20                 	db	32
   764   002FB8  69                 	db	105	;'i'
   765   002FB9  6E                 	db	110	;'n'
   766   002FBA  20                 	db	32
   767   002FBB  00                 	db	0
   768   002FBC                     STR_28:
   769   002FBC  20                 	db	32
   770   002FBD  20                 	db	32
   771   002FBE  4C                 	db	76	;'L'
   772   002FBF  6F                 	db	111	;'o'
   773   002FC0  67                 	db	103	;'g'
   774   002FC1  69                 	db	105	;'i'
   775   002FC2  6E                 	db	110	;'n'
   776   002FC3  20                 	db	32
   777   002FC4  00                 	db	0
   778   002FC5  66                 	db	102	;'f'
   779   002FC6  61                 	db	97	;'a'
   780   002FC7  69                 	db	105	;'i'
   781   002FC8  6C                 	db	108	;'l'
   782   002FC9  65                 	db	101	;'e'
   783   002FCA  64                 	db	100	;'d'
   784   002FCB  00                 	db	0
   785   002FCC                     STR_22:
   786   002FCC  20                 	db	32
   787   002FCD  73                 	db	115	;'s'
   788   002FCE  65                 	db	101	;'e'
   789   002FCF  63                 	db	99	;'c'
   790   002FD0  00                 	db	0
   791   002FD1                     STR_9:
   792   002FD1  43                 	db	67	;'C'
   793   002FD2  20                 	db	32
   794   002FD3  00                 	db	0
   795   002FD4                     STR_3:
   796   002FD4  47                 	db	71	;'G'
   797   002FD5  31                 	db	49	;'1'
   798   002FD6  00                 	db	0
   799   002FD7                     STR_4:
   800   002FD7  47                 	db	71	;'G'
   801   002FD8  32                 	db	50	;'2'
   802   002FD9  00                 	db	0
   803   002FDA                     STR_5:
   804   002FDA  47                 	db	71	;'G'
   805   002FDB  33                 	db	51	;'3'
   806   002FDC  00                 	db	0
   807   002FDD                     STR_6:
   808   002FDD  47                 	db	71	;'G'
   809   002FDE  34                 	db	52	;'4'
   810   002FDF  00                 	db	0
   811   002FE0                     STR_7:
   812   002FE0  47                 	db	71	;'G'
   813   002FE1  35                 	db	53	;'5'
   814   002FE2  00                 	db	0
   815   002FE3                     STR_32:
   816   002FE3  2D                 	db	45
   817   002FE4  3E                 	db	62	;'>'
   818   002FE5  00                 	db	0
   819   002FE6                     STR_13:
   820   002FE6  43                 	db	67	;'C'
   821   002FE7  4C                 	db	76	;'L'
   822   002FE8  00                 	db	0
   823   002FE9                     STR_12:
   824   002FE9  44                 	db	68	;'D'
   825   002FEA  4C                 	db	76	;'L'
   826   002FEB  00                 	db	0
   827   002FEC                     STR_10:
   828   002FEC  56                 	db	86	;'V'
   829   002FED  4C                 	db	76	;'L'
   830   002FEE  00                 	db	0
   831   002FEF                     STR_2:
   832   002FEF  47                 	db	71	;'G'
   833   002FF0  4E                 	db	78	;'N'
   834   002FF1  00                 	db	0
   835   002FF2                     STR_1:
   836   002FF2  4F                 	db	79	;'O'
   837   002FF3  4E                 	db	78	;'N'
   838   002FF4  00                 	db	0
   839   002FF5                     STR_14:
   840   002FF5  43                 	db	67	;'C'
   841   002FF6  50                 	db	80	;'P'
   842   002FF7  00                 	db	0
   843   002FF8                     STR_8:
   844   002FF8  47                 	db	71	;'G'
   845   002FF9  52                 	db	82	;'R'
   846   002FFA  00                 	db	0
   847   002FFB                     STR_11:
   848   002FFB  53                 	db	83	;'S'
   849   002FFC  54                 	db	84	;'T'
   850   002FFD  00                 	db	0
   851   002FFE  00                 	db	0	; dummy byte at the end
   852   000000                     
   853                           ; #config settings
   854                           
   855                           	psect	cinit
   856   001FC8                     __pcinit:
   857                           	callstack 0
   858   001FC8                     start_initialization:
   859                           	callstack 0
   860   001FC8                     __initialization:
   861                           	callstack 0
   862                           
   863                           ; Initialize objects allocated to BANK0 (55 bytes)
   864                           ; load TBLPTR registers with __pidataBANK0
   865   001FC8  0E0E               	movlw	low __pidataBANK0
   866   001FCA  6EF6               	movwf	tblptrl,c
   867   001FCC  0E24               	movlw	high __pidataBANK0
   868   001FCE  6EF7               	movwf	tblptrh,c
   869   001FD0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   870   001FD2  6EF8               	movwf	tblptru,c
   871   001FD4  EE00  F0B2         	lfsr	0,__pdataBANK0
   872   001FD8  EE10 F037          	lfsr	1,55
   873   001FDC                     copy_data0:
   874   001FDC  0009               	tblrd		*+
   875   001FDE  CFF5 FFEE          	movff	tablat,postinc0
   876   001FE2  50E5               	movf	postdec1,w,c
   877   001FE4  50E1               	movf	fsr1l,w,c
   878   001FE6  E1FA               	bnz	copy_data0
   879                           
   880                           ; Initialize objects allocated to COMRAM (7 bytes)
   881                           ; load TBLPTR registers with __pidataCOMRAM
   882   001FE8  0EFC               	movlw	low __pidataCOMRAM
   883   001FEA  6EF6               	movwf	tblptrl,c
   884   001FEC  0E25               	movlw	high __pidataCOMRAM
   885   001FEE  6EF7               	movwf	tblptrh,c
   886   001FF0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   887   001FF2  6EF8               	movwf	tblptru,c
   888   001FF4  EE00  F056         	lfsr	0,__pdataCOMRAM
   889   001FF8  EE10 F007          	lfsr	1,7
   890   001FFC                     copy_data1:
   891   001FFC  0009               	tblrd		*+
   892   001FFE  CFF5 FFEE          	movff	tablat,postinc0
   893   002002  50E5               	movf	postdec1,w,c
   894   002004  50E1               	movf	fsr1l,w,c
   895   002006  E1FA               	bnz	copy_data1
   896                           
   897                           ; Clear objects allocated to BANK1 (34 bytes)
   898   002008  EE01  F000         	lfsr	0,__pbssBANK1
   899   00200C  0E22               	movlw	34
   900   00200E                     clear_0:
   901   00200E  6AEE               	clrf	postinc0,c
   902   002010  06E8               	decf	wreg,f,c
   903   002012  E1FD               	bnz	clear_0
   904                           
   905                           ; Clear objects allocated to BANK0 (82 bytes)
   906   002014  EE00  F060         	lfsr	0,__pbssBANK0
   907   002018  0E52               	movlw	82
   908   00201A                     clear_1:
   909   00201A  6AEE               	clrf	postinc0,c
   910   00201C  06E8               	decf	wreg,f,c
   911   00201E  E1FD               	bnz	clear_1
   912                           
   913                           ; Clear objects allocated to COMRAM (33 bytes)
   914   002020  EE00  F035         	lfsr	0,__pbssCOMRAM
   915   002024  0E21               	movlw	33
   916   002026                     clear_2:
   917   002026  6AEE               	clrf	postinc0,c
   918   002028  06E8               	decf	wreg,f,c
   919   00202A  E1FD               	bnz	clear_2
   920   00202C                     end_of_initialization:
   921                           	callstack 0
   922   00202C                     __end_of__initialization:
   923                           	callstack 0
   924   00202C  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   925   00202E  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   926   002030  0E00               	movlw	low (__Lmediumconst shr (0+16))
   927   002032  6EF8               	movwf	tblptru,c
   928   002034  0100               	movlb	0
   929   002036  EF02  F00A         	goto	_main	;jump to C main() function
   930                           
   931                           	psect	bssCOMRAM
   932   000035                     __pbssCOMRAM:
   933                           	callstack 0
   934   000035                     _l:
   935                           	callstack 0
   936   000035                     	ds	2
   937   000037                     _k:
   938                           	callstack 0
   939   000037                     	ds	2
   940   000039                     view_log@shift_pos:
   941                           	callstack 0
   942   000039                     	ds	2
   943   00003B                     _index:
   944                           	callstack 0
   945   00003B                     	ds	2
   946   00003D                     _press_delay:
   947                           	callstack 0
   948   00003D                     	ds	2
   949   00003F                     _menu_pos:
   950                           	callstack 0
   951   00003F                     	ds	2
   952   000041                     _star:
   953                           	callstack 0
   954   000041                     	ds	2
   955   000043                     _cursor:
   956                           	callstack 0
   957   000043                     	ds	2
   958   000045                     _idx:
   959                           	callstack 0
   960   000045                     	ds	2
   961   000047                     _wait:
   962                           	callstack 0
   963   000047                     	ds	2
   964   000049                     _adc_reg_val:
   965                           	callstack 0
   966   000049                     	ds	2
   967   00004B                     _flag:
   968                           	callstack 0
   969   00004B                     	ds	2
   970   00004D                     _i:
   971                           	callstack 0
   972   00004D                     	ds	2
   973   00004F                     _pre_key:
   974                           	callstack 0
   975   00004F                     	ds	2
   976   000051                     _screen_flag:
   977                           	callstack 0
   978   000051                     	ds	2
   979   000053                     change_pass@c:
   980                           	callstack 0
   981   000053                     	ds	1
   982   000054                     _key:
   983                           	callstack 0
   984   000054                     	ds	1
   985   000055                     read_switches@key:
   986                           	callstack 0
   987   000055                     	ds	1
   988                           
   989                           	psect	dataCOMRAM
   990   000056                     __pdataCOMRAM:
   991                           	callstack 0
   992   000056                     _arrow_pos:
   993                           	callstack 0
   994   000056                     	ds	2
   995   000058                     _pos:
   996                           	callstack 0
   997   000058                     	ds	2
   998   00005A                     _seconds:
   999                           	callstack 0
  1000   00005A                     	ds	2
  1001   00005C                     read_switches@once:
  1002                           	callstack 0
  1003   00005C                     	ds	1
  1004                           
  1005                           	psect	bssBANK0
  1006   000060                     __pbssBANK0:
  1007                           	callstack 0
  1008   000060                     _log:
  1009                           	callstack 0
  1010   000060                     	ds	17
  1011   000071                     _clock_reg:
  1012                           	callstack 0
  1013   000071                     	ds	4
  1014   000075                     _delay:
  1015                           	callstack 0
  1016   000075                     	ds	4
  1017   000079                     isr@count:
  1018                           	callstack 0
  1019   000079                     	ds	2
  1020   00007B                     change_pass@attempt1:
  1021                           	callstack 0
  1022   00007B                     	ds	2
  1023   00007D                     _sec:
  1024                           	callstack 0
  1025   00007D                     	ds	2
  1026   00007F                     _return_delay1:
  1027                           	callstack 0
  1028   00007F                     	ds	2
  1029   000081                     _return_delay:
  1030                           	callstack 0
  1031   000081                     	ds	2
  1032   000083                     _once:
  1033                           	callstack 0
  1034   000083                     	ds	2
  1035   000085                     view_log@vlog_pos:
  1036                           	callstack 0
  1037   000085                     	ds	2
  1038   000087                     _overflow:
  1039                           	callstack 0
  1040   000087                     	ds	2
  1041   000089                     _time_delay:
  1042                           	callstack 0
  1043   000089                     	ds	2
  1044   00008B                     _scrn_delay:
  1045                           	callstack 0
  1046   00008B                     	ds	2
  1047   00008D                     _m_count:
  1048                           	callstack 0
  1049   00008D                     	ds	2
  1050   00008F                     _mark:
  1051                           	callstack 0
  1052   00008F                     	ds	2
  1053   000091                     _count:
  1054                           	callstack 0
  1055   000091                     	ds	2
  1056   000093                     _attempts:
  1057                           	callstack 0
  1058   000093                     	ds	2
  1059   000095                     _c_wait:
  1060                           	callstack 0
  1061   000095                     	ds	2
  1062   000097                     _enter:
  1063                           	callstack 0
  1064   000097                     	ds	2
  1065   000099                     _cr:
  1066                           	callstack 0
  1067   000099                     	ds	2
  1068   00009B                     _new_pd:
  1069                           	callstack 0
  1070   00009B                     	ds	5
  1071   0000A0                     _old_pd:
  1072                           	callstack 0
  1073   0000A0                     	ds	5
  1074   0000A5                     _pass:
  1075                           	callstack 0
  1076   0000A5                     	ds	5
  1077   0000AA                     _password:
  1078                           	callstack 0
  1079   0000AA                     	ds	5
  1080   0000AF                     _speed:
  1081                           	callstack 0
  1082   0000AF                     	ds	3
  1083                           
  1084                           	psect	dataBANK0
  1085   0000B2                     __pdataBANK0:
  1086                           	callstack 0
  1087   0000B2                     _arr:
  1088                           	callstack 0
  1089   0000B2                     	ds	30
  1090   0000D0                     _main_menu:
  1091                           	callstack 0
  1092   0000D0                     	ds	12
  1093   0000DC                     _position:
  1094                           	callstack 0
  1095   0000DC                     	ds	2
  1096   0000DE                     _x:
  1097                           	callstack 0
  1098   0000DE                     	ds	2
  1099   0000E0                     _time:
  1100                           	callstack 0
  1101   0000E0                     	ds	9
  1102                           
  1103                           	psect	bssBANK1
  1104   000100                     __pbssBANK1:
  1105                           	callstack 0
  1106   000100                     	ds	34
  1107                           
  1108                           	psect	cstackCOMRAM
  1109   000001                     __pcstackCOMRAM:
  1110                           	callstack 0
  1111   000001                     ?_read_adc:
  1112                           	callstack 0
  1113   000001                     ?_strcmp:
  1114                           	callstack 0
  1115   000001                     ?_strncmp:
  1116                           	callstack 0
  1117   000001                     ?___awdiv:
  1118                           	callstack 0
  1119   000001                     ?___awmod:
  1120                           	callstack 0
  1121   000001                     ?___lwdiv:
  1122                           	callstack 0
  1123   000001                     ?___xxtofl:
  1124                           	callstack 0
  1125   000001                     clcd_write@control_bit:
  1126                           	callstack 0
  1127   000001                     read_switches@detection_type:
  1128                           	callstack 0
  1129   000001                     i2c_write@data:
  1130                           	callstack 0
  1131   000001                     putch@byte:
  1132                           	callstack 0
  1133   000001                     ___awdiv@dividend:
  1134                           	callstack 0
  1135   000001                     ___awmod@dividend:
  1136                           	callstack 0
  1137   000001                     ___lwdiv@dividend:
  1138                           	callstack 0
  1139   000001                     strcmp@l:
  1140                           	callstack 0
  1141   000001                     strncmp@_l:
  1142                           	callstack 0
  1143   000001                     ___xxtofl@val:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x0
  1147   000001                     	ds	1
  1148   000002                     clcd_write@byte:
  1149                           	callstack 0
  1150   000002                     write_ds1307@data:
  1151                           	callstack 0
  1152   000002                     read_ds1307@address:
  1153                           	callstack 0
  1154   000002                     write_external_eeprom@data:
  1155                           	callstack 0
  1156   000002                     read_external_eeprom@address:
  1157                           	callstack 0
  1158   000002                     puts@s:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x1
  1162   000002                     	ds	1
  1163   000003                     ??_read_adc:
  1164   000003                     ??_init_clcd:
  1165   000003                     write_ds1307@address:
  1166                           	callstack 0
  1167   000003                     read_ds1307@data:
  1168                           	callstack 0
  1169   000003                     read_external_eeprom@data:
  1170                           	callstack 0
  1171   000003                     clcd_print@data:
  1172                           	callstack 0
  1173   000003                     write_external_eeprom@i:
  1174                           	callstack 0
  1175   000003                     ___awdiv@divisor:
  1176                           	callstack 0
  1177   000003                     ___awmod@divisor:
  1178                           	callstack 0
  1179   000003                     ___lwdiv@divisor:
  1180                           	callstack 0
  1181   000003                     strcmp@r:
  1182                           	callstack 0
  1183   000003                     strncmp@_r:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x2
  1187   000003                     	ds	1
  1188   000004                     init_ds1307@dummy:
  1189                           	callstack 0
  1190   000004                     get_pass@i:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x3
  1194   000004                     	ds	1
  1195   000005                     ??_strcmp:
  1196   000005                     ??___xxtofl:
  1197   000005                     clcd_print@addr:
  1198                           	callstack 0
  1199   000005                     write_external_eeprom@address:
  1200                           	callstack 0
  1201   000005                     ___awdiv@counter:
  1202                           	callstack 0
  1203   000005                     ___awmod@counter:
  1204                           	callstack 0
  1205   000005                     read_adc@reg_val:
  1206                           	callstack 0
  1207   000005                     ___lwdiv@quotient:
  1208                           	callstack 0
  1209   000005                     strncmp@n:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x4
  1213   000005                     	ds	1
  1214   000006                     event_capture@address:
  1215                           	callstack 0
  1216   000006                     ___awdiv@sign:
  1217                           	callstack 0
  1218   000006                     ___awmod@sign:
  1219                           	callstack 0
  1220   000006                     clear_log@i_398:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x5
  1224   000006                     	ds	1
  1225   000007                     ??_strncmp:
  1226   000007                     event_capture@i:
  1227                           	callstack 0
  1228   000007                     read_adc@channel:
  1229                           	callstack 0
  1230   000007                     ___lwdiv@counter:
  1231                           	callstack 0
  1232   000007                     ___awdiv@quotient:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x6
  1236   000007                     	ds	1
  1237   000008                     ??_car_log:
  1238   000008                     ?___lwmod:
  1239                           	callstack 0
  1240   000008                     ___lwmod@dividend:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x7
  1244   000008                     	ds	1
  1245   000009                     clcd_putch@addr:
  1246                           	callstack 0
  1247   000009                     ___xxtofl@sign:
  1248                           	callstack 0
  1249   000009                     strncmp@l:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x8
  1253   000009                     	ds	1
  1254   00000A                     clcd_putch@data:
  1255                           	callstack 0
  1256   00000A                     ___xxtofl@exp:
  1257                           	callstack 0
  1258   00000A                     car_log@i:
  1259                           	callstack 0
  1260   00000A                     clear_log@i:
  1261                           	callstack 0
  1262   00000A                     ___lwmod@divisor:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x9
  1266   00000A                     	ds	1
  1267   00000B                     ??_view_log:
  1268   00000B                     menu@key:
  1269                           	callstack 0
  1270   00000B                     blink@x:
  1271                           	callstack 0
  1272   00000B                     strncmp@r:
  1273                           	callstack 0
  1274   00000B                     ___xxtofl@arg:
  1275                           	callstack 0
  1276                           
  1277                           ; 4 bytes @ 0xA
  1278   00000B                     	ds	1
  1279   00000C                     ??_download_log:
  1280   00000C                     event@key:
  1281                           	callstack 0
  1282   00000C                     ___lwmod@counter:
  1283                           	callstack 0
  1284                           
  1285                           ; 1 bytes @ 0xB
  1286   00000C                     	ds	1
  1287   00000D                     login@i:
  1288                           	callstack 0
  1289   00000D                     download_log@vlog:
  1290                           	callstack 0
  1291   00000D                     view_log@vlog:
  1292                           	callstack 0
  1293                           
  1294                           ; 34 bytes @ 0xC
  1295   00000D                     	ds	2
  1296   00000F                     ?___fldiv:
  1297                           	callstack 0
  1298   00000F                     ___fldiv@b:
  1299                           	callstack 0
  1300                           
  1301                           ; 4 bytes @ 0xE
  1302   00000F                     	ds	2
  1303   000011                     login@i_372:
  1304                           	callstack 0
  1305                           
  1306                           ; 4 bytes @ 0x10
  1307   000011                     	ds	2
  1308   000013                     ___fldiv@a:
  1309                           	callstack 0
  1310                           
  1311                           ; 4 bytes @ 0x12
  1312   000013                     	ds	2
  1313   000015                     login@i_373:
  1314                           	callstack 0
  1315                           
  1316                           ; 4 bytes @ 0x14
  1317   000015                     	ds	2
  1318   000017                     ??___fldiv:
  1319                           
  1320                           ; 1 bytes @ 0x16
  1321   000017                     	ds	2
  1322   000019                     login@i_376:
  1323                           	callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x18
  1326   000019                     	ds	2
  1327   00001B                     ___fldiv@rem:
  1328                           	callstack 0
  1329                           
  1330                           ; 4 bytes @ 0x1A
  1331   00001B                     	ds	2
  1332   00001D                     login@key:
  1333                           	callstack 0
  1334                           
  1335                           ; 1 bytes @ 0x1C
  1336   00001D                     	ds	1
  1337   00001E                     download_log@address:
  1338                           	callstack 0
  1339                           
  1340                           ; 1 bytes @ 0x1D
  1341   00001E                     	ds	1
  1342   00001F                     ___fldiv@sign:
  1343                           	callstack 0
  1344   00001F                     download_log@vlog_pos:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x1E
  1348   00001F                     	ds	1
  1349   000020                     ___fldiv@new_exp:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x1F
  1353   000020                     	ds	1
  1354   000021                     download_log@next:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x20
  1358   000021                     	ds	1
  1359   000022                     ___fldiv@grs:
  1360                           	callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x21
  1363   000022                     	ds	1
  1364   000023                     download_log@i:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x22
  1368   000023                     	ds	3
  1369   000026                     ___fldiv@bexp:
  1370                           	callstack 0
  1371                           
  1372                           ; 1 bytes @ 0x25
  1373   000026                     	ds	1
  1374   000027                     ___fldiv@aexp:
  1375                           	callstack 0
  1376                           
  1377                           ; 1 bytes @ 0x26
  1378   000027                     	ds	1
  1379   000028                     ?___fltol:
  1380                           	callstack 0
  1381   000028                     ___fltol@f1:
  1382                           	callstack 0
  1383                           
  1384                           ; 4 bytes @ 0x27
  1385   000028                     	ds	4
  1386   00002C                     ??___fltol:
  1387                           
  1388                           ; 1 bytes @ 0x2B
  1389   00002C                     	ds	3
  1390   00002F                     view_log@address:
  1391                           	callstack 0
  1392                           
  1393                           ; 1 bytes @ 0x2E
  1394   00002F                     	ds	1
  1395   000030                     ___fltol@sign1:
  1396                           	callstack 0
  1397   000030                     view_log@i:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x2F
  1401   000030                     	ds	1
  1402   000031                     ___fltol@exp1:
  1403                           	callstack 0
  1404                           
  1405                           ; 1 bytes @ 0x30
  1406   000031                     	ds	1
  1407   000032                     speed_display@speed:
  1408                           	callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x31
  1411   000032                     	ds	2
  1412   000034                     default_screen@key:
  1413                           	callstack 0
  1414                           
  1415                           ; 1 bytes @ 0x33
  1416   000034                     	ds	1
  1417   000035                     
  1418                           ; 1 bytes @ 0x34
  1419 ;;
  1420 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1421 ;;
  1422 ;; *************** function _main *****************
  1423 ;; Defined at:
  1424 ;;		line 34 in file "main_.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1438 ;;      Params:         0       0       0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0
  1441 ;;      Totals:         0       0       0       0       0       0       0
  1442 ;;Total ram usage:        0 bytes
  1443 ;; Hardware stack levels required when called: 8
  1444 ;; This function calls:
  1445 ;;		_change_pass
  1446 ;;		_clear_log
  1447 ;;		_default_screen
  1448 ;;		_download_log
  1449 ;;		_init_config
  1450 ;;		_login
  1451 ;;		_menu
  1452 ;;		_read_switches
  1453 ;;		_view_log
  1454 ;; This function is called by:
  1455 ;;		Startup code after reset
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text0
  1460   001404                     __ptext0:
  1461                           	callstack 0
  1462   001404                     _main:
  1463                           	callstack 23
  1464   001404                     
  1465                           ;main_.c: 36:     init_config();
  1466   001404  EC1B  F011         	call	_init_config	;wreg free
  1467   001408                     l4550:
  1468                           
  1469                           ;main_.c: 39:         if (!pre_key) {
  1470   001408  504F               	movf	_pre_key^0,w,c
  1471   00140A  1050               	iorwf	(_pre_key+1)^0,w,c
  1472   00140C  A4D8               	btfss	status,2,c
  1473   00140E  EF0B  F00A         	goto	u3671
  1474   001412  EF0D  F00A         	goto	u3670
  1475   001416                     u3671:
  1476   001416  EF13  F00A         	goto	l4554
  1477   00141A                     u3670:
  1478   00141A                     
  1479                           ;main_.c: 40:             key = read_switches(1);
  1480   00141A  0E01               	movlw	1
  1481   00141C  EC6F  F00F         	call	_read_switches
  1482   001420  6E54               	movwf	_key^0,c
  1483                           
  1484                           ;main_.c: 41:         } else {
  1485   001422  EF17  F00A         	goto	l4556
  1486   001426                     l4554:
  1487                           
  1488                           ;main_.c: 42:             key = read_switches(0);
  1489   001426  0E00               	movlw	0
  1490   001428  EC6F  F00F         	call	_read_switches
  1491   00142C  6E54               	movwf	_key^0,c
  1492   00142E                     l4556:
  1493                           
  1494                           ;main_.c: 45:         if (screen_flag == 0) {
  1495   00142E  5051               	movf	_screen_flag^0,w,c
  1496   001430  1052               	iorwf	(_screen_flag+1)^0,w,c
  1497   001432  A4D8               	btfss	status,2,c
  1498   001434  EF1E  F00A         	goto	u3681
  1499   001438  EF20  F00A         	goto	u3680
  1500   00143C                     u3681:
  1501   00143C  EF23  F00A         	goto	l4560
  1502   001440                     u3680:
  1503   001440                     
  1504                           ;main_.c: 47:             default_screen(key);
  1505   001440  5054               	movf	_key^0,w,c
  1506   001442  EC41  F011         	call	_default_screen
  1507   001446                     l4560:
  1508                           
  1509                           ;main_.c: 50:         if (key == 5 && screen_flag == 0) {
  1510   001446  0E05               	movlw	5
  1511   001448  1854               	xorwf	_key^0,w,c
  1512   00144A  A4D8               	btfss	status,2,c
  1513   00144C  EF2A  F00A         	goto	u3691
  1514   001450  EF2C  F00A         	goto	u3690
  1515   001454                     u3691:
  1516   001454  EF39  F00A         	goto	l4566
  1517   001458                     u3690:
  1518   001458  5051               	movf	_screen_flag^0,w,c
  1519   00145A  1052               	iorwf	(_screen_flag+1)^0,w,c
  1520   00145C  A4D8               	btfss	status,2,c
  1521   00145E  EF33  F00A         	goto	u3701
  1522   001462  EF35  F00A         	goto	u3700
  1523   001466                     u3701:
  1524   001466  EF39  F00A         	goto	l4566
  1525   00146A                     u3700:
  1526   00146A                     
  1527                           ;main_.c: 53:             screen_flag = 1;
  1528   00146A  0E00               	movlw	0
  1529   00146C  6E52               	movwf	(_screen_flag+1)^0,c
  1530   00146E  0E01               	movlw	1
  1531   001470  6E51               	movwf	_screen_flag^0,c
  1532   001472                     l4566:
  1533                           
  1534                           ;main_.c: 56:         if (screen_flag == 1) {
  1535   001472  0451               	decf	_screen_flag^0,w,c
  1536   001474  1052               	iorwf	(_screen_flag+1)^0,w,c
  1537   001476  A4D8               	btfss	status,2,c
  1538   001478  EF40  F00A         	goto	u3711
  1539   00147C  EF42  F00A         	goto	u3710
  1540   001480                     u3711:
  1541   001480  EF45  F00A         	goto	l4570
  1542   001484                     u3710:
  1543   001484                     
  1544                           ;main_.c: 59:             login(key);
  1545   001484  5054               	movf	_key^0,w,c
  1546   001486  EC09  F000         	call	_login
  1547   00148A                     l4570:
  1548                           
  1549                           ;main_.c: 62:         if (screen_flag == 2) {
  1550   00148A  0E02               	movlw	2
  1551   00148C  1851               	xorwf	_screen_flag^0,w,c
  1552   00148E  1052               	iorwf	(_screen_flag+1)^0,w,c
  1553   001490  A4D8               	btfss	status,2,c
  1554   001492  EF4D  F00A         	goto	u3721
  1555   001496  EF4F  F00A         	goto	u3720
  1556   00149A                     u3721:
  1557   00149A  EF52  F00A         	goto	l4574
  1558   00149E                     u3720:
  1559   00149E                     
  1560                           ;main_.c: 63:             menu(key);
  1561   00149E  5054               	movf	_key^0,w,c
  1562   0014A0  EC21  F002         	call	_menu
  1563   0014A4                     l4574:
  1564                           
  1565                           ;main_.c: 66:         if (screen_flag == 3) {
  1566   0014A4  0E03               	movlw	3
  1567   0014A6  1851               	xorwf	_screen_flag^0,w,c
  1568   0014A8  1052               	iorwf	(_screen_flag+1)^0,w,c
  1569   0014AA  A4D8               	btfss	status,2,c
  1570   0014AC  EF5A  F00A         	goto	u3731
  1571   0014B0  EF5C  F00A         	goto	u3730
  1572   0014B4                     u3731:
  1573   0014B4  EF5E  F00A         	goto	l4578
  1574   0014B8                     u3730:
  1575   0014B8                     
  1576                           ;main_.c: 67:             view_log();
  1577   0014B8  ECF6  F005         	call	_view_log	;wreg free
  1578   0014BC                     l4578:
  1579                           
  1580                           ;main_.c: 69:         if (screen_flag == 6) {
  1581   0014BC  0E06               	movlw	6
  1582   0014BE  1851               	xorwf	_screen_flag^0,w,c
  1583   0014C0  1052               	iorwf	(_screen_flag+1)^0,w,c
  1584   0014C2  A4D8               	btfss	status,2,c
  1585   0014C4  EF66  F00A         	goto	u3741
  1586   0014C8  EF68  F00A         	goto	u3740
  1587   0014CC                     u3741:
  1588   0014CC  EF6A  F00A         	goto	l4582
  1589   0014D0                     u3740:
  1590   0014D0                     
  1591                           ;main_.c: 70:             clear_log();
  1592   0014D0  ECE5  F00D         	call	_clear_log	;wreg free
  1593   0014D4                     l4582:
  1594                           
  1595                           ;main_.c: 72:         if (screen_flag == 5) {
  1596   0014D4  0E05               	movlw	5
  1597   0014D6  1851               	xorwf	_screen_flag^0,w,c
  1598   0014D8  1052               	iorwf	(_screen_flag+1)^0,w,c
  1599   0014DA  A4D8               	btfss	status,2,c
  1600   0014DC  EF72  F00A         	goto	u3751
  1601   0014E0  EF74  F00A         	goto	u3750
  1602   0014E4                     u3751:
  1603   0014E4  EF76  F00A         	goto	l4586
  1604   0014E8                     u3750:
  1605   0014E8                     
  1606                           ;main_.c: 73:             download_log();
  1607   0014E8  EC59  F007         	call	_download_log	;wreg free
  1608   0014EC                     l4586:
  1609                           
  1610                           ;main_.c: 75:         if(screen_flag == 7)
  1611   0014EC  0E07               	movlw	7
  1612   0014EE  1851               	xorwf	_screen_flag^0,w,c
  1613   0014F0  1052               	iorwf	(_screen_flag+1)^0,w,c
  1614   0014F2  A4D8               	btfss	status,2,c
  1615   0014F4  EF7E  F00A         	goto	u3761
  1616   0014F8  EF80  F00A         	goto	u3760
  1617   0014FC                     u3761:
  1618   0014FC  EF84  F00A         	goto	l140
  1619   001500                     u3760:
  1620   001500                     
  1621                           ;main_.c: 76:         {;main_.c: 77:             change_pass();
  1622   001500  EC8F  F00B         	call	_change_pass	;wreg free
  1623   001504  EF04  F00A         	goto	l4550
  1624   001508                     l140:
  1625   001508  EF04  F00A         	goto	l4550
  1626   00150C  EF07  F000         	goto	start
  1627   001510                     __end_of_main:
  1628                           	callstack 0
  1629                           
  1630 ;; *************** function _view_log *****************
  1631 ;; Defined at:
  1632 ;;		line 139 in file "blackbox.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  i               2   47[COMRAM] int 
  1637 ;;  vlog           34   12[COMRAM] PTR unsigned char [17]
  1638 ;;		 -> RAM(1535), 
  1639 ;;  address         1   46[COMRAM] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1649 ;;      Params:         0       0       0       0       0       0       0
  1650 ;;      Locals:        37       0       0       0       0       0       0
  1651 ;;      Temps:          2       0       0       0       0       0       0
  1652 ;;      Totals:        39       0       0       0       0       0       0
  1653 ;;Total ram usage:       39 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; Hardware stack levels required when called: 5
  1656 ;; This function calls:
  1657 ;;		___awmod
  1658 ;;		_clcd_print
  1659 ;;		_clcd_putch
  1660 ;;		_clcd_write
  1661 ;;		_read_external_eeprom
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text1
  1668   000BEC                     __ptext1:
  1669                           	callstack 0
  1670   000BEC                     _view_log:
  1671                           	callstack 25
  1672   000BEC                     
  1673                           ;blackbox.c: 140:     char *vlog[17] = {};
  1674   000BEC  EE20  F00D         	lfsr	2,view_log@vlog
  1675   000BF0  0E21               	movlw	33
  1676   000BF2                     u3421:
  1677   000BF2  6ADE               	clrf	postinc2,c
  1678   000BF4  06E8               	decf	wreg,f,c
  1679   000BF6  E2FD               	bc	u3421
  1680   000BF8                     
  1681                           ;blackbox.c: 141:     static int shift_pos = 0, vlog_pos;;blackbox.c: 142:     char addr
      +                          ess;;blackbox.c: 144:     vlog_pos = (overflow) ? ((pos + 1) % 10) : 0;
  1682   000BF8  0100               	movlb	0	; () banked
  1683   000BFA  5187               	movf	_overflow& (0+255),w,b
  1684   000BFC  1188               	iorwf	(_overflow+1)& (0+255),w,b
  1685   000BFE  A4D8               	btfss	status,2,c
  1686   000C00  EF04  F006         	goto	u3431
  1687   000C04  EF06  F006         	goto	u3430
  1688   000C08                     u3431:
  1689   000C08  EF0C  F006         	goto	l4134
  1690   000C0C                     u3430:
  1691   000C0C                     
  1692                           ; BSR set to: 0
  1693   000C0C  0E00               	movlw	0
  1694   000C0E  6F86               	movwf	(view_log@vlog_pos+1)& (0+255),b
  1695   000C10  0E00               	movlw	0
  1696   000C12  6F85               	movwf	view_log@vlog_pos& (0+255),b
  1697   000C14  EF1C  F006         	goto	l4136
  1698   000C18                     l4134:
  1699                           
  1700                           ; BSR set to: 0
  1701   000C18  0E01               	movlw	1
  1702   000C1A  2458               	addwf	_pos^0,w,c
  1703   000C1C  6E01               	movwf	___awmod@dividend^0,c
  1704   000C1E  0E00               	movlw	0
  1705   000C20  2059               	addwfc	(_pos+1)^0,w,c
  1706   000C22  6E02               	movwf	(___awmod@dividend+1)^0,c
  1707   000C24  0E00               	movlw	0
  1708   000C26  6E04               	movwf	(___awmod@divisor+1)^0,c
  1709   000C28  0E0A               	movlw	10
  1710   000C2A  6E03               	movwf	___awmod@divisor^0,c
  1711   000C2C  EC3E  F00E         	call	___awmod	;wreg free
  1712   000C30  C001  F085         	movff	?___awmod,view_log@vlog_pos
  1713   000C34  C002  F086         	movff	?___awmod+1,view_log@vlog_pos+1
  1714   000C38                     l4136:
  1715                           
  1716                           ;blackbox.c: 145:     if (key != 0xFF) {
  1717   000C38  2854               	incf	_key^0,w,c
  1718   000C3A  B4D8               	btfsc	status,2,c
  1719   000C3C  EF22  F006         	goto	u3441
  1720   000C40  EF24  F006         	goto	u3440
  1721   000C44                     u3441:
  1722   000C44  EF4C  F006         	goto	l4152
  1723   000C48                     u3440:
  1724   000C48                     
  1725                           ;blackbox.c: 146:         press_delay++;
  1726   000C48  4A3D               	infsnz	_press_delay^0,f,c
  1727   000C4A  2A3E               	incf	(_press_delay+1)^0,f,c
  1728   000C4C                     
  1729                           ;blackbox.c: 147:         pre_key = key;
  1730   000C4C  C054  F04F         	movff	_key,_pre_key
  1731   000C50  6A50               	clrf	(_pre_key+1)^0,c
  1732   000C52                     
  1733                           ;blackbox.c: 148:         if (press_delay == 400) {
  1734   000C52  0E90               	movlw	144
  1735   000C54  183D               	xorwf	_press_delay^0,w,c
  1736   000C56  E106               	bnz	u3451
  1737   000C58  043E               	decf	(_press_delay+1)^0,w,c
  1738   000C5A  A4D8               	btfss	status,2,c
  1739   000C5C  EF32  F006         	goto	u3451
  1740   000C60  EF34  F006         	goto	u3450
  1741   000C64                     u3451:
  1742   000C64  EFCE  F006         	goto	l4182
  1743   000C68                     u3450:
  1744   000C68                     
  1745                           ;blackbox.c: 149:             press_delay = 0;
  1746   000C68  0E00               	movlw	0
  1747   000C6A  6E3E               	movwf	(_press_delay+1)^0,c
  1748   000C6C  0E00               	movlw	0
  1749   000C6E  6E3D               	movwf	_press_delay^0,c
  1750   000C70                     
  1751                           ;blackbox.c: 150:             if (key == 6) {
  1752   000C70  0E06               	movlw	6
  1753   000C72  1854               	xorwf	_key^0,w,c
  1754   000C74  A4D8               	btfss	status,2,c
  1755   000C76  EF3F  F006         	goto	u3461
  1756   000C7A  EF41  F006         	goto	u3460
  1757   000C7E                     u3461:
  1758   000C7E  EFCE  F006         	goto	l4182
  1759   000C82                     u3460:
  1760   000C82                     
  1761                           ;blackbox.c: 152:                 clcd_write(0x01, 0);
  1762   000C82  0E00               	movlw	0
  1763   000C84  6E01               	movwf	clcd_write@control_bit^0,c
  1764   000C86  0E01               	movlw	1
  1765   000C88  ECEA  F011         	call	_clcd_write
  1766   000C8C                     
  1767                           ;blackbox.c: 153:                 screen_flag = 2;
  1768   000C8C  0E00               	movlw	0
  1769   000C8E  6E52               	movwf	(_screen_flag+1)^0,c
  1770   000C90  0E02               	movlw	2
  1771   000C92  6E51               	movwf	_screen_flag^0,c
  1772   000C94  EFCE  F006         	goto	l4182
  1773   000C98                     l4152:
  1774   000C98  503D               	movf	_press_delay^0,w,c
  1775   000C9A  103E               	iorwf	(_press_delay+1)^0,w,c
  1776   000C9C  B4D8               	btfsc	status,2,c
  1777   000C9E  EF53  F006         	goto	u3471
  1778   000CA2  EF55  F006         	goto	u3470
  1779   000CA6                     u3471:
  1780   000CA6  EFCA  F006         	goto	l4180
  1781   000CAA                     u3470:
  1782   000CAA  0E90               	movlw	144
  1783   000CAC  5C3D               	subwf	_press_delay^0,w,c
  1784   000CAE  0E01               	movlw	1
  1785   000CB0  583E               	subwfb	(_press_delay+1)^0,w,c
  1786   000CB2  B0D8               	btfsc	status,0,c
  1787   000CB4  EF5E  F006         	goto	u3481
  1788   000CB8  EF60  F006         	goto	u3480
  1789   000CBC                     u3481:
  1790   000CBC  EFCA  F006         	goto	l4180
  1791   000CC0                     u3480:
  1792   000CC0                     
  1793                           ;blackbox.c: 157:         press_delay = 0;
  1794   000CC0  0E00               	movlw	0
  1795   000CC2  6E3E               	movwf	(_press_delay+1)^0,c
  1796   000CC4  0E00               	movlw	0
  1797   000CC6  6E3D               	movwf	_press_delay^0,c
  1798   000CC8                     
  1799                           ;blackbox.c: 158:         clcd_print("#   TIME   EV SP", (0x80 + (0)));
  1800   000CC8  0ED3               	movlw	low STR_23
  1801   000CCA  6E03               	movwf	clcd_print@data^0,c
  1802   000CCC  0E2E               	movlw	high STR_23
  1803   000CCE  6E04               	movwf	(clcd_print@data+1)^0,c
  1804   000CD0  0E80               	movlw	128
  1805   000CD2  6E05               	movwf	clcd_print@addr^0,c
  1806   000CD4  EC8C  F010         	call	_clcd_print	;wreg free
  1807   000CD8                     
  1808                           ;blackbox.c: 159:         if (pre_key == 6 && shift_pos < index) {
  1809   000CD8  0E06               	movlw	6
  1810   000CDA  184F               	xorwf	_pre_key^0,w,c
  1811   000CDC  1050               	iorwf	(_pre_key+1)^0,w,c
  1812   000CDE  A4D8               	btfss	status,2,c
  1813   000CE0  EF74  F006         	goto	u3491
  1814   000CE4  EF76  F006         	goto	u3490
  1815   000CE8                     u3491:
  1816   000CE8  EF9F  F006         	goto	l4170
  1817   000CEC                     u3490:
  1818   000CEC  503B               	movf	_index^0,w,c
  1819   000CEE  5C39               	subwf	view_log@shift_pos^0,w,c
  1820   000CF0  503A               	movf	(view_log@shift_pos+1)^0,w,c
  1821   000CF2  0A80               	xorlw	128
  1822   000CF4  6E0B               	movwf	??_view_log^0,c
  1823   000CF6  503C               	movf	(_index+1)^0,w,c
  1824   000CF8  0A80               	xorlw	128
  1825   000CFA  580B               	subwfb	??_view_log^0,w,c
  1826   000CFC  B0D8               	btfsc	status,0,c
  1827   000CFE  EF83  F006         	goto	u3501
  1828   000D02  EF85  F006         	goto	u3500
  1829   000D06                     u3501:
  1830   000D06  EF9F  F006         	goto	l4170
  1831   000D0A                     u3500:
  1832   000D0A                     
  1833                           ;blackbox.c: 160:             if (shift_pos < 10)
  1834   000D0A  BE3A               	btfsc	(view_log@shift_pos+1)^0,7,c
  1835   000D0C  EF93  F006         	goto	u3510
  1836   000D10  503A               	movf	(view_log@shift_pos+1)^0,w,c
  1837   000D12  E107               	bnz	u3511
  1838   000D14  0E0A               	movlw	10
  1839   000D16  5C39               	subwf	view_log@shift_pos^0,w,c
  1840   000D18  B0D8               	btfsc	status,0,c
  1841   000D1A  EF91  F006         	goto	u3511
  1842   000D1E  EF93  F006         	goto	u3510
  1843   000D22                     u3511:
  1844   000D22  EF95  F006         	goto	l4168
  1845   000D26                     u3510:
  1846   000D26                     
  1847                           ;blackbox.c: 161:                 shift_pos++;
  1848   000D26  4A39               	infsnz	view_log@shift_pos^0,f,c
  1849   000D28  2A3A               	incf	(view_log@shift_pos+1)^0,f,c
  1850   000D2A                     l4168:
  1851                           
  1852                           ;blackbox.c: 162:             clcd_print("                ", (0xC0 + (0)));
  1853   000D2A  0E5B               	movlw	low (STR_42+1)
  1854   000D2C  6E03               	movwf	clcd_print@data^0,c
  1855   000D2E  0E2E               	movlw	high (STR_42+1)
  1856   000D30  6E04               	movwf	(clcd_print@data+1)^0,c
  1857   000D32  0EC0               	movlw	192
  1858   000D34  6E05               	movwf	clcd_print@addr^0,c
  1859   000D36  EC8C  F010         	call	_clcd_print	;wreg free
  1860                           
  1861                           ;blackbox.c: 163:         } else if (pre_key == 5 && shift_pos > 0) {
  1862   000D3A  EFCE  F006         	goto	l4182
  1863   000D3E                     l4170:
  1864   000D3E  0E05               	movlw	5
  1865   000D40  184F               	xorwf	_pre_key^0,w,c
  1866   000D42  1050               	iorwf	(_pre_key+1)^0,w,c
  1867   000D44  A4D8               	btfss	status,2,c
  1868   000D46  EFA7  F006         	goto	u3521
  1869   000D4A  EFA9  F006         	goto	u3520
  1870   000D4E                     u3521:
  1871   000D4E  EFCE  F006         	goto	l4182
  1872   000D52                     u3520:
  1873   000D52  BE3A               	btfsc	(view_log@shift_pos+1)^0,7,c
  1874   000D54  EFB4  F006         	goto	u3531
  1875   000D58  503A               	movf	(view_log@shift_pos+1)^0,w,c
  1876   000D5A  E108               	bnz	u3530
  1877   000D5C  0439               	decf	view_log@shift_pos^0,w,c
  1878   000D5E  A0D8               	btfss	status,0,c
  1879   000D60  EFB4  F006         	goto	u3531
  1880   000D64  EFB6  F006         	goto	u3530
  1881   000D68                     u3531:
  1882   000D68  EFCE  F006         	goto	l4182
  1883   000D6C                     u3530:
  1884   000D6C                     
  1885                           ;blackbox.c: 164:             if (shift_pos > -1)
  1886   000D6C  BE3A               	btfsc	(view_log@shift_pos+1)^0,7,c
  1887   000D6E  EFBB  F006         	goto	u3541
  1888   000D72  EFBD  F006         	goto	u3540
  1889   000D76                     u3541:
  1890   000D76  EFC0  F006         	goto	l4178
  1891   000D7A                     u3540:
  1892   000D7A                     
  1893                           ;blackbox.c: 165:                 shift_pos--;
  1894   000D7A  0639               	decf	view_log@shift_pos^0,f,c
  1895   000D7C  A0D8               	btfss	status,0,c
  1896   000D7E  063A               	decf	(view_log@shift_pos+1)^0,f,c
  1897   000D80                     l4178:
  1898                           
  1899                           ;blackbox.c: 166:             clcd_print("                ", (0xC0 + (0)));
  1900   000D80  0E5B               	movlw	low (STR_42+1)
  1901   000D82  6E03               	movwf	clcd_print@data^0,c
  1902   000D84  0E2E               	movlw	high (STR_42+1)
  1903   000D86  6E04               	movwf	(clcd_print@data+1)^0,c
  1904   000D88  0EC0               	movlw	192
  1905   000D8A  6E05               	movwf	clcd_print@addr^0,c
  1906   000D8C  EC8C  F010         	call	_clcd_print	;wreg free
  1907   000D90  EFCE  F006         	goto	l4182
  1908   000D94                     l4180:
  1909                           
  1910                           ;blackbox.c: 169:         press_delay = 0;
  1911   000D94  0E00               	movlw	0
  1912   000D96  6E3E               	movwf	(_press_delay+1)^0,c
  1913   000D98  0E00               	movlw	0
  1914   000D9A  6E3D               	movwf	_press_delay^0,c
  1915   000D9C                     l4182:
  1916                           
  1917                           ;blackbox.c: 171:     vlog_pos = (vlog_pos + shift_pos) % 10;
  1918   000D9C  5039               	movf	view_log@shift_pos^0,w,c
  1919   000D9E  0100               	movlb	0	; () banked
  1920   000DA0  2585               	addwf	view_log@vlog_pos& (0+255),w,b
  1921   000DA2  6E01               	movwf	___awmod@dividend^0,c
  1922   000DA4  503A               	movf	(view_log@shift_pos+1)^0,w,c
  1923   000DA6  2186               	addwfc	(view_log@vlog_pos+1)& (0+255),w,b
  1924   000DA8  6E02               	movwf	(___awmod@dividend+1)^0,c
  1925   000DAA  0E00               	movlw	0
  1926   000DAC  6E04               	movwf	(___awmod@divisor+1)^0,c
  1927   000DAE  0E0A               	movlw	10
  1928   000DB0  6E03               	movwf	___awmod@divisor^0,c
  1929   000DB2  EC3E  F00E         	call	___awmod	;wreg free
  1930   000DB6  C001  F085         	movff	?___awmod,view_log@vlog_pos
  1931   000DBA  C002  F086         	movff	?___awmod+1,view_log@vlog_pos+1
  1932   000DBE                     
  1933                           ;blackbox.c: 172:     for (int i = 0; i < 16; i++) {
  1934   000DBE  0E00               	movlw	0
  1935   000DC0  6E31               	movwf	(view_log@i+1)^0,c
  1936   000DC2  0E00               	movlw	0
  1937   000DC4  6E30               	movwf	view_log@i^0,c
  1938   000DC6                     l4190:
  1939                           
  1940                           ;blackbox.c: 173:         address = vlog_pos * 16 + 5 + i;
  1941   000DC6  0100               	movlb	0	; () banked
  1942   000DC8  5185               	movf	view_log@vlog_pos& (0+255),w,b
  1943   000DCA  0D10               	mullw	16
  1944   000DCC  50F3               	movf	243,w,c
  1945   000DCE  2430               	addwf	view_log@i^0,w,c
  1946   000DD0  0F05               	addlw	5
  1947   000DD2  6E2F               	movwf	view_log@address^0,c
  1948   000DD4                     
  1949                           ; BSR set to: 0
  1950                           ;blackbox.c: 174:         vlog[i] = read_external_eeprom(address);
  1951   000DD4  502F               	movf	view_log@address^0,w,c
  1952   000DD6  EC68  F012         	call	_read_external_eeprom
  1953   000DDA  6E0B               	movwf	??_view_log^0,c
  1954   000DDC  6A0C               	clrf	(??_view_log+1)^0,c
  1955   000DDE  90D8               	bcf	status,0,c
  1956   000DE0  3430               	rlcf	view_log@i^0,w,c
  1957   000DE2  6ED9               	movwf	fsr2l,c
  1958   000DE4  3431               	rlcf	(view_log@i+1)^0,w,c
  1959   000DE6  6EDA               	movwf	fsr2h,c
  1960   000DE8  0E0D               	movlw	low view_log@vlog
  1961   000DEA  26D9               	addwf	fsr2l,f,c
  1962   000DEC  0E00               	movlw	high view_log@vlog
  1963   000DEE  22DA               	addwfc	fsr2h,f,c
  1964   000DF0  C00B  FFDE         	movff	??_view_log,postinc2
  1965   000DF4  C00C  FFDD         	movff	??_view_log+1,postdec2
  1966   000DF8                     
  1967                           ;blackbox.c: 175:     }
  1968   000DF8  4A30               	infsnz	view_log@i^0,f,c
  1969   000DFA  2A31               	incf	(view_log@i+1)^0,f,c
  1970   000DFC  BE31               	btfsc	(view_log@i+1)^0,7,c
  1971   000DFE  EF0A  F007         	goto	u3551
  1972   000E02  5031               	movf	(view_log@i+1)^0,w,c
  1973   000E04  E109               	bnz	u3550
  1974   000E06  0E10               	movlw	16
  1975   000E08  5C30               	subwf	view_log@i^0,w,c
  1976   000E0A  A0D8               	btfss	status,0,c
  1977   000E0C  EF0A  F007         	goto	u3551
  1978   000E10  EF0C  F007         	goto	u3550
  1979   000E14                     u3551:
  1980   000E14  EFE3  F006         	goto	l4190
  1981   000E18                     u3550:
  1982   000E18                     
  1983                           ;blackbox.c: 177:     clcd_putch(shift_pos + '0', (0xC0 + (0)));
  1984   000E18  0EC0               	movlw	192
  1985   000E1A  6E09               	movwf	clcd_putch@addr^0,c
  1986   000E1C  5039               	movf	view_log@shift_pos^0,w,c
  1987   000E1E  0F30               	addlw	48
  1988   000E20  EC9C  F012         	call	_clcd_putch
  1989   000E24                     
  1990                           ;blackbox.c: 178:     clcd_putch(vlog[0], (0xC0 + (2)));
  1991   000E24  0EC2               	movlw	194
  1992   000E26  6E09               	movwf	clcd_putch@addr^0,c
  1993   000E28  500D               	movf	view_log@vlog^0,w,c
  1994   000E2A  EC9C  F012         	call	_clcd_putch
  1995   000E2E                     
  1996                           ;blackbox.c: 179:     clcd_putch(vlog[1], (0xC0 + (3)));
  1997   000E2E  0EC3               	movlw	195
  1998   000E30  6E09               	movwf	clcd_putch@addr^0,c
  1999   000E32  500F               	movf	(view_log@vlog+2)^0,w,c
  2000   000E34  EC9C  F012         	call	_clcd_putch
  2001   000E38                     
  2002                           ;blackbox.c: 180:     clcd_putch(vlog[2], (0xC0 + (4)));
  2003   000E38  0EC4               	movlw	196
  2004   000E3A  6E09               	movwf	clcd_putch@addr^0,c
  2005   000E3C  5011               	movf	(view_log@vlog+4)^0,w,c
  2006   000E3E  EC9C  F012         	call	_clcd_putch
  2007   000E42                     
  2008                           ;blackbox.c: 181:     clcd_putch(vlog[3], (0xC0 + (5)));
  2009   000E42  0EC5               	movlw	197
  2010   000E44  6E09               	movwf	clcd_putch@addr^0,c
  2011   000E46  5013               	movf	(view_log@vlog+6)^0,w,c
  2012   000E48  EC9C  F012         	call	_clcd_putch
  2013   000E4C                     
  2014                           ;blackbox.c: 182:     clcd_putch(vlog[4], (0xC0 + (6)));
  2015   000E4C  0EC6               	movlw	198
  2016   000E4E  6E09               	movwf	clcd_putch@addr^0,c
  2017   000E50  5015               	movf	(view_log@vlog+8)^0,w,c
  2018   000E52  EC9C  F012         	call	_clcd_putch
  2019   000E56                     
  2020                           ;blackbox.c: 183:     clcd_putch(vlog[5], (0xC0 + (7)));
  2021   000E56  0EC7               	movlw	199
  2022   000E58  6E09               	movwf	clcd_putch@addr^0,c
  2023   000E5A  5017               	movf	(view_log@vlog+10)^0,w,c
  2024   000E5C  EC9C  F012         	call	_clcd_putch
  2025   000E60                     
  2026                           ;blackbox.c: 184:     clcd_putch(vlog[6], (0xC0 + (8)));
  2027   000E60  0EC8               	movlw	200
  2028   000E62  6E09               	movwf	clcd_putch@addr^0,c
  2029   000E64  5019               	movf	(view_log@vlog+12)^0,w,c
  2030   000E66  EC9C  F012         	call	_clcd_putch
  2031   000E6A                     
  2032                           ;blackbox.c: 185:     clcd_putch(vlog[7], (0xC0 + (9)));
  2033   000E6A  0EC9               	movlw	201
  2034   000E6C  6E09               	movwf	clcd_putch@addr^0,c
  2035   000E6E  501B               	movf	(view_log@vlog+14)^0,w,c
  2036   000E70  EC9C  F012         	call	_clcd_putch
  2037   000E74                     
  2038                           ;blackbox.c: 186:     clcd_putch(vlog[8], (0xC0 + (10)));
  2039   000E74  0ECA               	movlw	202
  2040   000E76  6E09               	movwf	clcd_putch@addr^0,c
  2041   000E78  501D               	movf	(view_log@vlog+16)^0,w,c
  2042   000E7A  EC9C  F012         	call	_clcd_putch
  2043   000E7E                     
  2044                           ;blackbox.c: 187:     clcd_putch(vlog[10], (0xC0 + (11)));
  2045   000E7E  0ECB               	movlw	203
  2046   000E80  6E09               	movwf	clcd_putch@addr^0,c
  2047   000E82  5021               	movf	(view_log@vlog+20)^0,w,c
  2048   000E84  EC9C  F012         	call	_clcd_putch
  2049   000E88                     
  2050                           ;blackbox.c: 188:     clcd_putch(vlog[11], (0xC0 + (12)));
  2051   000E88  0ECC               	movlw	204
  2052   000E8A  6E09               	movwf	clcd_putch@addr^0,c
  2053   000E8C  5023               	movf	(view_log@vlog+22)^0,w,c
  2054   000E8E  EC9C  F012         	call	_clcd_putch
  2055   000E92                     
  2056                           ;blackbox.c: 189:     clcd_putch(vlog[12], (0xC0 + (13)));
  2057   000E92  0ECD               	movlw	205
  2058   000E94  6E09               	movwf	clcd_putch@addr^0,c
  2059   000E96  5025               	movf	(view_log@vlog+24)^0,w,c
  2060   000E98  EC9C  F012         	call	_clcd_putch
  2061   000E9C                     
  2062                           ;blackbox.c: 190:     clcd_putch(vlog[14], (0xC0 + (14)));
  2063   000E9C  0ECE               	movlw	206
  2064   000E9E  6E09               	movwf	clcd_putch@addr^0,c
  2065   000EA0  5029               	movf	(view_log@vlog+28)^0,w,c
  2066   000EA2  EC9C  F012         	call	_clcd_putch
  2067   000EA6                     
  2068                           ;blackbox.c: 191:     clcd_putch(vlog[15], (0xC0 + (15)));
  2069   000EA6  0ECF               	movlw	207
  2070   000EA8  6E09               	movwf	clcd_putch@addr^0,c
  2071   000EAA  502B               	movf	(view_log@vlog+30)^0,w,c
  2072   000EAC  EC9C  F012         	call	_clcd_putch
  2073   000EB0  0012               	return		;funcret
  2074   000EB2                     __end_of_view_log:
  2075                           	callstack 0
  2076                           
  2077 ;; *************** function _read_switches *****************
  2078 ;; Defined at:
  2079 ;;		line 88 in file "matrix_keypad.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  detection_ty    1    wreg     unsigned char 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  detection_ty    1    0[COMRAM] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      unsigned char 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2093 ;;      Params:         0       0       0       0       0       0       0
  2094 ;;      Locals:         1       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0
  2096 ;;      Totals:         1       0       0       0       0       0       0
  2097 ;;Total ram usage:        1 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; Hardware stack levels required when called: 2
  2100 ;; This function calls:
  2101 ;;		_scan_key
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text2
  2108   001EDE                     __ptext2:
  2109                           	callstack 0
  2110   001EDE                     _read_switches:
  2111                           	callstack 28
  2112                           
  2113                           ;incstack = 0
  2114                           ;read_switches@detection_type stored from wreg
  2115   001EDE  6E01               	movwf	read_switches@detection_type^0,c
  2116   001EE0                     
  2117                           ;matrix_keypad.c: 88: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 89: {;matrix_keypad.c: 90:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 92:  if (detection_type == 1)
  2118   001EE0  0401               	decf	read_switches@detection_type^0,w,c
  2119   001EE2  A4D8               	btfss	status,2,c
  2120   001EE4  EF76  F00F         	goto	u1131
  2121   001EE8  EF78  F00F         	goto	u1130
  2122   001EEC                     u1131:
  2123   001EEC  EF9C  F00F         	goto	l2300
  2124   001EF0                     u1130:
  2125   001EF0                     
  2126                           ;matrix_keypad.c: 93:  {;matrix_keypad.c: 94:   key = scan_key();
  2127   001EF0  EC88  F00A         	call	_scan_key	;wreg free
  2128   001EF4  6E55               	movwf	read_switches@key^0,c
  2129   001EF6                     
  2130                           ;matrix_keypad.c: 95:   if(key != 0xFF && once )
  2131   001EF6  2855               	incf	read_switches@key^0,w,c
  2132   001EF8  B4D8               	btfsc	status,2,c
  2133   001EFA  EF81  F00F         	goto	u1141
  2134   001EFE  EF83  F00F         	goto	u1140
  2135   001F02                     u1141:
  2136   001F02  EF90  F00F         	goto	l2296
  2137   001F06                     u1140:
  2138   001F06  505C               	movf	read_switches@once^0,w,c
  2139   001F08  B4D8               	btfsc	status,2,c
  2140   001F0A  EF89  F00F         	goto	u1151
  2141   001F0E  EF8B  F00F         	goto	u1150
  2142   001F12                     u1151:
  2143   001F12  EF90  F00F         	goto	l2296
  2144   001F16                     u1150:
  2145   001F16                     
  2146                           ;matrix_keypad.c: 96:   {;matrix_keypad.c: 97:    once = 0;
  2147   001F16  0E00               	movlw	0
  2148   001F18  6E5C               	movwf	read_switches@once^0,c
  2149                           
  2150                           ;matrix_keypad.c: 98:    return key;
  2151   001F1A  5055               	movf	read_switches@key^0,w,c
  2152   001F1C  EFA9  F00F         	goto	l81
  2153   001F20                     l2296:
  2154   001F20  2855               	incf	read_switches@key^0,w,c
  2155   001F22  A4D8               	btfss	status,2,c
  2156   001F24  EF96  F00F         	goto	u1161
  2157   001F28  EF98  F00F         	goto	u1160
  2158   001F2C                     u1161:
  2159   001F2C  EFA8  F00F         	goto	l2306
  2160   001F30                     u1160:
  2161   001F30                     
  2162                           ;matrix_keypad.c: 101:   {;matrix_keypad.c: 102:    once = 1;
  2163   001F30  0E01               	movlw	1
  2164   001F32  6E5C               	movwf	read_switches@once^0,c
  2165   001F34  EFA8  F00F         	goto	l2306
  2166   001F38                     l2300:
  2167   001F38  5001               	movf	read_switches@detection_type^0,w,c
  2168   001F3A  A4D8               	btfss	status,2,c
  2169   001F3C  EFA2  F00F         	goto	u1171
  2170   001F40  EFA4  F00F         	goto	u1170
  2171   001F44                     u1171:
  2172   001F44  EFA8  F00F         	goto	l2306
  2173   001F48                     u1170:
  2174   001F48                     
  2175                           ;matrix_keypad.c: 106:  {;matrix_keypad.c: 107:   return scan_key();
  2176   001F48  EC88  F00A         	call	_scan_key	;wreg free
  2177   001F4C  EFA9  F00F         	goto	l81
  2178   001F50                     l2306:
  2179                           
  2180                           ;matrix_keypad.c: 110:  return 0xFF;
  2181   001F50  0EFF               	movlw	255
  2182   001F52                     l81:
  2183   001F52  0012               	return		;funcret
  2184   001F54                     __end_of_read_switches:
  2185                           	callstack 0
  2186                           
  2187 ;; *************** function _scan_key *****************
  2188 ;; Defined at:
  2189 ;;		line 18 in file "matrix_keypad.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      unsigned char 
  2196 ;; Registers used:
  2197 ;;		wreg
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2203 ;;      Params:         0       0       0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0       0       0
  2206 ;;      Totals:         0       0       0       0       0       0       0
  2207 ;;Total ram usage:        0 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 1
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_read_switches
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text3
  2218   001510                     __ptext3:
  2219                           	callstack 0
  2220   001510                     _scan_key:
  2221                           	callstack 28
  2222   001510                     
  2223                           ;matrix_keypad.c: 20:  PORTBbits.RB5 = 0;
  2224   001510  9A81               	bcf	129,5,c	;volatile
  2225                           
  2226                           ;matrix_keypad.c: 21:  PORTBbits.RB6 = 1;
  2227   001512  8C81               	bsf	129,6,c	;volatile
  2228                           
  2229                           ;matrix_keypad.c: 22:  PORTBbits.RB7 = 1;
  2230   001514  8E81               	bsf	129,7,c	;volatile
  2231                           
  2232                           ;matrix_keypad.c: 24:  if (PORTBbits.RB1 == 0)
  2233   001516  B281               	btfsc	129,1,c	;volatile
  2234   001518  EF90  F00A         	goto	u731
  2235   00151C  EF92  F00A         	goto	u730
  2236   001520                     u731:
  2237   001520  EF95  F00A         	goto	l51
  2238   001524                     u730:
  2239   001524                     
  2240                           ;matrix_keypad.c: 25:  {;matrix_keypad.c: 26:   return 1;
  2241   001524  0E01               	movlw	1
  2242   001526  EF0B  F00B         	goto	l52
  2243   00152A                     l51:
  2244   00152A  B481               	btfsc	129,2,c	;volatile
  2245   00152C  EF9A  F00A         	goto	u741
  2246   001530  EF9C  F00A         	goto	u740
  2247   001534                     u741:
  2248   001534  EF9F  F00A         	goto	l54
  2249   001538                     u740:
  2250   001538                     
  2251                           ;matrix_keypad.c: 29:  {;matrix_keypad.c: 30:   return 4;
  2252   001538  0E04               	movlw	4
  2253   00153A  EF0B  F00B         	goto	l52
  2254   00153E                     l54:
  2255   00153E  B681               	btfsc	129,3,c	;volatile
  2256   001540  EFA4  F00A         	goto	u751
  2257   001544  EFA6  F00A         	goto	u750
  2258   001548                     u751:
  2259   001548  EFA9  F00A         	goto	l56
  2260   00154C                     u750:
  2261   00154C                     
  2262                           ;matrix_keypad.c: 33:  {;matrix_keypad.c: 34:   return 7;
  2263   00154C  0E07               	movlw	7
  2264   00154E  EF0B  F00B         	goto	l52
  2265   001552                     l56:
  2266   001552  B881               	btfsc	129,4,c	;volatile
  2267   001554  EFAE  F00A         	goto	u761
  2268   001558  EFB0  F00A         	goto	u760
  2269   00155C                     u761:
  2270   00155C  EFB3  F00A         	goto	l53
  2271   001560                     u760:
  2272   001560                     
  2273                           ;matrix_keypad.c: 37:  {;matrix_keypad.c: 38:   return 10;
  2274   001560  0E0A               	movlw	10
  2275   001562  EF0B  F00B         	goto	l52
  2276   001566                     l53:
  2277                           
  2278                           ;matrix_keypad.c: 41:  PORTBbits.RB5 = 1;
  2279   001566  8A81               	bsf	129,5,c	;volatile
  2280                           
  2281                           ;matrix_keypad.c: 42:  PORTBbits.RB6 = 0;
  2282   001568  9C81               	bcf	129,6,c	;volatile
  2283                           
  2284                           ;matrix_keypad.c: 43:  PORTBbits.RB7 = 1;
  2285   00156A  8E81               	bsf	129,7,c	;volatile
  2286                           
  2287                           ;matrix_keypad.c: 45:  if (PORTBbits.RB1 == 0)
  2288   00156C  B281               	btfsc	129,1,c	;volatile
  2289   00156E  EFBB  F00A         	goto	u771
  2290   001572  EFBD  F00A         	goto	u770
  2291   001576                     u771:
  2292   001576  EFC0  F00A         	goto	l59
  2293   00157A                     u770:
  2294   00157A                     
  2295                           ;matrix_keypad.c: 46:  {;matrix_keypad.c: 47:   return 2;
  2296   00157A  0E02               	movlw	2
  2297   00157C  EF0B  F00B         	goto	l52
  2298   001580                     l59:
  2299   001580  B481               	btfsc	129,2,c	;volatile
  2300   001582  EFC5  F00A         	goto	u781
  2301   001586  EFC7  F00A         	goto	u780
  2302   00158A                     u781:
  2303   00158A  EFCA  F00A         	goto	l61
  2304   00158E                     u780:
  2305   00158E                     
  2306                           ;matrix_keypad.c: 50:  {;matrix_keypad.c: 51:   return 5;
  2307   00158E  0E05               	movlw	5
  2308   001590  EF0B  F00B         	goto	l52
  2309   001594                     l61:
  2310   001594  B681               	btfsc	129,3,c	;volatile
  2311   001596  EFCF  F00A         	goto	u791
  2312   00159A  EFD1  F00A         	goto	u790
  2313   00159E                     u791:
  2314   00159E  EFD4  F00A         	goto	l63
  2315   0015A2                     u790:
  2316   0015A2                     
  2317                           ;matrix_keypad.c: 54:  {;matrix_keypad.c: 55:   return 8;
  2318   0015A2  0E08               	movlw	8
  2319   0015A4  EF0B  F00B         	goto	l52
  2320   0015A8                     l63:
  2321   0015A8  B881               	btfsc	129,4,c	;volatile
  2322   0015AA  EFD9  F00A         	goto	u801
  2323   0015AE  EFDB  F00A         	goto	u800
  2324   0015B2                     u801:
  2325   0015B2  EFDE  F00A         	goto	l60
  2326   0015B6                     u800:
  2327   0015B6                     
  2328                           ;matrix_keypad.c: 58:  {;matrix_keypad.c: 59:   return 11;
  2329   0015B6  0E0B               	movlw	11
  2330   0015B8  EF0B  F00B         	goto	l52
  2331   0015BC                     l60:
  2332                           
  2333                           ;matrix_keypad.c: 62:  PORTBbits.RB5 = 1;
  2334   0015BC  8A81               	bsf	129,5,c	;volatile
  2335                           
  2336                           ;matrix_keypad.c: 63:  PORTBbits.RB6 = 1;
  2337   0015BE  8C81               	bsf	129,6,c	;volatile
  2338                           
  2339                           ;matrix_keypad.c: 64:  PORTBbits.RB7 = 0;
  2340   0015C0  9E81               	bcf	129,7,c	;volatile
  2341                           
  2342                           ;matrix_keypad.c: 66:  PORTBbits.RB7 = 0;
  2343   0015C2  9E81               	bcf	129,7,c	;volatile
  2344                           
  2345                           ;matrix_keypad.c: 68:  if (PORTBbits.RB1 == 0)
  2346   0015C4  B281               	btfsc	129,1,c	;volatile
  2347   0015C6  EFE7  F00A         	goto	u811
  2348   0015CA  EFE9  F00A         	goto	u810
  2349   0015CE                     u811:
  2350   0015CE  EFEC  F00A         	goto	l66
  2351   0015D2                     u810:
  2352   0015D2                     
  2353                           ;matrix_keypad.c: 69:  {;matrix_keypad.c: 70:   return 3;
  2354   0015D2  0E03               	movlw	3
  2355   0015D4  EF0B  F00B         	goto	l52
  2356   0015D8                     l66:
  2357   0015D8  B481               	btfsc	129,2,c	;volatile
  2358   0015DA  EFF1  F00A         	goto	u821
  2359   0015DE  EFF3  F00A         	goto	u820
  2360   0015E2                     u821:
  2361   0015E2  EFF6  F00A         	goto	l68
  2362   0015E6                     u820:
  2363   0015E6                     
  2364                           ;matrix_keypad.c: 73:  {;matrix_keypad.c: 74:   return 6;
  2365   0015E6  0E06               	movlw	6
  2366   0015E8  EF0B  F00B         	goto	l52
  2367   0015EC                     l68:
  2368   0015EC  B681               	btfsc	129,3,c	;volatile
  2369   0015EE  EFFB  F00A         	goto	u831
  2370   0015F2  EFFD  F00A         	goto	u830
  2371   0015F6                     u831:
  2372   0015F6  EF00  F00B         	goto	l70
  2373   0015FA                     u830:
  2374   0015FA                     
  2375                           ;matrix_keypad.c: 77:  {;matrix_keypad.c: 78:   return 9;
  2376   0015FA  0E09               	movlw	9
  2377   0015FC  EF0B  F00B         	goto	l52
  2378   001600                     l70:
  2379   001600  B881               	btfsc	129,4,c	;volatile
  2380   001602  EF05  F00B         	goto	u841
  2381   001606  EF07  F00B         	goto	u840
  2382   00160A                     u841:
  2383   00160A  EF0A  F00B         	goto	l69
  2384   00160E                     u840:
  2385   00160E                     
  2386                           ;matrix_keypad.c: 81:  {;matrix_keypad.c: 82:   return 12;
  2387   00160E  0E0C               	movlw	12
  2388   001610  EF0B  F00B         	goto	l52
  2389   001614                     l69:
  2390   001614                     
  2391                           ;matrix_keypad.c: 85:  return 0xFF;
  2392   001614  0EFF               	movlw	255
  2393   001616                     l52:
  2394   001616  0012               	return		;funcret
  2395   001618                     __end_of_scan_key:
  2396                           	callstack 0
  2397                           
  2398 ;; *************** function _menu *****************
  2399 ;; Defined at:
  2400 ;;		line 364 in file "blackbox.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  key             1    wreg     unsigned char 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  key             1   10[COMRAM] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2414 ;;      Params:         0       0       0       0       0       0       0
  2415 ;;      Locals:         1       0       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0
  2417 ;;      Totals:         1       0       0       0       0       0       0
  2418 ;;Total ram usage:        1 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 3
  2421 ;; This function calls:
  2422 ;;		___awmod
  2423 ;;		_clcd_print
  2424 ;;		_clcd_putch
  2425 ;;		_clcd_write
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text4
  2432   000442                     __ptext4:
  2433                           	callstack 0
  2434   000442                     _menu:
  2435                           	callstack 27
  2436                           
  2437                           ;incstack = 0
  2438                           ;menu@key stored from wreg
  2439   000442  6E0B               	movwf	menu@key^0,c
  2440   000444                     
  2441                           ;blackbox.c: 365:     if (arrow_pos == 1) {
  2442   000444  0456               	decf	_arrow_pos^0,w,c
  2443   000446  1057               	iorwf	(_arrow_pos+1)^0,w,c
  2444   000448  A4D8               	btfss	status,2,c
  2445   00044A  EF29  F002         	goto	u3191
  2446   00044E  EF2B  F002         	goto	u3190
  2447   000452                     u3191:
  2448   000452  EF57  F002         	goto	l4008
  2449   000456                     u3190:
  2450   000456                     
  2451                           ;blackbox.c: 366:         clcd_print("->", (0x80 + (0)));
  2452   000456  0EE3               	movlw	low STR_32
  2453   000458  6E03               	movwf	clcd_print@data^0,c
  2454   00045A  0E2F               	movlw	high STR_32
  2455   00045C  6E04               	movwf	(clcd_print@data+1)^0,c
  2456   00045E  0E80               	movlw	128
  2457   000460  6E05               	movwf	clcd_print@addr^0,c
  2458   000462  EC8C  F010         	call	_clcd_print	;wreg free
  2459   000466                     
  2460                           ;blackbox.c: 367:         clcd_print(main_menu[menu_pos], (0x80 + (3)));
  2461   000466  90D8               	bcf	status,0,c
  2462   000468  343F               	rlcf	_menu_pos^0,w,c
  2463   00046A  6ED9               	movwf	fsr2l,c
  2464   00046C  3440               	rlcf	(_menu_pos+1)^0,w,c
  2465   00046E  6EDA               	movwf	fsr2h,c
  2466   000470  0ED0               	movlw	low _main_menu
  2467   000472  26D9               	addwf	fsr2l,f,c
  2468   000474  0E00               	movlw	high _main_menu
  2469   000476  22DA               	addwfc	fsr2h,f,c
  2470   000478  CFDE F003          	movff	postinc2,clcd_print@data
  2471   00047C  CFDD F004          	movff	postdec2,clcd_print@data+1
  2472   000480  0E83               	movlw	131
  2473   000482  6E05               	movwf	clcd_print@addr^0,c
  2474   000484  EC8C  F010         	call	_clcd_print	;wreg free
  2475   000488                     
  2476                           ;blackbox.c: 368:         clcd_print(main_menu[menu_pos + 1], (0xC0 + (3)));
  2477   000488  90D8               	bcf	status,0,c
  2478   00048A  343F               	rlcf	_menu_pos^0,w,c
  2479   00048C  6ED9               	movwf	fsr2l,c
  2480   00048E  3440               	rlcf	(_menu_pos+1)^0,w,c
  2481   000490  6EDA               	movwf	fsr2h,c
  2482   000492  0ED2               	movlw	low (_main_menu+2)
  2483   000494  26D9               	addwf	fsr2l,f,c
  2484   000496  0E00               	movlw	high (_main_menu+2)
  2485   000498  22DA               	addwfc	fsr2h,f,c
  2486   00049A  CFDE F003          	movff	postinc2,clcd_print@data
  2487   00049E  CFDD F004          	movff	postdec2,clcd_print@data+1
  2488   0004A2  0EC3               	movlw	195
  2489   0004A4  6E05               	movwf	clcd_print@addr^0,c
  2490   0004A6  EC8C  F010         	call	_clcd_print	;wreg free
  2491                           
  2492                           ;blackbox.c: 369:     } else {
  2493   0004AA  EF81  F002         	goto	l4014
  2494   0004AE                     l4008:
  2495                           
  2496                           ;blackbox.c: 370:         clcd_print("->", (0xC0 + (0)));
  2497   0004AE  0EE3               	movlw	low STR_32
  2498   0004B0  6E03               	movwf	clcd_print@data^0,c
  2499   0004B2  0E2F               	movlw	high STR_32
  2500   0004B4  6E04               	movwf	(clcd_print@data+1)^0,c
  2501   0004B6  0EC0               	movlw	192
  2502   0004B8  6E05               	movwf	clcd_print@addr^0,c
  2503   0004BA  EC8C  F010         	call	_clcd_print	;wreg free
  2504   0004BE                     
  2505                           ;blackbox.c: 371:         clcd_print(main_menu[menu_pos - 1], (0x80 + (3)));
  2506   0004BE  90D8               	bcf	status,0,c
  2507   0004C0  343F               	rlcf	_menu_pos^0,w,c
  2508   0004C2  6ED9               	movwf	fsr2l,c
  2509   0004C4  3440               	rlcf	(_menu_pos+1)^0,w,c
  2510   0004C6  6EDA               	movwf	fsr2h,c
  2511   0004C8  0ECE               	movlw	low (_main_menu+65534)
  2512   0004CA  26D9               	addwf	fsr2l,f,c
  2513   0004CC  0E00               	movlw	high (_main_menu+65534)
  2514   0004CE  22DA               	addwfc	fsr2h,f,c
  2515   0004D0  CFDE F003          	movff	postinc2,clcd_print@data
  2516   0004D4  CFDD F004          	movff	postdec2,clcd_print@data+1
  2517   0004D8  0E83               	movlw	131
  2518   0004DA  6E05               	movwf	clcd_print@addr^0,c
  2519   0004DC  EC8C  F010         	call	_clcd_print	;wreg free
  2520   0004E0                     
  2521                           ;blackbox.c: 372:         clcd_print(main_menu[menu_pos], (0xC0 + (3)));
  2522   0004E0  90D8               	bcf	status,0,c
  2523   0004E2  343F               	rlcf	_menu_pos^0,w,c
  2524   0004E4  6ED9               	movwf	fsr2l,c
  2525   0004E6  3440               	rlcf	(_menu_pos+1)^0,w,c
  2526   0004E8  6EDA               	movwf	fsr2h,c
  2527   0004EA  0ED0               	movlw	low _main_menu
  2528   0004EC  26D9               	addwf	fsr2l,f,c
  2529   0004EE  0E00               	movlw	high _main_menu
  2530   0004F0  22DA               	addwfc	fsr2h,f,c
  2531   0004F2  CFDE F003          	movff	postinc2,clcd_print@data
  2532   0004F6  CFDD F004          	movff	postdec2,clcd_print@data+1
  2533   0004FA  0EC3               	movlw	195
  2534   0004FC  6E05               	movwf	clcd_print@addr^0,c
  2535   0004FE  EC8C  F010         	call	_clcd_print	;wreg free
  2536   000502                     l4014:
  2537                           
  2538                           ;blackbox.c: 375:     if (key == 5 || key == 6) {
  2539   000502  0E05               	movlw	5
  2540   000504  180B               	xorwf	menu@key^0,w,c
  2541   000506  B4D8               	btfsc	status,2,c
  2542   000508  EF88  F002         	goto	u3201
  2543   00050C  EF8A  F002         	goto	u3200
  2544   000510                     u3201:
  2545   000510  EF93  F002         	goto	l4018
  2546   000514                     u3200:
  2547   000514  0E06               	movlw	6
  2548   000516  180B               	xorwf	menu@key^0,w,c
  2549   000518  A4D8               	btfss	status,2,c
  2550   00051A  EF91  F002         	goto	u3211
  2551   00051E  EF93  F002         	goto	u3210
  2552   000522                     u3211:
  2553   000522  EF9C  F002         	goto	l4020
  2554   000526                     u3210:
  2555   000526                     l4018:
  2556                           
  2557                           ;blackbox.c: 376:         delay = 0;
  2558   000526  0E00               	movlw	0
  2559   000528  0100               	movlb	0	; () banked
  2560   00052A  6F75               	movwf	_delay& (0+255),b
  2561   00052C  0E00               	movlw	0
  2562   00052E  6F76               	movwf	(_delay+1)& (0+255),b
  2563   000530  0E00               	movlw	0
  2564   000532  6F77               	movwf	(_delay+2)& (0+255),b
  2565   000534  0E00               	movlw	0
  2566   000536  6F78               	movwf	(_delay+3)& (0+255),b
  2567   000538                     l4020:
  2568                           
  2569                           ;blackbox.c: 379:     if (key != 0xFF) {
  2570   000538  280B               	incf	menu@key^0,w,c
  2571   00053A  B4D8               	btfsc	status,2,c
  2572   00053C  EFA2  F002         	goto	u3221
  2573   000540  EFA4  F002         	goto	u3220
  2574   000544                     u3221:
  2575   000544  EF3F  F003         	goto	l4060
  2576   000548                     u3220:
  2577   000548                     
  2578                           ;blackbox.c: 380:         press_delay++;
  2579   000548  4A3D               	infsnz	_press_delay^0,f,c
  2580   00054A  2A3E               	incf	(_press_delay+1)^0,f,c
  2581   00054C                     
  2582                           ;blackbox.c: 381:         pre_key = key;
  2583   00054C  C00B  F04F         	movff	menu@key,_pre_key
  2584   000550  6A50               	clrf	(_pre_key+1)^0,c
  2585   000552                     
  2586                           ;blackbox.c: 384:         if (press_delay == 1000) {
  2587   000552  0EE8               	movlw	232
  2588   000554  183D               	xorwf	_press_delay^0,w,c
  2589   000556  E107               	bnz	u3231
  2590   000558  0E03               	movlw	3
  2591   00055A  183E               	xorwf	(_press_delay+1)^0,w,c
  2592   00055C  A4D8               	btfss	status,2,c
  2593   00055E  EFB3  F002         	goto	u3231
  2594   000562  EFB5  F002         	goto	u3230
  2595   000566                     u3231:
  2596   000566  EFCF  F003         	goto	l4096
  2597   00056A                     u3230:
  2598   00056A                     
  2599                           ;blackbox.c: 386:             if (key == 5) {
  2600   00056A  0E05               	movlw	5
  2601   00056C  180B               	xorwf	menu@key^0,w,c
  2602   00056E  A4D8               	btfss	status,2,c
  2603   000570  EFBC  F002         	goto	u3241
  2604   000574  EFBE  F002         	goto	u3240
  2605   000578                     u3241:
  2606   000578  EF18  F003         	goto	l4054
  2607   00057C                     u3240:
  2608   00057C                     
  2609                           ;blackbox.c: 387:                 press_delay = 0;
  2610   00057C  0E00               	movlw	0
  2611   00057E  6E3E               	movwf	(_press_delay+1)^0,c
  2612   000580  0E00               	movlw	0
  2613   000582  6E3D               	movwf	_press_delay^0,c
  2614   000584                     
  2615                           ;blackbox.c: 388:                 clcd_putch(menu_pos % 10 + 48, (0x80 + (15)));
  2616   000584  0E8F               	movlw	143
  2617   000586  6E09               	movwf	clcd_putch@addr^0,c
  2618   000588  C03F  F001         	movff	_menu_pos,___awmod@dividend
  2619   00058C  C040  F002         	movff	_menu_pos+1,___awmod@dividend+1
  2620   000590  0E00               	movlw	0
  2621   000592  6E04               	movwf	(___awmod@divisor+1)^0,c
  2622   000594  0E0A               	movlw	10
  2623   000596  6E03               	movwf	___awmod@divisor^0,c
  2624   000598  EC3E  F00E         	call	___awmod	;wreg free
  2625   00059C  5001               	movf	?___awmod^0,w,c
  2626   00059E  0F30               	addlw	48
  2627   0005A0  EC9C  F012         	call	_clcd_putch
  2628   0005A4                     
  2629                           ;blackbox.c: 390:                 if (menu_pos == 0) {
  2630   0005A4  503F               	movf	_menu_pos^0,w,c
  2631   0005A6  1040               	iorwf	(_menu_pos+1)^0,w,c
  2632   0005A8  A4D8               	btfss	status,2,c
  2633   0005AA  EFD9  F002         	goto	u3251
  2634   0005AE  EFDB  F002         	goto	u3250
  2635   0005B2                     u3251:
  2636   0005B2  EFDF  F002         	goto	l4038
  2637   0005B6                     u3250:
  2638   0005B6                     
  2639                           ;blackbox.c: 393:                     screen_flag = 3;
  2640   0005B6  0E00               	movlw	0
  2641   0005B8  6E52               	movwf	(_screen_flag+1)^0,c
  2642   0005BA  0E03               	movlw	3
  2643   0005BC  6E51               	movwf	_screen_flag^0,c
  2644   0005BE                     l4038:
  2645                           
  2646                           ;blackbox.c: 396:                 if (menu_pos == 1) {
  2647   0005BE  043F               	decf	_menu_pos^0,w,c
  2648   0005C0  1040               	iorwf	(_menu_pos+1)^0,w,c
  2649   0005C2  A4D8               	btfss	status,2,c
  2650   0005C4  EFE6  F002         	goto	u3261
  2651   0005C8  EFE8  F002         	goto	u3260
  2652   0005CC                     u3261:
  2653   0005CC  EFEC  F002         	goto	l4042
  2654   0005D0                     u3260:
  2655   0005D0                     
  2656                           ;blackbox.c: 398:                     screen_flag = 4;
  2657   0005D0  0E00               	movlw	0
  2658   0005D2  6E52               	movwf	(_screen_flag+1)^0,c
  2659   0005D4  0E04               	movlw	4
  2660   0005D6  6E51               	movwf	_screen_flag^0,c
  2661   0005D8                     l4042:
  2662                           
  2663                           ;blackbox.c: 400:                 if (menu_pos == 2) {
  2664   0005D8  0E02               	movlw	2
  2665   0005DA  183F               	xorwf	_menu_pos^0,w,c
  2666   0005DC  1040               	iorwf	(_menu_pos+1)^0,w,c
  2667   0005DE  A4D8               	btfss	status,2,c
  2668   0005E0  EFF4  F002         	goto	u3271
  2669   0005E4  EFF6  F002         	goto	u3270
  2670   0005E8                     u3271:
  2671   0005E8  EFFA  F002         	goto	l4046
  2672   0005EC                     u3270:
  2673   0005EC                     
  2674                           ;blackbox.c: 402:                     screen_flag = 5;
  2675   0005EC  0E00               	movlw	0
  2676   0005EE  6E52               	movwf	(_screen_flag+1)^0,c
  2677   0005F0  0E05               	movlw	5
  2678   0005F2  6E51               	movwf	_screen_flag^0,c
  2679   0005F4                     l4046:
  2680                           
  2681                           ;blackbox.c: 404:                 if (menu_pos == 3) {
  2682   0005F4  0E03               	movlw	3
  2683   0005F6  183F               	xorwf	_menu_pos^0,w,c
  2684   0005F8  1040               	iorwf	(_menu_pos+1)^0,w,c
  2685   0005FA  A4D8               	btfss	status,2,c
  2686   0005FC  EF02  F003         	goto	u3281
  2687   000600  EF04  F003         	goto	u3280
  2688   000604                     u3281:
  2689   000604  EF08  F003         	goto	l4050
  2690   000608                     u3280:
  2691   000608                     
  2692                           ;blackbox.c: 405:                     screen_flag = 6;
  2693   000608  0E00               	movlw	0
  2694   00060A  6E52               	movwf	(_screen_flag+1)^0,c
  2695   00060C  0E06               	movlw	6
  2696   00060E  6E51               	movwf	_screen_flag^0,c
  2697   000610                     l4050:
  2698                           
  2699                           ;blackbox.c: 407:                 if (menu_pos == 4) {
  2700   000610  0E04               	movlw	4
  2701   000612  183F               	xorwf	_menu_pos^0,w,c
  2702   000614  1040               	iorwf	(_menu_pos+1)^0,w,c
  2703   000616  A4D8               	btfss	status,2,c
  2704   000618  EF10  F003         	goto	u3291
  2705   00061C  EF12  F003         	goto	u3290
  2706   000620                     u3291:
  2707   000620  EF3D  F003         	goto	l377
  2708   000624                     u3290:
  2709   000624                     
  2710                           ;blackbox.c: 408:                     screen_flag = 7;
  2711   000624  0E00               	movlw	0
  2712   000626  6E52               	movwf	(_screen_flag+1)^0,c
  2713   000628  0E07               	movlw	7
  2714   00062A  6E51               	movwf	_screen_flag^0,c
  2715   00062C  EFCF  F003         	goto	l4096
  2716   000630                     l4054:
  2717   000630  0E06               	movlw	6
  2718   000632  180B               	xorwf	menu@key^0,w,c
  2719   000634  A4D8               	btfss	status,2,c
  2720   000636  EF1F  F003         	goto	u3301
  2721   00063A  EF21  F003         	goto	u3300
  2722   00063E                     u3301:
  2723   00063E  EF3D  F003         	goto	l377
  2724   000642                     u3300:
  2725   000642                     
  2726                           ;blackbox.c: 411:                 screen_flag = 0;
  2727   000642  0E00               	movlw	0
  2728   000644  6E52               	movwf	(_screen_flag+1)^0,c
  2729   000646  0E00               	movlw	0
  2730   000648  6E51               	movwf	_screen_flag^0,c
  2731                           
  2732                           ;blackbox.c: 412:                 enter = 0;
  2733   00064A  0E00               	movlw	0
  2734   00064C  0100               	movlb	0	; () banked
  2735   00064E  6F98               	movwf	(_enter+1)& (0+255),b
  2736   000650  0E00               	movlw	0
  2737   000652  6F97               	movwf	_enter& (0+255),b
  2738                           
  2739                           ;blackbox.c: 413:                 pre_key = 0;
  2740   000654  0E00               	movlw	0
  2741   000656  6E50               	movwf	(_pre_key+1)^0,c
  2742   000658  0E00               	movlw	0
  2743   00065A  6E4F               	movwf	_pre_key^0,c
  2744                           
  2745                           ;blackbox.c: 414:                 press_delay = 0;
  2746   00065C  0E00               	movlw	0
  2747   00065E  6E3E               	movwf	(_press_delay+1)^0,c
  2748   000660  0E00               	movlw	0
  2749   000662  6E3D               	movwf	_press_delay^0,c
  2750                           
  2751                           ;blackbox.c: 415:                 count = 0 ;
  2752   000664  0E00               	movlw	0
  2753   000666  6F92               	movwf	(_count+1)& (0+255),b
  2754   000668  0E00               	movlw	0
  2755   00066A  6F91               	movwf	_count& (0+255),b
  2756   00066C                     
  2757                           ; BSR set to: 0
  2758                           ;blackbox.c: 416:                 clcd_write(0x01, 0);
  2759   00066C  0E00               	movlw	0
  2760   00066E  6E01               	movwf	clcd_write@control_bit^0,c
  2761   000670  0E01               	movlw	1
  2762   000672  ECEA  F011         	call	_clcd_write
  2763   000676  EFCF  F003         	goto	l4096
  2764   00067A                     l377:
  2765                           
  2766                           ;blackbox.c: 420:     } else if (press_delay > 0 && press_delay < 1000) {
  2767   00067A  EFCF  F003         	goto	l4096
  2768   00067E                     l4060:
  2769   00067E  503D               	movf	_press_delay^0,w,c
  2770   000680  103E               	iorwf	(_press_delay+1)^0,w,c
  2771   000682  B4D8               	btfsc	status,2,c
  2772   000684  EF46  F003         	goto	u3311
  2773   000688  EF48  F003         	goto	u3310
  2774   00068C                     u3311:
  2775   00068C  EFCB  F003         	goto	l4094
  2776   000690                     u3310:
  2777   000690  0EE8               	movlw	232
  2778   000692  5C3D               	subwf	_press_delay^0,w,c
  2779   000694  0E03               	movlw	3
  2780   000696  583E               	subwfb	(_press_delay+1)^0,w,c
  2781   000698  B0D8               	btfsc	status,0,c
  2782   00069A  EF51  F003         	goto	u3321
  2783   00069E  EF53  F003         	goto	u3320
  2784   0006A2                     u3321:
  2785   0006A2  EFCB  F003         	goto	l4094
  2786   0006A6                     u3320:
  2787   0006A6                     
  2788                           ;blackbox.c: 421:         press_delay = 0;
  2789   0006A6  0E00               	movlw	0
  2790   0006A8  6E3E               	movwf	(_press_delay+1)^0,c
  2791   0006AA  0E00               	movlw	0
  2792   0006AC  6E3D               	movwf	_press_delay^0,c
  2793   0006AE                     
  2794                           ;blackbox.c: 422:         m_count++;
  2795   0006AE  0100               	movlb	0	; () banked
  2796   0006B0  4B8D               	infsnz	_m_count& (0+255),f,b
  2797   0006B2  2B8E               	incf	(_m_count+1)& (0+255),f,b
  2798   0006B4                     
  2799                           ; BSR set to: 0
  2800                           ;blackbox.c: 423:         if (pre_key == 6 && menu_pos < 4 && m_count > 1) {
  2801   0006B4  0E06               	movlw	6
  2802   0006B6  184F               	xorwf	_pre_key^0,w,c
  2803   0006B8  1050               	iorwf	(_pre_key+1)^0,w,c
  2804   0006BA  A4D8               	btfss	status,2,c
  2805   0006BC  EF62  F003         	goto	u3331
  2806   0006C0  EF64  F003         	goto	u3330
  2807   0006C4                     u3331:
  2808   0006C4  EF99  F003         	goto	l4082
  2809   0006C8                     u3330:
  2810   0006C8                     
  2811                           ; BSR set to: 0
  2812   0006C8  BE40               	btfsc	(_menu_pos+1)^0,7,c
  2813   0006CA  EF72  F003         	goto	u3340
  2814   0006CE  5040               	movf	(_menu_pos+1)^0,w,c
  2815   0006D0  E107               	bnz	u3341
  2816   0006D2  0E04               	movlw	4
  2817   0006D4  5C3F               	subwf	_menu_pos^0,w,c
  2818   0006D6  B0D8               	btfsc	status,0,c
  2819   0006D8  EF70  F003         	goto	u3341
  2820   0006DC  EF72  F003         	goto	u3340
  2821   0006E0                     u3341:
  2822   0006E0  EF99  F003         	goto	l4082
  2823   0006E4                     u3340:
  2824   0006E4                     
  2825                           ; BSR set to: 0
  2826   0006E4  BF8E               	btfsc	(_m_count+1)& (0+255),7,b
  2827   0006E6  EF7E  F003         	goto	u3351
  2828   0006EA  518E               	movf	(_m_count+1)& (0+255),w,b
  2829   0006EC  E109               	bnz	u3350
  2830   0006EE  0E02               	movlw	2
  2831   0006F0  5D8D               	subwf	_m_count& (0+255),w,b
  2832   0006F2  A0D8               	btfss	status,0,c
  2833   0006F4  EF7E  F003         	goto	u3351
  2834   0006F8  EF80  F003         	goto	u3350
  2835   0006FC                     u3351:
  2836   0006FC  EF99  F003         	goto	l4082
  2837   000700                     u3350:
  2838   000700                     
  2839                           ; BSR set to: 0
  2840                           ;blackbox.c: 424:             menu_pos++;
  2841   000700  4A3F               	infsnz	_menu_pos^0,f,c
  2842   000702  2A40               	incf	(_menu_pos+1)^0,f,c
  2843   000704                     
  2844                           ; BSR set to: 0
  2845                           ;blackbox.c: 425:             if (arrow_pos < 2)
  2846   000704  BE57               	btfsc	(_arrow_pos+1)^0,7,c
  2847   000706  EF90  F003         	goto	u3360
  2848   00070A  5057               	movf	(_arrow_pos+1)^0,w,c
  2849   00070C  E107               	bnz	u3361
  2850   00070E  0E02               	movlw	2
  2851   000710  5C56               	subwf	_arrow_pos^0,w,c
  2852   000712  B0D8               	btfsc	status,0,c
  2853   000714  EF8E  F003         	goto	u3361
  2854   000718  EF90  F003         	goto	u3360
  2855   00071C                     u3361:
  2856   00071C  EF92  F003         	goto	l4080
  2857   000720                     u3360:
  2858   000720                     
  2859                           ; BSR set to: 0
  2860                           ;blackbox.c: 426:                 arrow_pos++;
  2861   000720  4A56               	infsnz	_arrow_pos^0,f,c
  2862   000722  2A57               	incf	(_arrow_pos+1)^0,f,c
  2863   000724                     l4080:
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;blackbox.c: 427:             clcd_write(0x01, 0);
  2867   000724  0E00               	movlw	0
  2868   000726  6E01               	movwf	clcd_write@control_bit^0,c
  2869   000728  0E01               	movlw	1
  2870   00072A  ECEA  F011         	call	_clcd_write
  2871                           
  2872                           ;blackbox.c: 428:         } else if (pre_key == 5 && menu_pos > 0) {
  2873   00072E  EFCF  F003         	goto	l4096
  2874   000732                     l4082:
  2875                           
  2876                           ; BSR set to: 0
  2877   000732  0E05               	movlw	5
  2878   000734  184F               	xorwf	_pre_key^0,w,c
  2879   000736  1050               	iorwf	(_pre_key+1)^0,w,c
  2880   000738  A4D8               	btfss	status,2,c
  2881   00073A  EFA1  F003         	goto	u3371
  2882   00073E  EFA3  F003         	goto	u3370
  2883   000742                     u3371:
  2884   000742  EFCF  F003         	goto	l4096
  2885   000746                     u3370:
  2886   000746                     
  2887                           ; BSR set to: 0
  2888   000746  BE40               	btfsc	(_menu_pos+1)^0,7,c
  2889   000748  EFAE  F003         	goto	u3381
  2890   00074C  5040               	movf	(_menu_pos+1)^0,w,c
  2891   00074E  E108               	bnz	u3380
  2892   000750  043F               	decf	_menu_pos^0,w,c
  2893   000752  A0D8               	btfss	status,0,c
  2894   000754  EFAE  F003         	goto	u3381
  2895   000758  EFB0  F003         	goto	u3380
  2896   00075C                     u3381:
  2897   00075C  EFCF  F003         	goto	l4096
  2898   000760                     u3380:
  2899   000760                     
  2900                           ; BSR set to: 0
  2901                           ;blackbox.c: 429:             menu_pos--;
  2902   000760  063F               	decf	_menu_pos^0,f,c
  2903   000762  A0D8               	btfss	status,0,c
  2904   000764  0640               	decf	(_menu_pos+1)^0,f,c
  2905   000766                     
  2906                           ; BSR set to: 0
  2907                           ;blackbox.c: 430:             if (arrow_pos > 1)
  2908   000766  BE57               	btfsc	(_arrow_pos+1)^0,7,c
  2909   000768  EFBF  F003         	goto	u3391
  2910   00076C  5057               	movf	(_arrow_pos+1)^0,w,c
  2911   00076E  E109               	bnz	u3390
  2912   000770  0E02               	movlw	2
  2913   000772  5C56               	subwf	_arrow_pos^0,w,c
  2914   000774  A0D8               	btfss	status,0,c
  2915   000776  EFBF  F003         	goto	u3391
  2916   00077A  EFC1  F003         	goto	u3390
  2917   00077E                     u3391:
  2918   00077E  EFC4  F003         	goto	l4092
  2919   000782                     u3390:
  2920   000782                     
  2921                           ; BSR set to: 0
  2922                           ;blackbox.c: 431:                 arrow_pos--;
  2923   000782  0656               	decf	_arrow_pos^0,f,c
  2924   000784  A0D8               	btfss	status,0,c
  2925   000786  0657               	decf	(_arrow_pos+1)^0,f,c
  2926   000788                     l4092:
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;blackbox.c: 432:             clcd_write(0x01, 0);
  2930   000788  0E00               	movlw	0
  2931   00078A  6E01               	movwf	clcd_write@control_bit^0,c
  2932   00078C  0E01               	movlw	1
  2933   00078E  ECEA  F011         	call	_clcd_write
  2934   000792  EFCF  F003         	goto	l4096
  2935   000796                     l4094:
  2936                           
  2937                           ;blackbox.c: 435:         press_delay = 0;
  2938   000796  0E00               	movlw	0
  2939   000798  6E3E               	movwf	(_press_delay+1)^0,c
  2940   00079A  0E00               	movlw	0
  2941   00079C  6E3D               	movwf	_press_delay^0,c
  2942   00079E                     l4096:
  2943                           
  2944                           ;blackbox.c: 440:     if (key == 0xFF && delay++ == 300000) {
  2945   00079E  280B               	incf	menu@key^0,w,c
  2946   0007A0  A4D8               	btfss	status,2,c
  2947   0007A2  EFD5  F003         	goto	u3401
  2948   0007A6  EFD7  F003         	goto	u3400
  2949   0007AA                     u3401:
  2950   0007AA  EF28  F004         	goto	l395
  2951   0007AE                     u3400:
  2952   0007AE  0E01               	movlw	1
  2953   0007B0  0100               	movlb	0	; () banked
  2954   0007B2  2775               	addwf	_delay& (0+255),f,b
  2955   0007B4  0E00               	movlw	0
  2956   0007B6  2376               	addwfc	(_delay+1)& (0+255),f,b
  2957   0007B8  2377               	addwfc	(_delay+2)& (0+255),f,b
  2958   0007BA  2378               	addwfc	(_delay+3)& (0+255),f,b
  2959   0007BC  0EE1               	movlw	225
  2960   0007BE  1975               	xorwf	_delay& (0+255),w,b
  2961   0007C0  E10B               	bnz	u3411
  2962   0007C2  0E93               	movlw	147
  2963   0007C4  1976               	xorwf	(_delay+1)& (0+255),w,b
  2964   0007C6  E108               	bnz	u3411
  2965   0007C8  0E04               	movlw	4
  2966   0007CA  1977               	xorwf	(_delay+2)& (0+255),w,b
  2967   0007CC  1178               	iorwf	(_delay+3)& (0+255),w,b
  2968   0007CE  A4D8               	btfss	status,2,c
  2969   0007D0  EFEC  F003         	goto	u3411
  2970   0007D4  EFEE  F003         	goto	u3410
  2971   0007D8                     u3411:
  2972   0007D8  EF28  F004         	goto	l395
  2973   0007DC                     u3410:
  2974   0007DC                     
  2975                           ; BSR set to: 0
  2976                           ;blackbox.c: 441:         clcd_write(0x01, 0);
  2977   0007DC  0E00               	movlw	0
  2978   0007DE  6E01               	movwf	clcd_write@control_bit^0,c
  2979   0007E0  0E01               	movlw	1
  2980   0007E2  ECEA  F011         	call	_clcd_write
  2981   0007E6                     
  2982                           ;blackbox.c: 442:         screen_flag = 0;
  2983   0007E6  0E00               	movlw	0
  2984   0007E8  6E52               	movwf	(_screen_flag+1)^0,c
  2985   0007EA  0E00               	movlw	0
  2986   0007EC  6E51               	movwf	_screen_flag^0,c
  2987   0007EE                     
  2988                           ;blackbox.c: 443:         menu_pos = 0;
  2989   0007EE  0E00               	movlw	0
  2990   0007F0  6E40               	movwf	(_menu_pos+1)^0,c
  2991   0007F2  0E00               	movlw	0
  2992   0007F4  6E3F               	movwf	_menu_pos^0,c
  2993   0007F6                     
  2994                           ;blackbox.c: 444:         m_count = 0;
  2995   0007F6  0E00               	movlw	0
  2996   0007F8  0100               	movlb	0	; () banked
  2997   0007FA  6F8E               	movwf	(_m_count+1)& (0+255),b
  2998   0007FC  0E00               	movlw	0
  2999   0007FE  6F8D               	movwf	_m_count& (0+255),b
  3000   000800                     
  3001                           ; BSR set to: 0
  3002                           ;blackbox.c: 445:         arrow_pos = 1;
  3003   000800  0E00               	movlw	0
  3004   000802  6E57               	movwf	(_arrow_pos+1)^0,c
  3005   000804  0E01               	movlw	1
  3006   000806  6E56               	movwf	_arrow_pos^0,c
  3007   000808                     
  3008                           ; BSR set to: 0
  3009                           ;blackbox.c: 447:         enter = 0;
  3010   000808  0E00               	movlw	0
  3011   00080A  6F98               	movwf	(_enter+1)& (0+255),b
  3012   00080C  0E00               	movlw	0
  3013   00080E  6F97               	movwf	_enter& (0+255),b
  3014   000810                     
  3015                           ; BSR set to: 0
  3016                           ;blackbox.c: 448:         pos = 6;
  3017   000810  0E00               	movlw	0
  3018   000812  6E59               	movwf	(_pos+1)^0,c
  3019   000814  0E06               	movlw	6
  3020   000816  6E58               	movwf	_pos^0,c
  3021   000818                     
  3022                           ; BSR set to: 0
  3023                           ;blackbox.c: 449:         cursor = 0;
  3024   000818  0E00               	movlw	0
  3025   00081A  6E44               	movwf	(_cursor+1)^0,c
  3026   00081C  0E00               	movlw	0
  3027   00081E  6E43               	movwf	_cursor^0,c
  3028   000820                     
  3029                           ; BSR set to: 0
  3030                           ;blackbox.c: 450:         idx = 0;
  3031   000820  0E00               	movlw	0
  3032   000822  6E46               	movwf	(_idx+1)^0,c
  3033   000824  0E00               	movlw	0
  3034   000826  6E45               	movwf	_idx^0,c
  3035   000828                     
  3036                           ; BSR set to: 0
  3037                           ;blackbox.c: 451:         star = 0;
  3038   000828  0E00               	movlw	0
  3039   00082A  6E42               	movwf	(_star+1)^0,c
  3040   00082C  0E00               	movlw	0
  3041   00082E  6E41               	movwf	_star^0,c
  3042   000830                     
  3043                           ; BSR set to: 0
  3044                           ;blackbox.c: 452:         count = 0;
  3045   000830  0E00               	movlw	0
  3046   000832  6F92               	movwf	(_count+1)& (0+255),b
  3047   000834  0E00               	movlw	0
  3048   000836  6F91               	movwf	_count& (0+255),b
  3049   000838                     
  3050                           ; BSR set to: 0
  3051                           ;blackbox.c: 453:         mark = 0;
  3052   000838  0E00               	movlw	0
  3053   00083A  6F90               	movwf	(_mark+1)& (0+255),b
  3054   00083C  0E00               	movlw	0
  3055   00083E  6F8F               	movwf	_mark& (0+255),b
  3056   000840                     
  3057                           ; BSR set to: 0
  3058                           ;blackbox.c: 454:         x = 5;
  3059   000840  0E00               	movlw	0
  3060   000842  6FDF               	movwf	(_x+1)& (0+255),b
  3061   000844  0E05               	movlw	5
  3062   000846  6FDE               	movwf	_x& (0+255),b
  3063   000848                     
  3064                           ; BSR set to: 0
  3065                           ;blackbox.c: 455:         pre_key = 0;
  3066   000848  0E00               	movlw	0
  3067   00084A  6E50               	movwf	(_pre_key+1)^0,c
  3068   00084C  0E00               	movlw	0
  3069   00084E  6E4F               	movwf	_pre_key^0,c
  3070   000850                     l395:
  3071   000850  0012               	return		;funcret
  3072   000852                     __end_of_menu:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _login *****************
  3076 ;; Defined at:
  3077 ;;		line 263 in file "blackbox.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  key             1    wreg     unsigned char 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  key             1   28[COMRAM] unsigned char 
  3082 ;;  i               4   24[COMRAM] unsigned long 
  3083 ;;  i               4   20[COMRAM] unsigned long 
  3084 ;;  i               4   16[COMRAM] unsigned long 
  3085 ;;  i               4   12[COMRAM] unsigned long 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3095 ;;      Params:         0       0       0       0       0       0       0
  3096 ;;      Locals:        17       0       0       0       0       0       0
  3097 ;;      Temps:          0       0       0       0       0       0       0
  3098 ;;      Totals:        17       0       0       0       0       0       0
  3099 ;;Total ram usage:       17 bytes
  3100 ;; Hardware stack levels used: 1
  3101 ;; Hardware stack levels required when called: 6
  3102 ;; This function calls:
  3103 ;;		_blink
  3104 ;;		_clcd_print
  3105 ;;		_clcd_putch
  3106 ;;		_clcd_write
  3107 ;;		_clr_pass
  3108 ;;		_get_pass
  3109 ;;		_strcmp
  3110 ;;		_timeout
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text5
  3117   000012                     __ptext5:
  3118                           	callstack 0
  3119   000012                     _login:
  3120                           	callstack 24
  3121                           
  3122                           ;incstack = 0
  3123                           ;login@key stored from wreg
  3124   000012  6E1D               	movwf	login@key^0,c
  3125   000014                     
  3126                           ;blackbox.c: 264:     if (enter == 0) {
  3127   000014  0100               	movlb	0	; () banked
  3128   000016  5197               	movf	_enter& (0+255),w,b
  3129   000018  1198               	iorwf	(_enter+1)& (0+255),w,b
  3130   00001A  A4D8               	btfss	status,2,c
  3131   00001C  EF12  F000         	goto	u2991
  3132   000020  EF14  F000         	goto	u2990
  3133   000024                     u2991:
  3134   000024  EF1E  F000         	goto	l3872
  3135   000028                     u2990:
  3136   000028                     
  3137                           ; BSR set to: 0
  3138                           ;blackbox.c: 265:         clcd_write(0x01, 0);
  3139   000028  0E00               	movlw	0
  3140   00002A  6E01               	movwf	clcd_write@control_bit^0,c
  3141   00002C  0E01               	movlw	1
  3142   00002E  ECEA  F011         	call	_clcd_write
  3143   000032                     
  3144                           ;blackbox.c: 266:         enter = 1;
  3145   000032  0E00               	movlw	0
  3146   000034  0100               	movlb	0	; () banked
  3147   000036  6F98               	movwf	(_enter+1)& (0+255),b
  3148   000038  0E01               	movlw	1
  3149   00003A  6F97               	movwf	_enter& (0+255),b
  3150   00003C                     l3872:
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;blackbox.c: 268:     count = 0 ;
  3154   00003C  0E00               	movlw	0
  3155   00003E  6F92               	movwf	(_count+1)& (0+255),b
  3156   000040  0E00               	movlw	0
  3157   000042  6F91               	movwf	_count& (0+255),b
  3158   000044                     
  3159                           ; BSR set to: 0
  3160                           ;blackbox.c: 269:     if (wait++ == 1500) {
  3161   000044  4A47               	infsnz	_wait^0,f,c
  3162   000046  2A48               	incf	(_wait+1)^0,f,c
  3163   000048  0EDD               	movlw	221
  3164   00004A  1847               	xorwf	_wait^0,w,c
  3165   00004C  E107               	bnz	u3001
  3166   00004E  0E05               	movlw	5
  3167   000050  1848               	xorwf	(_wait+1)^0,w,c
  3168   000052  A4D8               	btfss	status,2,c
  3169   000054  EF2E  F000         	goto	u3001
  3170   000058  EF30  F000         	goto	u3000
  3171   00005C                     u3001:
  3172   00005C  EF3C  F000         	goto	l3880
  3173   000060                     u3000:
  3174   000060                     
  3175                           ; BSR set to: 0
  3176                           ;blackbox.c: 270:         clcd_print(" Enter Password ", (0x80 + (0)));
  3177   000060  0EA0               	movlw	low STR_27
  3178   000062  6E03               	movwf	clcd_print@data^0,c
  3179   000064  0E2E               	movlw	high STR_27
  3180   000066  6E04               	movwf	(clcd_print@data+1)^0,c
  3181   000068  0E80               	movlw	128
  3182   00006A  6E05               	movwf	clcd_print@addr^0,c
  3183   00006C  EC8C  F010         	call	_clcd_print	;wreg free
  3184   000070                     
  3185                           ;blackbox.c: 271:         wait = 0;
  3186   000070  0E00               	movlw	0
  3187   000072  6E48               	movwf	(_wait+1)^0,c
  3188   000074  0E00               	movlw	0
  3189   000076  6E47               	movwf	_wait^0,c
  3190   000078                     l3880:
  3191                           
  3192                           ;blackbox.c: 274:     blink(x);
  3193   000078  C0DE  F00B         	movff	_x,blink@x
  3194   00007C  C0DF  F00C         	movff	_x+1,blink@x+1
  3195   000080  EC1D  F010         	call	_blink	;wreg free
  3196   000084                     
  3197                           ;blackbox.c: 277:     if (idx < 4) {
  3198   000084  BE46               	btfsc	(_idx+1)^0,7,c
  3199   000086  EF50  F000         	goto	u3010
  3200   00008A  5046               	movf	(_idx+1)^0,w,c
  3201   00008C  E107               	bnz	u3011
  3202   00008E  0E04               	movlw	4
  3203   000090  5C45               	subwf	_idx^0,w,c
  3204   000092  B0D8               	btfsc	status,0,c
  3205   000094  EF4E  F000         	goto	u3011
  3206   000098  EF50  F000         	goto	u3010
  3207   00009C                     u3011:
  3208   00009C  EF2A  F001         	goto	l3942
  3209   0000A0                     u3010:
  3210   0000A0                     
  3211                           ;blackbox.c: 279:         if (key == 0xFF && delay++ == 100000) {
  3212   0000A0  281D               	incf	login@key^0,w,c
  3213   0000A2  A4D8               	btfss	status,2,c
  3214   0000A4  EF56  F000         	goto	u3021
  3215   0000A8  EF58  F000         	goto	u3020
  3216   0000AC                     u3021:
  3217   0000AC  EF98  F000         	goto	l3908
  3218   0000B0                     u3020:
  3219   0000B0  0E01               	movlw	1
  3220   0000B2  0100               	movlb	0	; () banked
  3221   0000B4  2775               	addwf	_delay& (0+255),f,b
  3222   0000B6  0E00               	movlw	0
  3223   0000B8  2376               	addwfc	(_delay+1)& (0+255),f,b
  3224   0000BA  2377               	addwfc	(_delay+2)& (0+255),f,b
  3225   0000BC  2378               	addwfc	(_delay+3)& (0+255),f,b
  3226   0000BE  0EA1               	movlw	161
  3227   0000C0  1975               	xorwf	_delay& (0+255),w,b
  3228   0000C2  E10A               	bnz	u3031
  3229   0000C4  0E86               	movlw	134
  3230   0000C6  1976               	xorwf	(_delay+1)& (0+255),w,b
  3231   0000C8  E107               	bnz	u3031
  3232   0000CA  0577               	decf	(_delay+2)& (0+255),w,b
  3233   0000CC  1178               	iorwf	(_delay+3)& (0+255),w,b
  3234   0000CE  A4D8               	btfss	status,2,c
  3235   0000D0  EF6C  F000         	goto	u3031
  3236   0000D4  EF6E  F000         	goto	u3030
  3237   0000D8                     u3031:
  3238   0000D8  EF98  F000         	goto	l3908
  3239   0000DC                     u3030:
  3240   0000DC                     
  3241                           ; BSR set to: 0
  3242                           ;blackbox.c: 280:             clcd_write(0x01, 0);
  3243   0000DC  0E00               	movlw	0
  3244   0000DE  6E01               	movwf	clcd_write@control_bit^0,c
  3245   0000E0  0E01               	movlw	1
  3246   0000E2  ECEA  F011         	call	_clcd_write
  3247   0000E6                     
  3248                           ;blackbox.c: 281:             screen_flag = 0;
  3249   0000E6  0E00               	movlw	0
  3250   0000E8  6E52               	movwf	(_screen_flag+1)^0,c
  3251   0000EA  0E00               	movlw	0
  3252   0000EC  6E51               	movwf	_screen_flag^0,c
  3253   0000EE                     
  3254                           ;blackbox.c: 282:             enter = 0;
  3255   0000EE  0E00               	movlw	0
  3256   0000F0  0100               	movlb	0	; () banked
  3257   0000F2  6F98               	movwf	(_enter+1)& (0+255),b
  3258   0000F4  0E00               	movlw	0
  3259   0000F6  6F97               	movwf	_enter& (0+255),b
  3260   0000F8                     
  3261                           ; BSR set to: 0
  3262                           ;blackbox.c: 283:             pos = 6;
  3263   0000F8  0E00               	movlw	0
  3264   0000FA  6E59               	movwf	(_pos+1)^0,c
  3265   0000FC  0E06               	movlw	6
  3266   0000FE  6E58               	movwf	_pos^0,c
  3267   000100                     
  3268                           ; BSR set to: 0
  3269                           ;blackbox.c: 284:             cursor = 0;
  3270   000100  0E00               	movlw	0
  3271   000102  6E44               	movwf	(_cursor+1)^0,c
  3272   000104  0E00               	movlw	0
  3273   000106  6E43               	movwf	_cursor^0,c
  3274   000108                     
  3275                           ; BSR set to: 0
  3276                           ;blackbox.c: 285:             idx = 0;
  3277   000108  0E00               	movlw	0
  3278   00010A  6E46               	movwf	(_idx+1)^0,c
  3279   00010C  0E00               	movlw	0
  3280   00010E  6E45               	movwf	_idx^0,c
  3281   000110                     
  3282                           ; BSR set to: 0
  3283                           ;blackbox.c: 286:             star = 0;
  3284   000110  0E00               	movlw	0
  3285   000112  6E42               	movwf	(_star+1)^0,c
  3286   000114  0E00               	movlw	0
  3287   000116  6E41               	movwf	_star^0,c
  3288   000118                     
  3289                           ; BSR set to: 0
  3290                           ;blackbox.c: 287:             count = 0;
  3291   000118  0E00               	movlw	0
  3292   00011A  6F92               	movwf	(_count+1)& (0+255),b
  3293   00011C  0E00               	movlw	0
  3294   00011E  6F91               	movwf	_count& (0+255),b
  3295   000120                     
  3296                           ; BSR set to: 0
  3297                           ;blackbox.c: 288:             mark = 0;
  3298   000120  0E00               	movlw	0
  3299   000122  6F90               	movwf	(_mark+1)& (0+255),b
  3300   000124  0E00               	movlw	0
  3301   000126  6F8F               	movwf	_mark& (0+255),b
  3302   000128                     
  3303                           ; BSR set to: 0
  3304                           ;blackbox.c: 289:             x = 5;
  3305   000128  0E00               	movlw	0
  3306   00012A  6FDF               	movwf	(_x+1)& (0+255),b
  3307   00012C  0E05               	movlw	5
  3308   00012E  6FDE               	movwf	_x& (0+255),b
  3309   000130                     l3908:
  3310                           
  3311                           ;blackbox.c: 291:         if ((key == 5 || key == 6)) {
  3312   000130  0E05               	movlw	5
  3313   000132  181D               	xorwf	login@key^0,w,c
  3314   000134  B4D8               	btfsc	status,2,c
  3315   000136  EF9F  F000         	goto	u3041
  3316   00013A  EFA1  F000         	goto	u3040
  3317   00013E                     u3041:
  3318   00013E  EFAA  F000         	goto	l3912
  3319   000142                     u3040:
  3320   000142  0E06               	movlw	6
  3321   000144  181D               	xorwf	login@key^0,w,c
  3322   000146  A4D8               	btfss	status,2,c
  3323   000148  EFA8  F000         	goto	u3051
  3324   00014C  EFAA  F000         	goto	u3050
  3325   000150                     u3051:
  3326   000150  EF20  F002         	goto	l368
  3327   000154                     u3050:
  3328   000154                     l3912:
  3329                           
  3330                           ;blackbox.c: 292:             count++;
  3331   000154  0100               	movlb	0	; () banked
  3332   000156  4B91               	infsnz	_count& (0+255),f,b
  3333   000158  2B92               	incf	(_count+1)& (0+255),f,b
  3334                           
  3335                           ;blackbox.c: 293:             star++;
  3336   00015A  4A41               	infsnz	_star^0,f,c
  3337   00015C  2A42               	incf	(_star+1)^0,f,c
  3338   00015E                     
  3339                           ; BSR set to: 0
  3340                           ;blackbox.c: 295:             if (key == 5) {
  3341   00015E  0E05               	movlw	5
  3342   000160  181D               	xorwf	login@key^0,w,c
  3343   000162  A4D8               	btfss	status,2,c
  3344   000164  EFB6  F000         	goto	u3061
  3345   000168  EFB8  F000         	goto	u3060
  3346   00016C                     u3061:
  3347   00016C  EFD0  F000         	goto	l3922
  3348   000170                     u3060:
  3349   000170                     
  3350                           ; BSR set to: 0
  3351                           ;blackbox.c: 296:                 if (count > 1)
  3352   000170  BF92               	btfsc	(_count+1)& (0+255),7,b
  3353   000172  EFC4  F000         	goto	u3071
  3354   000176  5192               	movf	(_count+1)& (0+255),w,b
  3355   000178  E109               	bnz	u3070
  3356   00017A  0E02               	movlw	2
  3357   00017C  5D91               	subwf	_count& (0+255),w,b
  3358   00017E  A0D8               	btfss	status,0,c
  3359   000180  EFC4  F000         	goto	u3071
  3360   000184  EFC6  F000         	goto	u3070
  3361   000188                     u3071:
  3362   000188  EFD0  F000         	goto	l3922
  3363   00018C                     u3070:
  3364   00018C                     
  3365                           ; BSR set to: 0
  3366                           ;blackbox.c: 297:                     password[idx++] = '0';
  3367   00018C  0EAA               	movlw	low _password
  3368   00018E  2445               	addwf	_idx^0,w,c
  3369   000190  6ED9               	movwf	fsr2l,c
  3370   000192  0E00               	movlw	high _password
  3371   000194  2046               	addwfc	(_idx+1)^0,w,c
  3372   000196  6EDA               	movwf	fsr2h,c
  3373   000198  0E30               	movlw	48
  3374   00019A  6EDF               	movwf	indf2,c
  3375   00019C                     
  3376                           ; BSR set to: 0
  3377   00019C  4A45               	infsnz	_idx^0,f,c
  3378   00019E  2A46               	incf	(_idx+1)^0,f,c
  3379   0001A0                     l3922:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;blackbox.c: 299:             if (key == 6)
  3383   0001A0  0E06               	movlw	6
  3384   0001A2  181D               	xorwf	login@key^0,w,c
  3385   0001A4  A4D8               	btfss	status,2,c
  3386   0001A6  EFD7  F000         	goto	u3081
  3387   0001AA  EFD9  F000         	goto	u3080
  3388   0001AE                     u3081:
  3389   0001AE  EFE3  F000         	goto	l3928
  3390   0001B2                     u3080:
  3391   0001B2                     
  3392                           ; BSR set to: 0
  3393                           ;blackbox.c: 300:                 password[idx++] = '1';
  3394   0001B2  0EAA               	movlw	low _password
  3395   0001B4  2445               	addwf	_idx^0,w,c
  3396   0001B6  6ED9               	movwf	fsr2l,c
  3397   0001B8  0E00               	movlw	high _password
  3398   0001BA  2046               	addwfc	(_idx+1)^0,w,c
  3399   0001BC  6EDA               	movwf	fsr2h,c
  3400   0001BE  0E31               	movlw	49
  3401   0001C0  6EDF               	movwf	indf2,c
  3402   0001C2                     
  3403                           ; BSR set to: 0
  3404   0001C2  4A45               	infsnz	_idx^0,f,c
  3405   0001C4  2A46               	incf	(_idx+1)^0,f,c
  3406   0001C6                     l3928:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;blackbox.c: 302:             if (star > 1 && star < 6) {
  3410   0001C6  BE42               	btfsc	(_star+1)^0,7,c
  3411   0001C8  EFEF  F000         	goto	u3091
  3412   0001CC  5042               	movf	(_star+1)^0,w,c
  3413   0001CE  E109               	bnz	u3090
  3414   0001D0  0E02               	movlw	2
  3415   0001D2  5C41               	subwf	_star^0,w,c
  3416   0001D4  A0D8               	btfss	status,0,c
  3417   0001D6  EFEF  F000         	goto	u3091
  3418   0001DA  EFF1  F000         	goto	u3090
  3419   0001DE                     u3091:
  3420   0001DE  EF07  F001         	goto	l3936
  3421   0001E2                     u3090:
  3422   0001E2                     
  3423                           ; BSR set to: 0
  3424   0001E2  BE42               	btfsc	(_star+1)^0,7,c
  3425   0001E4  EFFF  F000         	goto	u3100
  3426   0001E8  5042               	movf	(_star+1)^0,w,c
  3427   0001EA  E107               	bnz	u3101
  3428   0001EC  0E06               	movlw	6
  3429   0001EE  5C41               	subwf	_star^0,w,c
  3430   0001F0  B0D8               	btfsc	status,0,c
  3431   0001F2  EFFD  F000         	goto	u3101
  3432   0001F6  EFFF  F000         	goto	u3100
  3433   0001FA                     u3101:
  3434   0001FA  EF07  F001         	goto	l3936
  3435   0001FE                     u3100:
  3436   0001FE                     
  3437                           ; BSR set to: 0
  3438                           ;blackbox.c: 303:                 clcd_putch('*', (0xC0 + (pos)));
  3439   0001FE  5058               	movf	_pos^0,w,c
  3440   000200  0FC0               	addlw	192
  3441   000202  6E09               	movwf	clcd_putch@addr^0,c
  3442   000204  0E2A               	movlw	42
  3443   000206  EC9C  F012         	call	_clcd_putch
  3444   00020A                     
  3445                           ;blackbox.c: 305:                 pos++;
  3446   00020A  4A58               	infsnz	_pos^0,f,c
  3447   00020C  2A59               	incf	(_pos+1)^0,f,c
  3448   00020E                     l3936:
  3449                           
  3450                           ;blackbox.c: 307:             x++;
  3451   00020E  0100               	movlb	0	; () banked
  3452   000210  4BDE               	infsnz	_x& (0+255),f,b
  3453   000212  2BDF               	incf	(_x+1)& (0+255),f,b
  3454   000214                     
  3455                           ; BSR set to: 0
  3456                           ;blackbox.c: 308:             if (star == 5) {
  3457   000214  0E05               	movlw	5
  3458   000216  1841               	xorwf	_star^0,w,c
  3459   000218  1042               	iorwf	(_star+1)^0,w,c
  3460   00021A  A4D8               	btfss	status,2,c
  3461   00021C  EF12  F001         	goto	u3111
  3462   000220  EF14  F001         	goto	u3110
  3463   000224                     u3111:
  3464   000224  EF20  F001         	goto	l349
  3465   000228                     u3110:
  3466   000228                     
  3467                           ; BSR set to: 0
  3468                           ;blackbox.c: 309:                 star = 1;
  3469   000228  0E00               	movlw	0
  3470   00022A  6E42               	movwf	(_star+1)^0,c
  3471   00022C  0E01               	movlw	1
  3472   00022E  6E41               	movwf	_star^0,c
  3473                           
  3474                           ;blackbox.c: 310:                 pos = 6;
  3475   000230  0E00               	movlw	0
  3476   000232  6E59               	movwf	(_pos+1)^0,c
  3477   000234  0E06               	movlw	6
  3478   000236  6E58               	movwf	_pos^0,c
  3479                           
  3480                           ;blackbox.c: 311:                 x = 6;
  3481   000238  0E00               	movlw	0
  3482   00023A  6FDF               	movwf	(_x+1)& (0+255),b
  3483   00023C  0E06               	movlw	6
  3484   00023E  6FDE               	movwf	_x& (0+255),b
  3485   000240                     l349:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;blackbox.c: 313:             delay = 0;
  3489   000240  0E00               	movlw	0
  3490   000242  6F75               	movwf	_delay& (0+255),b
  3491   000244  0E00               	movlw	0
  3492   000246  6F76               	movwf	(_delay+1)& (0+255),b
  3493   000248  0E00               	movlw	0
  3494   00024A  6F77               	movwf	(_delay+2)& (0+255),b
  3495   00024C  0E00               	movlw	0
  3496   00024E  6F78               	movwf	(_delay+3)& (0+255),b
  3497   000250  EF20  F002         	goto	l368
  3498   000254                     l3942:
  3499   000254  0E04               	movlw	4
  3500   000256  1845               	xorwf	_idx^0,w,c
  3501   000258  1046               	iorwf	(_idx+1)^0,w,c
  3502   00025A  A4D8               	btfss	status,2,c
  3503   00025C  EF32  F001         	goto	u3121
  3504   000260  EF34  F001         	goto	u3120
  3505   000264                     u3121:
  3506   000264  EF20  F002         	goto	l368
  3507   000268                     u3120:
  3508   000268                     
  3509                           ;blackbox.c: 316:         get_pass();
  3510   000268  ECCB  F011         	call	_get_pass	;wreg free
  3511   00026C                     
  3512                           ;blackbox.c: 317:         if (strcmp(password, pass) == 0) {
  3513   00026C  0EAA               	movlw	low _password
  3514   00026E  6E01               	movwf	strcmp@l^0,c
  3515   000270  0E00               	movlw	high _password
  3516   000272  6E02               	movwf	(strcmp@l+1)^0,c
  3517   000274  0EA5               	movlw	low _pass
  3518   000276  6E03               	movwf	strcmp@r^0,c
  3519   000278  0E00               	movlw	high _pass
  3520   00027A  6E04               	movwf	(strcmp@r+1)^0,c
  3521   00027C  EC56  F010         	call	_strcmp	;wreg free
  3522   000280  5001               	movf	?_strcmp^0,w,c
  3523   000282  1002               	iorwf	(?_strcmp+1)^0,w,c
  3524   000284  A4D8               	btfss	status,2,c
  3525   000286  EF47  F001         	goto	u3131
  3526   00028A  EF49  F001         	goto	u3130
  3527   00028E                     u3131:
  3528   00028E  EFAE  F001         	goto	l3972
  3529   000292                     u3130:
  3530   000292                     
  3531                           ;blackbox.c: 318:             for (unsigned long int i = 900000; i--;);
  3532   000292  0EA0               	movlw	160
  3533   000294  6E0D               	movwf	login@i^0,c
  3534   000296  0EBB               	movlw	187
  3535   000298  6E0E               	movwf	(login@i+1)^0,c
  3536   00029A  0E0D               	movlw	13
  3537   00029C  6E0F               	movwf	(login@i+2)^0,c
  3538   00029E  0E00               	movlw	0
  3539   0002A0  6E10               	movwf	(login@i+3)^0,c
  3540   0002A2                     l3950:
  3541   0002A2  060D               	decf	login@i^0,f,c
  3542   0002A4  0E00               	movlw	0
  3543   0002A6  5A0E               	subwfb	(login@i+1)^0,f,c
  3544   0002A8  5A0F               	subwfb	(login@i+2)^0,f,c
  3545   0002AA  5A10               	subwfb	(login@i+3)^0,f,c
  3546   0002AC  280D               	incf	login@i^0,w,c
  3547   0002AE  E10A               	bnz	u3141
  3548   0002B0  280E               	incf	(login@i+1)^0,w,c
  3549   0002B2  E108               	bnz	u3141
  3550   0002B4  280F               	incf	(login@i+2)^0,w,c
  3551   0002B6  E106               	bnz	u3141
  3552   0002B8  2810               	incf	(login@i+3)^0,w,c
  3553   0002BA  A4D8               	btfss	status,2,c
  3554   0002BC  EF62  F001         	goto	u3141
  3555   0002C0  EF64  F001         	goto	u3140
  3556   0002C4                     u3141:
  3557   0002C4  EF51  F001         	goto	l3950
  3558   0002C8                     u3140:
  3559   0002C8                     
  3560                           ;blackbox.c: 319:             clcd_write(0x01, 0);
  3561   0002C8  0E00               	movlw	0
  3562   0002CA  6E01               	movwf	clcd_write@control_bit^0,c
  3563   0002CC  0E01               	movlw	1
  3564   0002CE  ECEA  F011         	call	_clcd_write
  3565   0002D2                     
  3566                           ;blackbox.c: 320:             clcd_print("  Login ", (0x80 + (3)));
  3567   0002D2  0EBC               	movlw	low STR_28
  3568   0002D4  6E03               	movwf	clcd_print@data^0,c
  3569   0002D6  0E2F               	movlw	high STR_28
  3570   0002D8  6E04               	movwf	(clcd_print@data+1)^0,c
  3571   0002DA  0E83               	movlw	131
  3572   0002DC  6E05               	movwf	clcd_print@addr^0,c
  3573   0002DE  EC8C  F010         	call	_clcd_print	;wreg free
  3574   0002E2                     
  3575                           ;blackbox.c: 321:             clcd_print("Successfull...", (0xC0 + (1)));
  3576   0002E2  0E14               	movlw	low STR_29
  3577   0002E4  6E03               	movwf	clcd_print@data^0,c
  3578   0002E6  0E2F               	movlw	high STR_29
  3579   0002E8  6E04               	movwf	(clcd_print@data+1)^0,c
  3580   0002EA  0EC1               	movlw	193
  3581   0002EC  6E05               	movwf	clcd_print@addr^0,c
  3582   0002EE  EC8C  F010         	call	_clcd_print	;wreg free
  3583   0002F2                     
  3584                           ;blackbox.c: 322:             for (unsigned long int i = 500000; i--;);
  3585   0002F2  0E20               	movlw	32
  3586   0002F4  6E11               	movwf	login@i_372^0,c
  3587   0002F6  0EA1               	movlw	161
  3588   0002F8  6E12               	movwf	(login@i_372+1)^0,c
  3589   0002FA  0E07               	movlw	7
  3590   0002FC  6E13               	movwf	(login@i_372+2)^0,c
  3591   0002FE  0E00               	movlw	0
  3592   000300  6E14               	movwf	(login@i_372+3)^0,c
  3593   000302                     l3960:
  3594   000302  0611               	decf	login@i_372^0,f,c
  3595   000304  0E00               	movlw	0
  3596   000306  5A12               	subwfb	(login@i_372+1)^0,f,c
  3597   000308  5A13               	subwfb	(login@i_372+2)^0,f,c
  3598   00030A  5A14               	subwfb	(login@i_372+3)^0,f,c
  3599   00030C  2811               	incf	login@i_372^0,w,c
  3600   00030E  E10A               	bnz	u3151
  3601   000310  2812               	incf	(login@i_372+1)^0,w,c
  3602   000312  E108               	bnz	u3151
  3603   000314  2813               	incf	(login@i_372+2)^0,w,c
  3604   000316  E106               	bnz	u3151
  3605   000318  2814               	incf	(login@i_372+3)^0,w,c
  3606   00031A  A4D8               	btfss	status,2,c
  3607   00031C  EF92  F001         	goto	u3151
  3608   000320  EF94  F001         	goto	u3150
  3609   000324                     u3151:
  3610   000324  EF81  F001         	goto	l3960
  3611   000328                     u3150:
  3612   000328                     
  3613                           ;blackbox.c: 323:             clcd_write(0x01, 0);
  3614   000328  0E00               	movlw	0
  3615   00032A  6E01               	movwf	clcd_write@control_bit^0,c
  3616   00032C  0E01               	movlw	1
  3617   00032E  ECEA  F011         	call	_clcd_write
  3618   000332                     
  3619                           ;blackbox.c: 324:             attempts = 0;
  3620   000332  0E00               	movlw	0
  3621   000334  0100               	movlb	0	; () banked
  3622   000336  6F94               	movwf	(_attempts+1)& (0+255),b
  3623   000338  0E00               	movlw	0
  3624   00033A  6F93               	movwf	_attempts& (0+255),b
  3625   00033C                     
  3626                           ; BSR set to: 0
  3627                           ;blackbox.c: 325:             idx = 0;
  3628   00033C  0E00               	movlw	0
  3629   00033E  6E46               	movwf	(_idx+1)^0,c
  3630   000340  0E00               	movlw	0
  3631   000342  6E45               	movwf	_idx^0,c
  3632                           
  3633                           ;blackbox.c: 326:             clr_pass();
  3634   000344  ECBE  F012         	call	_clr_pass	;wreg free
  3635   000348                     
  3636                           ;blackbox.c: 327:             pre_key = 1;
  3637   000348  0E00               	movlw	0
  3638   00034A  6E50               	movwf	(_pre_key+1)^0,c
  3639   00034C  0E01               	movlw	1
  3640   00034E  6E4F               	movwf	_pre_key^0,c
  3641   000350                     
  3642                           ;blackbox.c: 328:             screen_flag = 2;
  3643   000350  0E00               	movlw	0
  3644   000352  6E52               	movwf	(_screen_flag+1)^0,c
  3645   000354  0E02               	movlw	2
  3646   000356  6E51               	movwf	_screen_flag^0,c
  3647                           
  3648                           ;blackbox.c: 329:         } else {
  3649   000358  EF20  F002         	goto	l368
  3650   00035C                     l3972:
  3651                           
  3652                           ;blackbox.c: 331:             attempts++;
  3653   00035C  0100               	movlb	0	; () banked
  3654   00035E  4B93               	infsnz	_attempts& (0+255),f,b
  3655   000360  2B94               	incf	(_attempts+1)& (0+255),f,b
  3656   000362                     
  3657                           ; BSR set to: 0
  3658                           ;blackbox.c: 332:             if (attempts < 3) {
  3659   000362  BF94               	btfsc	(_attempts+1)& (0+255),7,b
  3660   000364  EFBF  F001         	goto	u3160
  3661   000368  5194               	movf	(_attempts+1)& (0+255),w,b
  3662   00036A  E107               	bnz	u3161
  3663   00036C  0E03               	movlw	3
  3664   00036E  5D93               	subwf	_attempts& (0+255),w,b
  3665   000370  B0D8               	btfsc	status,0,c
  3666   000372  EFBD  F001         	goto	u3161
  3667   000376  EFBF  F001         	goto	u3160
  3668   00037A                     u3161:
  3669   00037A  EF1E  F002         	goto	l3998
  3670   00037E                     u3160:
  3671   00037E                     
  3672                           ; BSR set to: 0
  3673                           ;blackbox.c: 333:                 for (unsigned long int i = 900000; i--;);
  3674   00037E  0EA0               	movlw	160
  3675   000380  6E15               	movwf	login@i_373^0,c
  3676   000382  0EBB               	movlw	187
  3677   000384  6E16               	movwf	(login@i_373+1)^0,c
  3678   000386  0E0D               	movlw	13
  3679   000388  6E17               	movwf	(login@i_373+2)^0,c
  3680   00038A  0E00               	movlw	0
  3681   00038C  6E18               	movwf	(login@i_373+3)^0,c
  3682   00038E                     l3978:
  3683   00038E  0615               	decf	login@i_373^0,f,c
  3684   000390  0E00               	movlw	0
  3685   000392  5A16               	subwfb	(login@i_373+1)^0,f,c
  3686   000394  5A17               	subwfb	(login@i_373+2)^0,f,c
  3687   000396  5A18               	subwfb	(login@i_373+3)^0,f,c
  3688   000398  2815               	incf	login@i_373^0,w,c
  3689   00039A  E10A               	bnz	u3171
  3690   00039C  2816               	incf	(login@i_373+1)^0,w,c
  3691   00039E  E108               	bnz	u3171
  3692   0003A0  2817               	incf	(login@i_373+2)^0,w,c
  3693   0003A2  E106               	bnz	u3171
  3694   0003A4  2818               	incf	(login@i_373+3)^0,w,c
  3695   0003A6  A4D8               	btfss	status,2,c
  3696   0003A8  EFD8  F001         	goto	u3171
  3697   0003AC  EFDA  F001         	goto	u3170
  3698   0003B0                     u3171:
  3699   0003B0  EFC7  F001         	goto	l3978
  3700   0003B4                     u3170:
  3701   0003B4                     
  3702                           ;blackbox.c: 334:                 clcd_write(0x01, 0);
  3703   0003B4  0E00               	movlw	0
  3704   0003B6  6E01               	movwf	clcd_write@control_bit^0,c
  3705   0003B8  0E01               	movlw	1
  3706   0003BA  ECEA  F011         	call	_clcd_write
  3707   0003BE                     
  3708                           ;blackbox.c: 335:                 clcd_print("Incorrect  ", (0x80 + (3)));
  3709   0003BE  0E8E               	movlw	low STR_30
  3710   0003C0  6E03               	movwf	clcd_print@data^0,c
  3711   0003C2  0E2F               	movlw	high STR_30
  3712   0003C4  6E04               	movwf	(clcd_print@data+1)^0,c
  3713   0003C6  0E83               	movlw	131
  3714   0003C8  6E05               	movwf	clcd_print@addr^0,c
  3715   0003CA  EC8C  F010         	call	_clcd_print	;wreg free
  3716   0003CE                     
  3717                           ;blackbox.c: 336:                 clcd_print("Attempts Left:", (0xC0 + (0)));
  3718   0003CE  0E23               	movlw	low STR_31
  3719   0003D0  6E03               	movwf	clcd_print@data^0,c
  3720   0003D2  0E2F               	movlw	high STR_31
  3721   0003D4  6E04               	movwf	(clcd_print@data+1)^0,c
  3722   0003D6  0EC0               	movlw	192
  3723   0003D8  6E05               	movwf	clcd_print@addr^0,c
  3724   0003DA  EC8C  F010         	call	_clcd_print	;wreg free
  3725   0003DE                     
  3726                           ;blackbox.c: 337:                 clcd_putch('0' + 3 - (attempts), (0xC0 + (15)));
  3727   0003DE  0ECF               	movlw	207
  3728   0003E0  6E09               	movwf	clcd_putch@addr^0,c
  3729   0003E2  0100               	movlb	0	; () banked
  3730   0003E4  5193               	movf	_attempts& (0+255),w,b
  3731   0003E6  0833               	sublw	51
  3732   0003E8  EC9C  F012         	call	_clcd_putch
  3733   0003EC                     
  3734                           ;blackbox.c: 338:                 for (unsigned long int i = 900000; i--;);
  3735   0003EC  0EA0               	movlw	160
  3736   0003EE  6E19               	movwf	login@i_376^0,c
  3737   0003F0  0EBB               	movlw	187
  3738   0003F2  6E1A               	movwf	(login@i_376+1)^0,c
  3739   0003F4  0E0D               	movlw	13
  3740   0003F6  6E1B               	movwf	(login@i_376+2)^0,c
  3741   0003F8  0E00               	movlw	0
  3742   0003FA  6E1C               	movwf	(login@i_376+3)^0,c
  3743   0003FC                     l3990:
  3744   0003FC  0619               	decf	login@i_376^0,f,c
  3745   0003FE  0E00               	movlw	0
  3746   000400  5A1A               	subwfb	(login@i_376+1)^0,f,c
  3747   000402  5A1B               	subwfb	(login@i_376+2)^0,f,c
  3748   000404  5A1C               	subwfb	(login@i_376+3)^0,f,c
  3749   000406  2819               	incf	login@i_376^0,w,c
  3750   000408  E10A               	bnz	u3181
  3751   00040A  281A               	incf	(login@i_376+1)^0,w,c
  3752   00040C  E108               	bnz	u3181
  3753   00040E  281B               	incf	(login@i_376+2)^0,w,c
  3754   000410  E106               	bnz	u3181
  3755   000412  281C               	incf	(login@i_376+3)^0,w,c
  3756   000414  A4D8               	btfss	status,2,c
  3757   000416  EF0F  F002         	goto	u3181
  3758   00041A  EF11  F002         	goto	u3180
  3759   00041E                     u3181:
  3760   00041E  EFFE  F001         	goto	l3990
  3761   000422                     u3180:
  3762   000422                     
  3763                           ;blackbox.c: 339:                 idx = 0;
  3764   000422  0E00               	movlw	0
  3765   000424  6E46               	movwf	(_idx+1)^0,c
  3766   000426  0E00               	movlw	0
  3767   000428  6E45               	movwf	_idx^0,c
  3768   00042A                     
  3769                           ;blackbox.c: 340:                 clr_pass();
  3770   00042A  ECBE  F012         	call	_clr_pass	;wreg free
  3771   00042E                     
  3772                           ;blackbox.c: 341:                 enter = 0;
  3773   00042E  0E00               	movlw	0
  3774   000430  0100               	movlb	0	; () banked
  3775   000432  6F98               	movwf	(_enter+1)& (0+255),b
  3776   000434  0E00               	movlw	0
  3777   000436  6F97               	movwf	_enter& (0+255),b
  3778                           
  3779                           ;blackbox.c: 344:             } else {
  3780   000438  EF20  F002         	goto	l368
  3781   00043C                     l3998:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;blackbox.c: 355:                 timeout();
  3785   00043C  EC63  F00C         	call	_timeout	;wreg free
  3786   000440                     l368:
  3787   000440  0012               	return		;funcret
  3788   000442                     __end_of_login:
  3789                           	callstack 0
  3790                           
  3791 ;; *************** function _timeout *****************
  3792 ;; Defined at:
  3793 ;;		line 54 in file "blackbox.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3807 ;;      Params:         0       0       0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0
  3810 ;;      Totals:         0       0       0       0       0       0       0
  3811 ;;Total ram usage:        0 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 3
  3814 ;; This function calls:
  3815 ;;		___awdiv
  3816 ;;		___awmod
  3817 ;;		_clcd_print
  3818 ;;		_clcd_putch
  3819 ;;		_clcd_write
  3820 ;;		_clr_pass
  3821 ;; This function is called by:
  3822 ;;		_login
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text6
  3827   0018C6                     __ptext6:
  3828                           	callstack 0
  3829   0018C6                     _timeout:
  3830                           	callstack 26
  3831   0018C6                     
  3832                           ;blackbox.c: 56:     GIE = PEIE = TMR0IE = 1;
  3833   0018C6  8AF2               	bsf	4082,5,c	;volatile
  3834   0018C8  8CF2               	bsf	4082,6,c	;volatile
  3835   0018CA  8EF2               	bsf	4082,7,c	;volatile
  3836   0018CC                     
  3837                           ;blackbox.c: 57:     clcd_print("  Please Try   ", (0x80 + (0)));
  3838   0018CC  0EF5               	movlw	low STR_20
  3839   0018CE  6E03               	movwf	clcd_print@data^0,c
  3840   0018D0  0E2E               	movlw	high STR_20
  3841   0018D2  6E04               	movwf	(clcd_print@data+1)^0,c
  3842   0018D4  0E80               	movlw	128
  3843   0018D6  6E05               	movwf	clcd_print@addr^0,c
  3844   0018D8  EC8C  F010         	call	_clcd_print	;wreg free
  3845                           
  3846                           ;blackbox.c: 58:     clcd_print("Again in ", (0xC0 + (0)));
  3847   0018DC  0EB2               	movlw	low STR_21
  3848   0018DE  6E03               	movwf	clcd_print@data^0,c
  3849   0018E0  0E2F               	movlw	high STR_21
  3850   0018E2  6E04               	movwf	(clcd_print@data+1)^0,c
  3851   0018E4  0EC0               	movlw	192
  3852   0018E6  6E05               	movwf	clcd_print@addr^0,c
  3853   0018E8  EC8C  F010         	call	_clcd_print	;wreg free
  3854   0018EC                     
  3855                           ;blackbox.c: 59:     clcd_putch(seconds / 10 + 48, (0xC0 + (9)));
  3856   0018EC  0EC9               	movlw	201
  3857   0018EE  6E09               	movwf	clcd_putch@addr^0,c
  3858   0018F0  C05A  F001         	movff	_seconds,___awdiv@dividend
  3859   0018F4  C05B  F002         	movff	_seconds+1,___awdiv@dividend+1
  3860   0018F8  0E00               	movlw	0
  3861   0018FA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3862   0018FC  0E0A               	movlw	10
  3863   0018FE  6E03               	movwf	___awdiv@divisor^0,c
  3864   001900  ECC8  F00C         	call	___awdiv	;wreg free
  3865   001904  5001               	movf	?___awdiv^0,w,c
  3866   001906  0F30               	addlw	48
  3867   001908  EC9C  F012         	call	_clcd_putch
  3868   00190C                     
  3869                           ;blackbox.c: 60:     clcd_putch(seconds % 10 + 48, (0xC0 + (10)));
  3870   00190C  0ECA               	movlw	202
  3871   00190E  6E09               	movwf	clcd_putch@addr^0,c
  3872   001910  C05A  F001         	movff	_seconds,___awmod@dividend
  3873   001914  C05B  F002         	movff	_seconds+1,___awmod@dividend+1
  3874   001918  0E00               	movlw	0
  3875   00191A  6E04               	movwf	(___awmod@divisor+1)^0,c
  3876   00191C  0E0A               	movlw	10
  3877   00191E  6E03               	movwf	___awmod@divisor^0,c
  3878   001920  EC3E  F00E         	call	___awmod	;wreg free
  3879   001924  5001               	movf	?___awmod^0,w,c
  3880   001926  0F30               	addlw	48
  3881   001928  EC9C  F012         	call	_clcd_putch
  3882                           
  3883                           ;blackbox.c: 61:     clcd_print(" sec", (0xC0 + (11)));
  3884   00192C  0ECC               	movlw	low STR_22
  3885   00192E  6E03               	movwf	clcd_print@data^0,c
  3886   001930  0E2F               	movlw	high STR_22
  3887   001932  6E04               	movwf	(clcd_print@data+1)^0,c
  3888   001934  0ECB               	movlw	203
  3889   001936  6E05               	movwf	clcd_print@addr^0,c
  3890   001938  EC8C  F010         	call	_clcd_print	;wreg free
  3891   00193C                     
  3892                           ;blackbox.c: 63:     if (seconds == 0) {
  3893   00193C  505A               	movf	_seconds^0,w,c
  3894   00193E  105B               	iorwf	(_seconds+1)^0,w,c
  3895   001940  A4D8               	btfss	status,2,c
  3896   001942  EFA5  F00C         	goto	u2721
  3897   001946  EFA7  F00C         	goto	u2720
  3898   00194A                     u2721:
  3899   00194A  EFC7  F00C         	goto	l259
  3900   00194E                     u2720:
  3901   00194E                     
  3902                           ;blackbox.c: 64:         GIE = PEIE = TMR0IE = 0;
  3903   00194E  9AF2               	bcf	4082,5,c	;volatile
  3904   001950  9CF2               	bcf	4082,6,c	;volatile
  3905   001952  9EF2               	bcf	4082,7,c	;volatile
  3906   001954                     
  3907                           ;blackbox.c: 65:         clcd_write(0x01, 0);
  3908   001954  0E00               	movlw	0
  3909   001956  6E01               	movwf	clcd_write@control_bit^0,c
  3910   001958  0E01               	movlw	1
  3911   00195A  ECEA  F011         	call	_clcd_write
  3912   00195E                     
  3913                           ;blackbox.c: 66:         screen_flag = 0;
  3914   00195E  0E00               	movlw	0
  3915   001960  6E52               	movwf	(_screen_flag+1)^0,c
  3916   001962  0E00               	movlw	0
  3917   001964  6E51               	movwf	_screen_flag^0,c
  3918   001966                     
  3919                           ;blackbox.c: 67:         seconds = 10;
  3920   001966  0E00               	movlw	0
  3921   001968  6E5B               	movwf	(_seconds+1)^0,c
  3922   00196A  0E0A               	movlw	10
  3923   00196C  6E5A               	movwf	_seconds^0,c
  3924   00196E                     
  3925                           ;blackbox.c: 68:         attempts = 0;
  3926   00196E  0E00               	movlw	0
  3927   001970  0100               	movlb	0	; () banked
  3928   001972  6F94               	movwf	(_attempts+1)& (0+255),b
  3929   001974  0E00               	movlw	0
  3930   001976  6F93               	movwf	_attempts& (0+255),b
  3931   001978                     
  3932                           ; BSR set to: 0
  3933                           ;blackbox.c: 69:         idx = 0;
  3934   001978  0E00               	movlw	0
  3935   00197A  6E46               	movwf	(_idx+1)^0,c
  3936   00197C  0E00               	movlw	0
  3937   00197E  6E45               	movwf	_idx^0,c
  3938                           
  3939                           ;blackbox.c: 70:         clr_pass();
  3940   001980  ECBE  F012         	call	_clr_pass	;wreg free
  3941   001984                     
  3942                           ;blackbox.c: 71:         enter = 0;
  3943   001984  0E00               	movlw	0
  3944   001986  0100               	movlb	0	; () banked
  3945   001988  6F98               	movwf	(_enter+1)& (0+255),b
  3946   00198A  0E00               	movlw	0
  3947   00198C  6F97               	movwf	_enter& (0+255),b
  3948   00198E                     l259:
  3949   00198E  0012               	return		;funcret
  3950   001990                     __end_of_timeout:
  3951                           	callstack 0
  3952                           
  3953 ;; *************** function _clr_pass *****************
  3954 ;; Defined at:
  3955 ;;		line 46 in file "blackbox.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3969 ;;      Params:         0       0       0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0
  3972 ;;      Totals:         0       0       0       0       0       0       0
  3973 ;;Total ram usage:        0 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; Hardware stack levels required when called: 1
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_timeout
  3980 ;;		_login
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text7
  3985   00257C                     __ptext7:
  3986                           	callstack 0
  3987   00257C                     _clr_pass:
  3988                           	callstack 27
  3989   00257C                     
  3990                           ;blackbox.c: 47:     password[0] = password[1] = password[2] = password[3] = 0;
  3991   00257C  0E00               	movlw	0
  3992   00257E  0100               	movlb	0	; () banked
  3993   002580  6FAD               	movwf	(_password+3)& (0+255),b
  3994   002582  C0AD  F0AC         	movff	_password+3,_password+2
  3995   002586  C0AC  F0AB         	movff	_password+2,_password+1
  3996   00258A  C0AB  F0AA         	movff	_password+1,_password
  3997   00258E                     
  3998                           ; BSR set to: 0
  3999   00258E  0012               	return		;funcret
  4000   002590                     __end_of_clr_pass:
  4001                           	callstack 0
  4002                           
  4003 ;; *************** function ___awdiv *****************
  4004 ;; Defined at:
  4005 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;  dividend        2    0[COMRAM] int 
  4008 ;;  divisor         2    2[COMRAM] int 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  quotient        2    6[COMRAM] int 
  4011 ;;  sign            1    5[COMRAM] unsigned char 
  4012 ;;  counter         1    4[COMRAM] unsigned char 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  2    0[COMRAM] int 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4022 ;;      Params:         4       0       0       0       0       0       0
  4023 ;;      Locals:         4       0       0       0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0
  4025 ;;      Totals:         8       0       0       0       0       0       0
  4026 ;;Total ram usage:        8 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 1
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_timeout
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text8
  4037   001990                     __ptext8:
  4038                           	callstack 0
  4039   001990                     ___awdiv:
  4040                           	callstack 27
  4041   001990  0E00               	movlw	0
  4042   001992  6E06               	movwf	___awdiv@sign^0,c
  4043   001994  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4044   001996  EFD1  F00C         	goto	u2360
  4045   00199A  EFCF  F00C         	goto	u2361
  4046   00199E                     u2361:
  4047   00199E  EFD7  F00C         	goto	l3400
  4048   0019A2                     u2360:
  4049   0019A2  6C03               	negf	___awdiv@divisor^0,c
  4050   0019A4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4051   0019A6  B0D8               	btfsc	status,0,c
  4052   0019A8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4053   0019AA  0E01               	movlw	1
  4054   0019AC  6E06               	movwf	___awdiv@sign^0,c
  4055   0019AE                     l3400:
  4056   0019AE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4057   0019B0  EFDE  F00C         	goto	u2370
  4058   0019B4  EFDC  F00C         	goto	u2371
  4059   0019B8                     u2371:
  4060   0019B8  EFE4  F00C         	goto	l3406
  4061   0019BC                     u2370:
  4062   0019BC  6C01               	negf	___awdiv@dividend^0,c
  4063   0019BE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4064   0019C0  B0D8               	btfsc	status,0,c
  4065   0019C2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4066   0019C4  0E01               	movlw	1
  4067   0019C6  1A06               	xorwf	___awdiv@sign^0,f,c
  4068   0019C8                     l3406:
  4069   0019C8  0E00               	movlw	0
  4070   0019CA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4071   0019CC  0E00               	movlw	0
  4072   0019CE  6E07               	movwf	___awdiv@quotient^0,c
  4073   0019D0  5003               	movf	___awdiv@divisor^0,w,c
  4074   0019D2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4075   0019D4  B4D8               	btfsc	status,2,c
  4076   0019D6  EFEF  F00C         	goto	u2381
  4077   0019DA  EFF1  F00C         	goto	u2380
  4078   0019DE                     u2381:
  4079   0019DE  EF19  F00D         	goto	l3428
  4080   0019E2                     u2380:
  4081   0019E2  0E01               	movlw	1
  4082   0019E4  6E05               	movwf	___awdiv@counter^0,c
  4083   0019E6  EFF9  F00C         	goto	l3414
  4084   0019EA                     l3412:
  4085   0019EA  90D8               	bcf	status,0,c
  4086   0019EC  3603               	rlcf	___awdiv@divisor^0,f,c
  4087   0019EE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4088   0019F0  2A05               	incf	___awdiv@counter^0,f,c
  4089   0019F2                     l3414:
  4090   0019F2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4091   0019F4  EFFE  F00C         	goto	u2391
  4092   0019F8  EF00  F00D         	goto	u2390
  4093   0019FC                     u2391:
  4094   0019FC  EFF5  F00C         	goto	l3412
  4095   001A00                     u2390:
  4096   001A00                     l3416:
  4097   001A00  90D8               	bcf	status,0,c
  4098   001A02  3607               	rlcf	___awdiv@quotient^0,f,c
  4099   001A04  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4100   001A06  5003               	movf	___awdiv@divisor^0,w,c
  4101   001A08  5C01               	subwf	___awdiv@dividend^0,w,c
  4102   001A0A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4103   001A0C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4104   001A0E  A0D8               	btfss	status,0,c
  4105   001A10  EF0C  F00D         	goto	u2401
  4106   001A14  EF0E  F00D         	goto	u2400
  4107   001A18                     u2401:
  4108   001A18  EF13  F00D         	goto	l3424
  4109   001A1C                     u2400:
  4110   001A1C  5003               	movf	___awdiv@divisor^0,w,c
  4111   001A1E  5E01               	subwf	___awdiv@dividend^0,f,c
  4112   001A20  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4113   001A22  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4114   001A24  8007               	bsf	___awdiv@quotient^0,0,c
  4115   001A26                     l3424:
  4116   001A26  90D8               	bcf	status,0,c
  4117   001A28  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4118   001A2A  3203               	rrcf	___awdiv@divisor^0,f,c
  4119   001A2C  2E05               	decfsz	___awdiv@counter^0,f,c
  4120   001A2E  EF00  F00D         	goto	l3416
  4121   001A32                     l3428:
  4122   001A32  5006               	movf	___awdiv@sign^0,w,c
  4123   001A34  B4D8               	btfsc	status,2,c
  4124   001A36  EF1F  F00D         	goto	u2411
  4125   001A3A  EF21  F00D         	goto	u2410
  4126   001A3E                     u2411:
  4127   001A3E  EF25  F00D         	goto	l3432
  4128   001A42                     u2410:
  4129   001A42  6C07               	negf	___awdiv@quotient^0,c
  4130   001A44  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4131   001A46  B0D8               	btfsc	status,0,c
  4132   001A48  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4133   001A4A                     l3432:
  4134   001A4A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4135   001A4E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4136   001A52  0012               	return		;funcret
  4137   001A54                     __end_of___awdiv:
  4138                           	callstack 0
  4139                           
  4140 ;; *************** function _blink *****************
  4141 ;; Defined at:
  4142 ;;		line 251 in file "blackbox.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  x               2   10[COMRAM] int 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;		None
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4156 ;;      Params:         2       0       0       0       0       0       0
  4157 ;;      Locals:         0       0       0       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0
  4159 ;;      Totals:         2       0       0       0       0       0       0
  4160 ;;Total ram usage:        2 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 3
  4163 ;; This function calls:
  4164 ;;		_clcd_putch
  4165 ;; This function is called by:
  4166 ;;		_login
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text9
  4171   00203A                     __ptext9:
  4172                           	callstack 0
  4173   00203A                     _blink:
  4174                           	callstack 26
  4175   00203A                     
  4176                           ;blackbox.c: 252:     if (c_wait++ == 10000) {
  4177   00203A  0100               	movlb	0	; () banked
  4178   00203C  4B95               	infsnz	_c_wait& (0+255),f,b
  4179   00203E  2B96               	incf	(_c_wait+1)& (0+255),f,b
  4180   002040  0E11               	movlw	17
  4181   002042  1995               	xorwf	_c_wait& (0+255),w,b
  4182   002044  E107               	bnz	u2871
  4183   002046  0E27               	movlw	39
  4184   002048  1996               	xorwf	(_c_wait+1)& (0+255),w,b
  4185   00204A  A4D8               	btfss	status,2,c
  4186   00204C  EF2A  F010         	goto	u2871
  4187   002050  EF2C  F010         	goto	u2870
  4188   002054                     u2871:
  4189   002054  EF55  F010         	goto	l335
  4190   002058                     u2870:
  4191   002058                     
  4192                           ; BSR set to: 0
  4193                           ;blackbox.c: 253:         if (cursor == 0) {
  4194   002058  5043               	movf	_cursor^0,w,c
  4195   00205A  1044               	iorwf	(_cursor+1)^0,w,c
  4196   00205C  A4D8               	btfss	status,2,c
  4197   00205E  EF33  F010         	goto	u2881
  4198   002062  EF35  F010         	goto	u2880
  4199   002066                     u2881:
  4200   002066  EF3D  F010         	goto	l3778
  4201   00206A                     u2880:
  4202   00206A                     
  4203                           ; BSR set to: 0
  4204                           ;blackbox.c: 254:             clcd_putch('_', (0xC0 + (x)));
  4205   00206A  500B               	movf	blink@x^0,w,c
  4206   00206C  0FC0               	addlw	192
  4207   00206E  6E09               	movwf	clcd_putch@addr^0,c
  4208   002070  0E5F               	movlw	95
  4209   002072  EC9C  F012         	call	_clcd_putch
  4210                           
  4211                           ;blackbox.c: 255:         } else {
  4212   002076  EF43  F010         	goto	l3780
  4213   00207A                     l3778:
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;blackbox.c: 256:             clcd_putch(' ', (0xC0 + (x)));
  4217   00207A  500B               	movf	blink@x^0,w,c
  4218   00207C  0FC0               	addlw	192
  4219   00207E  6E09               	movwf	clcd_putch@addr^0,c
  4220   002080  0E20               	movlw	32
  4221   002082  EC9C  F012         	call	_clcd_putch
  4222   002086                     l3780:
  4223                           
  4224                           ;blackbox.c: 258:         cursor = !cursor;
  4225   002086  5043               	movf	_cursor^0,w,c
  4226   002088  1044               	iorwf	(_cursor+1)^0,w,c
  4227   00208A  B4D8               	btfsc	status,2,c
  4228   00208C  EF4A  F010         	goto	u2891
  4229   002090  EF4D  F010         	goto	u2890
  4230   002094                     u2891:
  4231   002094  0E01               	movlw	1
  4232   002096  EF4E  F010         	goto	u2900
  4233   00209A                     u2890:
  4234   00209A  0E00               	movlw	0
  4235   00209C                     u2900:
  4236   00209C  6E43               	movwf	_cursor^0,c
  4237   00209E  6A44               	clrf	(_cursor+1)^0,c
  4238   0020A0                     
  4239                           ;blackbox.c: 259:         c_wait = 0;
  4240   0020A0  0E00               	movlw	0
  4241   0020A2  0100               	movlb	0	; () banked
  4242   0020A4  6F96               	movwf	(_c_wait+1)& (0+255),b
  4243   0020A6  0E00               	movlw	0
  4244   0020A8  6F95               	movwf	_c_wait& (0+255),b
  4245   0020AA                     l335:
  4246                           
  4247                           ; BSR set to: 0
  4248   0020AA  0012               	return		;funcret
  4249   0020AC                     __end_of_blink:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function _init_config *****************
  4253 ;; Defined at:
  4254 ;;		line 17 in file "main_.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4268 ;;      Params:         0       0       0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0
  4271 ;;      Totals:         0       0       0       0       0       0       0
  4272 ;;Total ram usage:        0 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 6
  4275 ;; This function calls:
  4276 ;;		_init_adc
  4277 ;;		_init_clcd
  4278 ;;		_init_ds1307
  4279 ;;		_init_i2c
  4280 ;;		_init_matrix_keypad
  4281 ;;		_init_timer0
  4282 ;;		_write_external_eeprom
  4283 ;; This function is called by:
  4284 ;;		_main
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text10
  4289   002236                     __ptext10:
  4290                           	callstack 0
  4291   002236                     _init_config:
  4292                           	callstack 24
  4293   002236                     
  4294                           ;main_.c: 18:     init_clcd();
  4295   002236  EC96  F00E         	call	_init_clcd	;wreg free
  4296                           
  4297                           ;main_.c: 19:     init_matrix_keypad();
  4298   00223A  ECD2  F012         	call	_init_matrix_keypad	;wreg free
  4299   00223E                     
  4300                           ;main_.c: 20:     init_adc();
  4301   00223E  EC7D  F012         	call	_init_adc	;wreg free
  4302   002242                     
  4303                           ;main_.c: 22:     init_i2c();
  4304   002242  ECA8  F012         	call	_init_i2c	;wreg free
  4305                           
  4306                           ;main_.c: 23:     init_ds1307();
  4307   002246  EC89  F011         	call	_init_ds1307	;wreg free
  4308   00224A                     
  4309                           ;main_.c: 25:     init_timer0();
  4310   00224A  ECC8  F012         	call	_init_timer0	;wreg free
  4311   00224E                     
  4312                           ;main_.c: 27:     write_external_eeprom(0x00, '1');
  4313   00224E  0E31               	movlw	49
  4314   002250  6E02               	movwf	write_external_eeprom@data^0,c
  4315   002252  0E00               	movlw	0
  4316   002254  ECAB  F011         	call	_write_external_eeprom
  4317   002258                     
  4318                           ;main_.c: 28:     write_external_eeprom(0x01, '1');
  4319   002258  0E31               	movlw	49
  4320   00225A  6E02               	movwf	write_external_eeprom@data^0,c
  4321   00225C  0E01               	movlw	1
  4322   00225E  ECAB  F011         	call	_write_external_eeprom
  4323   002262                     
  4324                           ;main_.c: 29:     write_external_eeprom(0x02, '1');
  4325   002262  0E31               	movlw	49
  4326   002264  6E02               	movwf	write_external_eeprom@data^0,c
  4327   002266  0E02               	movlw	2
  4328   002268  ECAB  F011         	call	_write_external_eeprom
  4329   00226C                     
  4330                           ;main_.c: 30:     write_external_eeprom(0x03, '1');
  4331   00226C  0E31               	movlw	49
  4332   00226E  6E02               	movwf	write_external_eeprom@data^0,c
  4333   002270  0E03               	movlw	3
  4334   002272  ECAB  F011         	call	_write_external_eeprom
  4335   002276                     
  4336                           ;main_.c: 31:     write_external_eeprom(0x04, '\0');
  4337   002276  0E00               	movlw	0
  4338   002278  6E02               	movwf	write_external_eeprom@data^0,c
  4339   00227A  0E04               	movlw	4
  4340   00227C  ECAB  F011         	call	_write_external_eeprom
  4341   002280  0012               	return		;funcret
  4342   002282                     __end_of_init_config:
  4343                           	callstack 0
  4344                           
  4345 ;; *************** function _init_timer0 *****************
  4346 ;; Defined at:
  4347 ;;		line 4 in file "timer0.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;		None
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4361 ;;      Params:         0       0       0       0       0       0       0
  4362 ;;      Locals:         0       0       0       0       0       0       0
  4363 ;;      Temps:          0       0       0       0       0       0       0
  4364 ;;      Totals:         0       0       0       0       0       0       0
  4365 ;;Total ram usage:        0 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; Hardware stack levels required when called: 1
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_init_config
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text11
  4376   002590                     __ptext11:
  4377                           	callstack 0
  4378   002590                     _init_timer0:
  4379                           	callstack 28
  4380   002590                     
  4381                           ;timer0.c: 12:  T08BIT = 1;
  4382   002590  8CD5               	bsf	4053,6,c	;volatile
  4383                           
  4384                           ;timer0.c: 15:  T0CS = 0;
  4385   002592  9AD5               	bcf	4053,5,c	;volatile
  4386                           
  4387                           ;timer0.c: 18:  TMR0ON = 1;
  4388   002594  8ED5               	bsf	4053,7,c	;volatile
  4389                           
  4390                           ;timer0.c: 21:  PSA = 1;
  4391   002596  86D5               	bsf	4053,3,c	;volatile
  4392   002598                     
  4393                           ;timer0.c: 23:  TMR0 = 6;
  4394   002598  0E00               	movlw	0
  4395   00259A  6ED7               	movwf	215,c	;volatile
  4396   00259C  0E06               	movlw	6
  4397   00259E  6ED6               	movwf	214,c	;volatile
  4398   0025A0                     
  4399                           ;timer0.c: 26:  TMR0IF = 0;
  4400   0025A0  94F2               	bcf	4082,2,c	;volatile
  4401   0025A2  0012               	return		;funcret
  4402   0025A4                     __end_of_init_timer0:
  4403                           	callstack 0
  4404                           
  4405 ;; *************** function _init_matrix_keypad *****************
  4406 ;; Defined at:
  4407 ;;		line 4 in file "matrix_keypad.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4421 ;;      Params:         0       0       0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0
  4424 ;;      Totals:         0       0       0       0       0       0       0
  4425 ;;Total ram usage:        0 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_init_config
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text12
  4436   0025A4                     __ptext12:
  4437                           	callstack 0
  4438   0025A4                     _init_matrix_keypad:
  4439                           	callstack 28
  4440   0025A4                     
  4441                           ;matrix_keypad.c: 7:  ADCON1 = 0x0F;
  4442   0025A4  0E0F               	movlw	15
  4443   0025A6  6EC1               	movwf	193,c	;volatile
  4444                           
  4445                           ;matrix_keypad.c: 10:  TRISB = 0x1E;
  4446   0025A8  0E1E               	movlw	30
  4447   0025AA  6E93               	movwf	147,c	;volatile
  4448   0025AC                     
  4449                           ;matrix_keypad.c: 13:  RBPU = 0;
  4450   0025AC  9EF1               	bcf	4081,7,c	;volatile
  4451   0025AE                     
  4452                           ;matrix_keypad.c: 15:  PORTB = PORTB | 0xE0;
  4453   0025AE  5081               	movf	129,w,c	;volatile
  4454   0025B0  09E0               	iorlw	224
  4455   0025B2  6E81               	movwf	129,c	;volatile
  4456   0025B4  0012               	return		;funcret
  4457   0025B6                     __end_of_init_matrix_keypad:
  4458                           	callstack 0
  4459                           
  4460 ;; *************** function _init_i2c *****************
  4461 ;; Defined at:
  4462 ;;		line 3 in file "i2c.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4476 ;;      Params:         0       0       0       0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0
  4479 ;;      Totals:         0       0       0       0       0       0       0
  4480 ;;Total ram usage:        0 bytes
  4481 ;; Hardware stack levels used: 1
  4482 ;; Hardware stack levels required when called: 1
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_init_config
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text13
  4491   002550                     __ptext13:
  4492                           	callstack 0
  4493   002550                     _init_i2c:
  4494                           	callstack 28
  4495   002550                     
  4496                           ;i2c.c: 6:  TRISC3 = 1;
  4497   002550  8694               	bsf	3988,3,c	;volatile
  4498                           
  4499                           ;i2c.c: 7:  TRISC4 = 1;
  4500   002552  8894               	bsf	3988,4,c	;volatile
  4501   002554                     
  4502                           ;i2c.c: 9:  SSPCON1 = 0x28;
  4503   002554  0E28               	movlw	40
  4504   002556  6EC6               	movwf	198,c	;volatile
  4505                           
  4506                           ;i2c.c: 11:  SSPADD = 0x30;
  4507   002558  0E30               	movlw	48
  4508   00255A  6EC8               	movwf	200,c	;volatile
  4509   00255C                     
  4510                           ;i2c.c: 13:  CKE = 0;
  4511   00255C  9CC7               	bcf	4039,6,c	;volatile
  4512   00255E                     
  4513                           ;i2c.c: 15:  SMP = 1;
  4514   00255E  8EC7               	bsf	4039,7,c	;volatile
  4515   002560                     
  4516                           ;i2c.c: 17:  SSPIF = 0;
  4517   002560  969E               	bcf	3998,3,c	;volatile
  4518   002562                     
  4519                           ;i2c.c: 19:  BCLIF = 0;
  4520   002562  96A1               	bcf	4001,3,c	;volatile
  4521   002564  0012               	return		;funcret
  4522   002566                     __end_of_init_i2c:
  4523                           	callstack 0
  4524                           
  4525 ;; *************** function _init_ds1307 *****************
  4526 ;; Defined at:
  4527 ;;		line 11 in file "ds1307.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  dummy           1    3[COMRAM] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4541 ;;      Params:         0       0       0       0       0       0       0
  4542 ;;      Locals:         1       0       0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0
  4544 ;;      Totals:         1       0       0       0       0       0       0
  4545 ;;Total ram usage:        1 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 5
  4548 ;; This function calls:
  4549 ;;		_read_ds1307
  4550 ;;		_write_ds1307
  4551 ;; This function is called by:
  4552 ;;		_init_config
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text14
  4557   002312                     __ptext14:
  4558                           	callstack 0
  4559   002312                     _init_ds1307:
  4560                           	callstack 24
  4561   002312                     
  4562                           ;ds1307.c: 13:  unsigned char dummy;;ds1307.c: 16:  dummy = read_ds1307(0x00);
  4563   002312  0E00               	movlw	0
  4564   002314  EC53  F012         	call	_read_ds1307
  4565   002318  6E04               	movwf	init_ds1307@dummy^0,c
  4566   00231A                     
  4567                           ;ds1307.c: 17:  write_ds1307(0x00, dummy | 0x80);
  4568   00231A  5004               	movf	init_ds1307@dummy^0,w,c
  4569   00231C  0980               	iorlw	128
  4570   00231E  6E02               	movwf	write_ds1307@data^0,c
  4571   002320  0E00               	movlw	0
  4572   002322  EC8D  F012         	call	_write_ds1307
  4573   002326  0E02               	movlw	2
  4574   002328  EC53  F012         	call	_read_ds1307
  4575   00232C                     
  4576                           ;ds1307.c: 21:  write_ds1307(0x02, dummy & 0x00);
  4577   00232C  0E00               	movlw	0
  4578   00232E  6E02               	movwf	write_ds1307@data^0,c
  4579   002330  0E02               	movlw	2
  4580   002332  EC8D  F012         	call	_write_ds1307
  4581   002336                     
  4582                           ;ds1307.c: 36:  write_ds1307(0x07, 0x93);
  4583   002336  0E93               	movlw	147
  4584   002338  6E02               	movwf	write_ds1307@data^0,c
  4585   00233A  0E07               	movlw	7
  4586   00233C  EC8D  F012         	call	_write_ds1307
  4587   002340                     
  4588                           ;ds1307.c: 39:  dummy = read_ds1307(0x00);
  4589   002340  0E00               	movlw	0
  4590   002342  EC53  F012         	call	_read_ds1307
  4591   002346  6E04               	movwf	init_ds1307@dummy^0,c
  4592   002348                     
  4593                           ;ds1307.c: 40:  write_ds1307(0x00, dummy & 0x7F);
  4594   002348  5004               	movf	init_ds1307@dummy^0,w,c
  4595   00234A  0B7F               	andlw	127
  4596   00234C  6E02               	movwf	write_ds1307@data^0,c
  4597   00234E  0E00               	movlw	0
  4598   002350  EC8D  F012         	call	_write_ds1307
  4599   002354  0012               	return		;funcret
  4600   002356                     __end_of_init_ds1307:
  4601                           	callstack 0
  4602                           
  4603 ;; *************** function _write_ds1307 *****************
  4604 ;; Defined at:
  4605 ;;		line 44 in file "ds1307.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;  address         1    wreg     unsigned char 
  4608 ;;  data            1    1[COMRAM] unsigned char 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  address         1    2[COMRAM] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4620 ;;      Params:         1       0       0       0       0       0       0
  4621 ;;      Locals:         1       0       0       0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0
  4623 ;;      Totals:         2       0       0       0       0       0       0
  4624 ;;Total ram usage:        2 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; Hardware stack levels required when called: 3
  4627 ;; This function calls:
  4628 ;;		_i2c_start
  4629 ;;		_i2c_stop
  4630 ;;		_i2c_write
  4631 ;; This function is called by:
  4632 ;;		_init_ds1307
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text15
  4637   00251A                     __ptext15:
  4638                           	callstack 0
  4639   00251A                     _write_ds1307:
  4640                           	callstack 25
  4641                           
  4642                           ;incstack = 0
  4643                           ;write_ds1307@address stored from wreg
  4644   00251A  6E03               	movwf	write_ds1307@address^0,c
  4645   00251C                     
  4646                           ;ds1307.c: 44: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 45
      +                          : {;ds1307.c: 46:  i2c_start();
  4647   00251C  ECFA  F012         	call	_i2c_start	;wreg free
  4648   002520                     
  4649                           ;ds1307.c: 47:  i2c_write(0xD0);
  4650   002520  0ED0               	movlw	208
  4651   002522  ECE4  F012         	call	_i2c_write
  4652   002526                     
  4653                           ;ds1307.c: 48:  i2c_write(address);
  4654   002526  5003               	movf	write_ds1307@address^0,w,c
  4655   002528  ECE4  F012         	call	_i2c_write
  4656   00252C                     
  4657                           ;ds1307.c: 49:  i2c_write(data);
  4658   00252C  5002               	movf	write_ds1307@data^0,w,c
  4659   00252E  ECE4  F012         	call	_i2c_write
  4660   002532                     
  4661                           ;ds1307.c: 50:  i2c_stop();
  4662   002532  ECF6  F012         	call	_i2c_stop	;wreg free
  4663   002536  0012               	return		;funcret
  4664   002538                     __end_of_write_ds1307:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function _init_clcd *****************
  4668 ;; Defined at:
  4669 ;;		line 27 in file "clcd.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4683 ;;      Params:         0       0       0       0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0
  4685 ;;      Temps:          1       0       0       0       0       0       0
  4686 ;;      Totals:         1       0       0       0       0       0       0
  4687 ;;Total ram usage:        1 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 2
  4690 ;; This function calls:
  4691 ;;		_clcd_write
  4692 ;; This function is called by:
  4693 ;;		_init_config
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text16
  4698   001D2C                     __ptext16:
  4699                           	callstack 0
  4700   001D2C                     _init_clcd:
  4701                           	callstack 27
  4702   001D2C                     
  4703                           ;clcd.c: 30:  TRISD = 0x00;
  4704   001D2C  0E00               	movlw	0
  4705   001D2E  6E95               	movwf	149,c	;volatile
  4706   001D30                     
  4707                           ;clcd.c: 32:  TRISC = TRISC & 0xF8;
  4708   001D30  5094               	movf	148,w,c	;volatile
  4709   001D32  0BF8               	andlw	248
  4710   001D34  6E94               	movwf	148,c	;volatile
  4711   001D36                     
  4712                           ;clcd.c: 34:  RC0 = 0;
  4713   001D36  9082               	bcf	3970,0,c	;volatile
  4714   001D38                     
  4715                           ;clcd.c: 38:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4716   001D38  0EC3               	movlw	195
  4717   001D3A  6E03               	movwf	??_init_clcd^0,c
  4718   001D3C  0ECD               	movlw	205
  4719   001D3E                     u3797:
  4720   001D3E  2EE8               	decfsz	wreg,f,c
  4721   001D40  D7FE               	bra	u3797
  4722   001D42  2E03               	decfsz	??_init_clcd^0,f,c
  4723   001D44  D7FC               	bra	u3797
  4724   001D46  F000               	nop	
  4725   001D48                     
  4726                           ;clcd.c: 41:     clcd_write(0x33, 0 );
  4727   001D48  0E00               	movlw	0
  4728   001D4A  6E01               	movwf	clcd_write@control_bit^0,c
  4729   001D4C  0E33               	movlw	51
  4730   001D4E  ECEA  F011         	call	_clcd_write
  4731   001D52                     
  4732                           ;clcd.c: 42:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4733   001D52  0E1B               	movlw	27
  4734   001D54  6E03               	movwf	??_init_clcd^0,c
  4735   001D56  0E9E               	movlw	158
  4736   001D58                     u3807:
  4737   001D58  2EE8               	decfsz	wreg,f,c
  4738   001D5A  D7FE               	bra	u3807
  4739   001D5C  2E03               	decfsz	??_init_clcd^0,f,c
  4740   001D5E  D7FC               	bra	u3807
  4741   001D60  D000               	nop2	
  4742   001D62                     
  4743                           ;clcd.c: 43:     clcd_write(0x33, 0 );
  4744   001D62  0E00               	movlw	0
  4745   001D64  6E01               	movwf	clcd_write@control_bit^0,c
  4746   001D66  0E33               	movlw	51
  4747   001D68  ECEA  F011         	call	_clcd_write
  4748   001D6C                     
  4749                           ;clcd.c: 44:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4750   001D6C  0EA6               	movlw	166
  4751   001D6E                     u3817:
  4752   001D6E  2EE8               	decfsz	wreg,f,c
  4753   001D70  D7FE               	bra	u3817
  4754   001D72  D000               	nop2	
  4755   001D74                     
  4756                           ;clcd.c: 45:     clcd_write(0x33, 0 );
  4757   001D74  0E00               	movlw	0
  4758   001D76  6E01               	movwf	clcd_write@control_bit^0,c
  4759   001D78  0E33               	movlw	51
  4760   001D7A  ECEA  F011         	call	_clcd_write
  4761   001D7E                     
  4762                           ;clcd.c: 46:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4763   001D7E  D000               	nop2		;2 cycle nop
  4764   001D80  D000               	nop2		;2 cycle nop
  4765   001D82  F000               	nop	
  4766   001D84                     
  4767                           ;clcd.c: 48:     clcd_write(0x02, 0);
  4768   001D84  0E00               	movlw	0
  4769   001D86  6E01               	movwf	clcd_write@control_bit^0,c
  4770   001D88  0E02               	movlw	2
  4771   001D8A  ECEA  F011         	call	_clcd_write
  4772   001D8E                     
  4773                           ;clcd.c: 49:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4774   001D8E  0EA6               	movlw	166
  4775   001D90                     u3827:
  4776   001D90  2EE8               	decfsz	wreg,f,c
  4777   001D92  D7FE               	bra	u3827
  4778   001D94  D000               	nop2	
  4779   001D96                     
  4780                           ;clcd.c: 50:     clcd_write(0x38, 0);
  4781   001D96  0E00               	movlw	0
  4782   001D98  6E01               	movwf	clcd_write@control_bit^0,c
  4783   001D9A  0E38               	movlw	56
  4784   001D9C  ECEA  F011         	call	_clcd_write
  4785   001DA0                     
  4786                           ;clcd.c: 51:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4787   001DA0  0EA6               	movlw	166
  4788   001DA2                     u3837:
  4789   001DA2  2EE8               	decfsz	wreg,f,c
  4790   001DA4  D7FE               	bra	u3837
  4791   001DA6  D000               	nop2	
  4792   001DA8                     
  4793                           ;clcd.c: 52:     clcd_write(0x01, 0);
  4794   001DA8  0E00               	movlw	0
  4795   001DAA  6E01               	movwf	clcd_write@control_bit^0,c
  4796   001DAC  0E01               	movlw	1
  4797   001DAE  ECEA  F011         	call	_clcd_write
  4798   001DB2                     
  4799                           ;clcd.c: 53:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4800   001DB2  0E04               	movlw	4
  4801   001DB4  6E03               	movwf	??_init_clcd^0,c
  4802   001DB6  0E3E               	movlw	62
  4803   001DB8                     u3847:
  4804   001DB8  2EE8               	decfsz	wreg,f,c
  4805   001DBA  D7FE               	bra	u3847
  4806   001DBC  2E03               	decfsz	??_init_clcd^0,f,c
  4807   001DBE  D7FC               	bra	u3847
  4808   001DC0                     
  4809                           ;clcd.c: 54:     clcd_write(0x0C, 0);
  4810   001DC0  0E00               	movlw	0
  4811   001DC2  6E01               	movwf	clcd_write@control_bit^0,c
  4812   001DC4  0E0C               	movlw	12
  4813   001DC6  ECEA  F011         	call	_clcd_write
  4814   001DCA                     
  4815                           ;clcd.c: 55:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4816   001DCA  0EA6               	movlw	166
  4817   001DCC                     u3857:
  4818   001DCC  2EE8               	decfsz	wreg,f,c
  4819   001DCE  D7FE               	bra	u3857
  4820   001DD0  D000               	nop2	
  4821   001DD2  0012               	return		;funcret
  4822   001DD4                     __end_of_init_clcd:
  4823                           	callstack 0
  4824                           
  4825 ;; *************** function _init_adc *****************
  4826 ;; Defined at:
  4827 ;;		line 4 in file "adc.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4841 ;;      Params:         0       0       0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0
  4844 ;;      Totals:         0       0       0       0       0       0       0
  4845 ;;Total ram usage:        0 bytes
  4846 ;; Hardware stack levels used: 1
  4847 ;; Hardware stack levels required when called: 1
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_init_config
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text17
  4856   0024FA                     __ptext17:
  4857                           	callstack 0
  4858   0024FA                     _init_adc:
  4859                           	callstack 28
  4860   0024FA                     
  4861                           ;adc.c: 7:  ADFM = 1;
  4862   0024FA  8EC0               	bsf	4032,7,c	;volatile
  4863                           
  4864                           ;adc.c: 13:  ACQT2 = 0;
  4865   0024FC  9AC0               	bcf	4032,5,c	;volatile
  4866                           
  4867                           ;adc.c: 14:  ACQT1 = 1;
  4868   0024FE  88C0               	bsf	4032,4,c	;volatile
  4869                           
  4870                           ;adc.c: 15:  ACQT0 = 0;
  4871   002500  96C0               	bcf	4032,3,c	;volatile
  4872                           
  4873                           ;adc.c: 21:  ADCS0 = 0;
  4874   002502  90C0               	bcf	4032,0,c	;volatile
  4875                           
  4876                           ;adc.c: 22:  ADCS1 = 1;
  4877   002504  82C0               	bsf	4032,1,c	;volatile
  4878                           
  4879                           ;adc.c: 23:  ADCS2 = 0;
  4880   002506  94C0               	bcf	4032,2,c	;volatile
  4881                           
  4882                           ;adc.c: 26:  GODONE = 0;
  4883   002508  92C2               	bcf	4034,1,c	;volatile
  4884                           
  4885                           ;adc.c: 31:  VCFG1 = 0;
  4886   00250A  9AC1               	bcf	4033,5,c	;volatile
  4887                           
  4888                           ;adc.c: 33:  VCFG0 = 0;
  4889   00250C  98C1               	bcf	4033,4,c	;volatile
  4890   00250E                     
  4891                           ;adc.c: 36:  ADRESH = 0;
  4892   00250E  0E00               	movlw	0
  4893   002510  6EC4               	movwf	196,c	;volatile
  4894                           
  4895                           ;adc.c: 37:  ADRESL = 0;
  4896   002512  0E00               	movlw	0
  4897   002514  6EC3               	movwf	195,c	;volatile
  4898   002516                     
  4899                           ;adc.c: 40:  ADON = 1;
  4900   002516  80C2               	bsf	4034,0,c	;volatile
  4901   002518  0012               	return		;funcret
  4902   00251A                     __end_of_init_adc:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function _download_log *****************
  4906 ;; Defined at:
  4907 ;;		line 466 in file "blackbox.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  i               2   34[COMRAM] int 
  4912 ;;  vlog           17   12[COMRAM] unsigned char [17]
  4913 ;;  next            2   32[COMRAM] int 
  4914 ;;  vlog_pos        2   30[COMRAM] int 
  4915 ;;  address         1   29[COMRAM] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4925 ;;      Params:         0       0       0       0       0       0       0
  4926 ;;      Locals:        24       0       0       0       0       0       0
  4927 ;;      Temps:          1       0       0       0       0       0       0
  4928 ;;      Totals:        25       0       0       0       0       0       0
  4929 ;;Total ram usage:       25 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 6
  4932 ;; This function calls:
  4933 ;;		___awmod
  4934 ;;		_car_log
  4935 ;;		_clcd_print
  4936 ;;		_clcd_putch
  4937 ;;		_clcd_write
  4938 ;;		_init_uart
  4939 ;;		_putch
  4940 ;;		_puts
  4941 ;;		_read_external_eeprom
  4942 ;; This function is called by:
  4943 ;;		_main
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           	psect	text18
  4948   000EB2                     __ptext18:
  4949                           	callstack 0
  4950   000EB2                     _download_log:
  4951                           	callstack 24
  4952   000EB2                     
  4953                           ;blackbox.c: 467:     init_uart();
  4954   000EB2  EC3E  F012         	call	_init_uart	;wreg free
  4955   000EB6                     
  4956                           ;blackbox.c: 469:     clcd_print("  Downloaded  ", (0x80 + (0)));
  4957   000EB6  0E05               	movlw	low STR_34
  4958   000EB8  6E03               	movwf	clcd_print@data^0,c
  4959   000EBA  0E2F               	movlw	high STR_34
  4960   000EBC  6E04               	movwf	(clcd_print@data+1)^0,c
  4961   000EBE  0E80               	movlw	128
  4962   000EC0  6E05               	movwf	clcd_print@addr^0,c
  4963   000EC2  EC8C  F010         	call	_clcd_print	;wreg free
  4964   000EC6                     
  4965                           ;blackbox.c: 470:     clcd_print(" Successfully...", (0xC0 + (0)));
  4966   000EC6  0EB1               	movlw	low STR_35
  4967   000EC8  6E03               	movwf	clcd_print@data^0,c
  4968   000ECA  0E2E               	movlw	high STR_35
  4969   000ECC  6E04               	movwf	(clcd_print@data+1)^0,c
  4970   000ECE  0EC0               	movlw	192
  4971   000ED0  6E05               	movwf	clcd_print@addr^0,c
  4972   000ED2  EC8C  F010         	call	_clcd_print	;wreg free
  4973   000ED6                     
  4974                           ;blackbox.c: 471:     GIE = PEIE = TMR2IE = 0;
  4975   000ED6  929D               	bcf	3997,1,c	;volatile
  4976   000ED8  9CF2               	bcf	4082,6,c	;volatile
  4977   000EDA  9EF2               	bcf	4082,7,c	;volatile
  4978   000EDC                     
  4979                           ;blackbox.c: 473:     car_log();
  4980   000EDC  EC89  F00D         	call	_car_log	;wreg free
  4981   000EE0                     
  4982                           ;blackbox.c: 474:     unsigned char address;;blackbox.c: 475:     char vlog[17];;blackbo
      +                          x.c: 476:     int vlog_pos;;blackbox.c: 477:     int next = -1;
  4983   000EE0  6821               	setf	download_log@next^0,c
  4984   000EE2  6822               	setf	(download_log@next+1)^0,c
  4985   000EE4                     
  4986                           ;blackbox.c: 478:     clcd_putch(once + '0', (0xC0 + (0)));
  4987   000EE4  0EC0               	movlw	192
  4988   000EE6  6E09               	movwf	clcd_putch@addr^0,c
  4989   000EE8  0100               	movlb	0	; () banked
  4990   000EEA  5183               	movf	_once& (0+255),w,b
  4991   000EEC  0F30               	addlw	48
  4992   000EEE  EC9C  F012         	call	_clcd_putch
  4993   000EF2                     
  4994                           ;blackbox.c: 479:     if (once == 0) {
  4995   000EF2  0100               	movlb	0	; () banked
  4996   000EF4  5183               	movf	_once& (0+255),w,b
  4997   000EF6  1184               	iorwf	(_once+1)& (0+255),w,b
  4998   000EF8  A4D8               	btfss	status,2,c
  4999   000EFA  EF81  F007         	goto	u3581
  5000   000EFE  EF83  F007         	goto	u3580
  5001   000F02                     u3581:
  5002   000F02  EF3B  F008         	goto	l4338
  5003   000F06                     u3580:
  5004   000F06                     
  5005                           ; BSR set to: 0
  5006                           ;blackbox.c: 480:         puts("*----------Downloading --------*\n\r");
  5007   000F06  0EE3               	movlw	low STR_36
  5008   000F08  6E02               	movwf	puts@s^0,c
  5009   000F0A  0E2D               	movlw	high STR_36
  5010   000F0C  6E03               	movwf	(puts@s+1)^0,c
  5011   000F0E  EC23  F012         	call	_puts	;wreg free
  5012                           
  5013                           ;blackbox.c: 481:         puts("# TIME     EVENT SPEED\n\r");
  5014   000F12  0E06               	movlw	low STR_37
  5015   000F14  6E02               	movwf	puts@s^0,c
  5016   000F16  0E2E               	movlw	high STR_37
  5017   000F18  6E03               	movwf	(puts@s+1)^0,c
  5018   000F1A  EC23  F012         	call	_puts	;wreg free
  5019                           
  5020                           ;blackbox.c: 482:         while (next < index) {
  5021   000F1E  EF27  F008         	goto	l4334
  5022   000F22                     l4272:
  5023                           
  5024                           ;blackbox.c: 483:             next++;
  5025   000F22  4A21               	infsnz	download_log@next^0,f,c
  5026   000F24  2A22               	incf	(download_log@next+1)^0,f,c
  5027   000F26                     
  5028                           ;blackbox.c: 484:             vlog_pos = (overflow) ? ((pos + 1) % 10) : 0;
  5029   000F26  0100               	movlb	0	; () banked
  5030   000F28  5187               	movf	_overflow& (0+255),w,b
  5031   000F2A  1188               	iorwf	(_overflow+1)& (0+255),w,b
  5032   000F2C  A4D8               	btfss	status,2,c
  5033   000F2E  EF9B  F007         	goto	u3591
  5034   000F32  EF9D  F007         	goto	u3590
  5035   000F36                     u3591:
  5036   000F36  EFA3  F007         	goto	l4278
  5037   000F3A                     u3590:
  5038   000F3A                     
  5039                           ; BSR set to: 0
  5040   000F3A  0E00               	movlw	0
  5041   000F3C  6E20               	movwf	(download_log@vlog_pos+1)^0,c
  5042   000F3E  0E00               	movlw	0
  5043   000F40  6E1F               	movwf	download_log@vlog_pos^0,c
  5044   000F42  EFB3  F007         	goto	l406
  5045   000F46                     l4278:
  5046                           
  5047                           ; BSR set to: 0
  5048   000F46  0E01               	movlw	1
  5049   000F48  2458               	addwf	_pos^0,w,c
  5050   000F4A  6E01               	movwf	___awmod@dividend^0,c
  5051   000F4C  0E00               	movlw	0
  5052   000F4E  2059               	addwfc	(_pos+1)^0,w,c
  5053   000F50  6E02               	movwf	(___awmod@dividend+1)^0,c
  5054   000F52  0E00               	movlw	0
  5055   000F54  6E04               	movwf	(___awmod@divisor+1)^0,c
  5056   000F56  0E0A               	movlw	10
  5057   000F58  6E03               	movwf	___awmod@divisor^0,c
  5058   000F5A  EC3E  F00E         	call	___awmod	;wreg free
  5059   000F5E  C001  F01F         	movff	?___awmod,download_log@vlog_pos
  5060   000F62  C002  F020         	movff	?___awmod+1,download_log@vlog_pos+1
  5061   000F66                     l406:
  5062                           
  5063                           ;blackbox.c: 485:             vlog_pos = (vlog_pos + next) % 10;
  5064   000F66  5021               	movf	download_log@next^0,w,c
  5065   000F68  241F               	addwf	download_log@vlog_pos^0,w,c
  5066   000F6A  6E01               	movwf	___awmod@dividend^0,c
  5067   000F6C  5022               	movf	(download_log@next+1)^0,w,c
  5068   000F6E  2020               	addwfc	(download_log@vlog_pos+1)^0,w,c
  5069   000F70  6E02               	movwf	(___awmod@dividend+1)^0,c
  5070   000F72  0E00               	movlw	0
  5071   000F74  6E04               	movwf	(___awmod@divisor+1)^0,c
  5072   000F76  0E0A               	movlw	10
  5073   000F78  6E03               	movwf	___awmod@divisor^0,c
  5074   000F7A  EC3E  F00E         	call	___awmod	;wreg free
  5075   000F7E  C001  F01F         	movff	?___awmod,download_log@vlog_pos
  5076   000F82  C002  F020         	movff	?___awmod+1,download_log@vlog_pos+1
  5077   000F86                     
  5078                           ;blackbox.c: 486:             for (int i = 0; i < 16; i++) {
  5079   000F86  0E00               	movlw	0
  5080   000F88  6E24               	movwf	(download_log@i+1)^0,c
  5081   000F8A  0E00               	movlw	0
  5082   000F8C  6E23               	movwf	download_log@i^0,c
  5083   000F8E                     l4286:
  5084                           
  5085                           ;blackbox.c: 487:                 address = vlog_pos * 16 + 5 + i;
  5086   000F8E  501F               	movf	download_log@vlog_pos^0,w,c
  5087   000F90  0D10               	mullw	16
  5088   000F92  50F3               	movf	243,w,c
  5089   000F94  2423               	addwf	download_log@i^0,w,c
  5090   000F96  0F05               	addlw	5
  5091   000F98  6E1E               	movwf	download_log@address^0,c
  5092   000F9A                     
  5093                           ;blackbox.c: 488:                 vlog[i] = read_external_eeprom(address);
  5094   000F9A  0E0D               	movlw	low download_log@vlog
  5095   000F9C  2423               	addwf	download_log@i^0,w,c
  5096   000F9E  6ED9               	movwf	fsr2l,c
  5097   000FA0  0E00               	movlw	high download_log@vlog
  5098   000FA2  2024               	addwfc	(download_log@i+1)^0,w,c
  5099   000FA4  6EDA               	movwf	fsr2h,c
  5100   000FA6  501E               	movf	download_log@address^0,w,c
  5101   000FA8  EC68  F012         	call	_read_external_eeprom
  5102   000FAC  6EDF               	movwf	indf2,c
  5103   000FAE                     
  5104                           ;blackbox.c: 489:             }
  5105   000FAE  4A23               	infsnz	download_log@i^0,f,c
  5106   000FB0  2A24               	incf	(download_log@i+1)^0,f,c
  5107   000FB2  BE24               	btfsc	(download_log@i+1)^0,7,c
  5108   000FB4  EFE5  F007         	goto	u3601
  5109   000FB8  5024               	movf	(download_log@i+1)^0,w,c
  5110   000FBA  E109               	bnz	u3600
  5111   000FBC  0E10               	movlw	16
  5112   000FBE  5C23               	subwf	download_log@i^0,w,c
  5113   000FC0  A0D8               	btfss	status,0,c
  5114   000FC2  EFE5  F007         	goto	u3601
  5115   000FC6  EFE7  F007         	goto	u3600
  5116   000FCA                     u3601:
  5117   000FCA  EFC7  F007         	goto	l4286
  5118   000FCE                     u3600:
  5119   000FCE                     
  5120                           ;blackbox.c: 490:             putch(next + '0');
  5121   000FCE  5021               	movf	download_log@next^0,w,c
  5122   000FD0  0F30               	addlw	48
  5123   000FD2  ECB3  F012         	call	_putch
  5124   000FD6                     
  5125                           ;blackbox.c: 491:             puts(" ");
  5126   000FD6  0E6A               	movlw	low (STR_42+16)
  5127   000FD8  6E02               	movwf	puts@s^0,c
  5128   000FDA  0E2E               	movlw	high (STR_42+16)
  5129   000FDC  6E03               	movwf	(puts@s+1)^0,c
  5130   000FDE  EC23  F012         	call	_puts	;wreg free
  5131   000FE2                     
  5132                           ;blackbox.c: 492:             putch(vlog[0]);
  5133   000FE2  500D               	movf	download_log@vlog^0,w,c
  5134   000FE4  ECB3  F012         	call	_putch
  5135   000FE8                     
  5136                           ;blackbox.c: 493:             putch(vlog[1]);
  5137   000FE8  500E               	movf	(download_log@vlog+1)^0,w,c
  5138   000FEA  ECB3  F012         	call	_putch
  5139   000FEE                     
  5140                           ;blackbox.c: 494:             putch(vlog[2]);
  5141   000FEE  500F               	movf	(download_log@vlog+2)^0,w,c
  5142   000FF0  ECB3  F012         	call	_putch
  5143   000FF4                     
  5144                           ;blackbox.c: 495:             putch(vlog[3]);
  5145   000FF4  5010               	movf	(download_log@vlog+3)^0,w,c
  5146   000FF6  ECB3  F012         	call	_putch
  5147   000FFA                     
  5148                           ;blackbox.c: 496:             putch(vlog[4]);
  5149   000FFA  5011               	movf	(download_log@vlog+4)^0,w,c
  5150   000FFC  ECB3  F012         	call	_putch
  5151   001000                     
  5152                           ;blackbox.c: 497:             putch(vlog[5]);
  5153   001000  5012               	movf	(download_log@vlog+5)^0,w,c
  5154   001002  ECB3  F012         	call	_putch
  5155   001006                     
  5156                           ;blackbox.c: 498:             putch(vlog[6]);
  5157   001006  5013               	movf	(download_log@vlog+6)^0,w,c
  5158   001008  ECB3  F012         	call	_putch
  5159   00100C                     
  5160                           ;blackbox.c: 499:             putch(vlog[7]);
  5161   00100C  5014               	movf	(download_log@vlog+7)^0,w,c
  5162   00100E  ECB3  F012         	call	_putch
  5163   001012                     
  5164                           ;blackbox.c: 500:             putch(vlog[8]);
  5165   001012  5015               	movf	(download_log@vlog+8)^0,w,c
  5166   001014  ECB3  F012         	call	_putch
  5167   001018                     
  5168                           ;blackbox.c: 501:             putch(vlog[9]);
  5169   001018  5016               	movf	(download_log@vlog+9)^0,w,c
  5170   00101A  ECB3  F012         	call	_putch
  5171   00101E                     
  5172                           ;blackbox.c: 502:             putch(vlog[10]);
  5173   00101E  5017               	movf	(download_log@vlog+10)^0,w,c
  5174   001020  ECB3  F012         	call	_putch
  5175   001024                     
  5176                           ;blackbox.c: 503:             putch(vlog[11]);
  5177   001024  5018               	movf	(download_log@vlog+11)^0,w,c
  5178   001026  ECB3  F012         	call	_putch
  5179   00102A                     
  5180                           ;blackbox.c: 504:             putch(vlog[12]);
  5181   00102A  5019               	movf	(download_log@vlog+12)^0,w,c
  5182   00102C  ECB3  F012         	call	_putch
  5183   001030                     
  5184                           ;blackbox.c: 505:             putch(vlog[13]);
  5185   001030  501A               	movf	(download_log@vlog+13)^0,w,c
  5186   001032  ECB3  F012         	call	_putch
  5187   001036                     
  5188                           ;blackbox.c: 506:             putch(vlog[14]);
  5189   001036  501B               	movf	(download_log@vlog+14)^0,w,c
  5190   001038  ECB3  F012         	call	_putch
  5191   00103C                     
  5192                           ;blackbox.c: 507:             putch(vlog[15]);
  5193   00103C  501C               	movf	(download_log@vlog+15)^0,w,c
  5194   00103E  ECB3  F012         	call	_putch
  5195   001042                     
  5196                           ;blackbox.c: 508:             putch('\n');
  5197   001042  0E0A               	movlw	10
  5198   001044  ECB3  F012         	call	_putch
  5199   001048                     
  5200                           ;blackbox.c: 509:             putch('\r');
  5201   001048  0E0D               	movlw	13
  5202   00104A  ECB3  F012         	call	_putch
  5203   00104E                     l4334:
  5204                           
  5205                           ;blackbox.c: 482:         while (next < index) {
  5206   00104E  503B               	movf	_index^0,w,c
  5207   001050  5C21               	subwf	download_log@next^0,w,c
  5208   001052  5022               	movf	(download_log@next+1)^0,w,c
  5209   001054  0A80               	xorlw	128
  5210   001056  6E0C               	movwf	??_download_log^0,c
  5211   001058  503C               	movf	(_index+1)^0,w,c
  5212   00105A  0A80               	xorlw	128
  5213   00105C  580C               	subwfb	??_download_log^0,w,c
  5214   00105E  A0D8               	btfss	status,0,c
  5215   001060  EF34  F008         	goto	u3611
  5216   001064  EF36  F008         	goto	u3610
  5217   001068                     u3611:
  5218   001068  EF91  F007         	goto	l4272
  5219   00106C                     u3610:
  5220   00106C                     
  5221                           ;blackbox.c: 511:         once = 1;
  5222   00106C  0E00               	movlw	0
  5223   00106E  0100               	movlb	0	; () banked
  5224   001070  6F84               	movwf	(_once+1)& (0+255),b
  5225   001072  0E01               	movlw	1
  5226   001074  6F83               	movwf	_once& (0+255),b
  5227   001076                     l4338:
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;blackbox.c: 513:     if (wait++ == 1000) {
  5231   001076  4A47               	infsnz	_wait^0,f,c
  5232   001078  2A48               	incf	(_wait+1)^0,f,c
  5233   00107A  0EE9               	movlw	233
  5234   00107C  1847               	xorwf	_wait^0,w,c
  5235   00107E  E107               	bnz	u3621
  5236   001080  0E03               	movlw	3
  5237   001082  1848               	xorwf	(_wait+1)^0,w,c
  5238   001084  A4D8               	btfss	status,2,c
  5239   001086  EF47  F008         	goto	u3621
  5240   00108A  EF49  F008         	goto	u3620
  5241   00108E                     u3621:
  5242   00108E  EF5A  F008         	goto	l411
  5243   001092                     u3620:
  5244   001092                     
  5245                           ; BSR set to: 0
  5246                           ;blackbox.c: 514:         clcd_write(0x01, 0);
  5247   001092  0E00               	movlw	0
  5248   001094  6E01               	movwf	clcd_write@control_bit^0,c
  5249   001096  0E01               	movlw	1
  5250   001098  ECEA  F011         	call	_clcd_write
  5251   00109C                     
  5252                           ;blackbox.c: 515:         screen_flag = 0;
  5253   00109C  0E00               	movlw	0
  5254   00109E  6E52               	movwf	(_screen_flag+1)^0,c
  5255   0010A0  0E00               	movlw	0
  5256   0010A2  6E51               	movwf	_screen_flag^0,c
  5257   0010A4                     
  5258                           ;blackbox.c: 516:         pre_key = 0;
  5259   0010A4  0E00               	movlw	0
  5260   0010A6  6E50               	movwf	(_pre_key+1)^0,c
  5261   0010A8  0E00               	movlw	0
  5262   0010AA  6E4F               	movwf	_pre_key^0,c
  5263   0010AC                     
  5264                           ;blackbox.c: 517:         wait = 0;
  5265   0010AC  0E00               	movlw	0
  5266   0010AE  6E48               	movwf	(_wait+1)^0,c
  5267   0010B0  0E00               	movlw	0
  5268   0010B2  6E47               	movwf	_wait^0,c
  5269   0010B4                     l411:
  5270   0010B4  0012               	return		;funcret
  5271   0010B6                     __end_of_download_log:
  5272                           	callstack 0
  5273                           
  5274 ;; *************** function _puts *****************
  5275 ;; Defined at:
  5276 ;;		line 68 in file "uart.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  s               2    1[COMRAM] PTR const unsigned char 
  5279 ;;		 -> STR_38(2), STR_37(25), STR_36(35), 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  2    1[COMRAM] int 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5291 ;;      Params:         2       0       0       0       0       0       0
  5292 ;;      Locals:         0       0       0       0       0       0       0
  5293 ;;      Temps:          0       0       0       0       0       0       0
  5294 ;;      Totals:         2       0       0       0       0       0       0
  5295 ;;Total ram usage:        2 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; Hardware stack levels required when called: 2
  5298 ;; This function calls:
  5299 ;;		_putch
  5300 ;; This function is called by:
  5301 ;;		_download_log
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text19
  5306   002446                     __ptext19:
  5307                           	callstack 0
  5308   002446                     _puts:
  5309                           	callstack 27
  5310   002446                     
  5311                           ;uart.c: 68: int puts(const char *s);uart.c: 69: {;uart.c: 70:  while(*s)
  5312   002446  EF2F  F012         	goto	l3814
  5313   00244A                     l3810:
  5314                           
  5315                           ;uart.c: 71:  {;uart.c: 72:   putch(*s++);
  5316   00244A  C002  FFF6         	movff	puts@s,tblptrl
  5317   00244E  C003  FFF7         	movff	puts@s+1,tblptrh
  5318   002452                     	if	0	;tblptru may be non-zero
  5319   002452                     	endif
  5320   002452                     	if	0	;tblptru may be non-zero
  5321   002452                     	endif
  5322   002452  0008               	tblrd		*
  5323   002454  50F5               	movf	tablat,w,c
  5324   002456  ECB3  F012         	call	_putch
  5325   00245A  4A02               	infsnz	puts@s^0,f,c
  5326   00245C  2A03               	incf	(puts@s+1)^0,f,c
  5327   00245E                     l3814:
  5328                           
  5329                           ;uart.c: 70:  while(*s)
  5330   00245E  C002  FFF6         	movff	puts@s,tblptrl
  5331   002462  C003  FFF7         	movff	puts@s+1,tblptrh
  5332   002466                     	if	0	;tblptru may be non-zero
  5333   002466                     	endif
  5334   002466                     	if	0	;tblptru may be non-zero
  5335   002466                     	endif
  5336   002466  0008               	tblrd		*
  5337   002468  50F5               	movf	tablat,w,c
  5338   00246A  0900               	iorlw	0
  5339   00246C  A4D8               	btfss	status,2,c
  5340   00246E  EF3B  F012         	goto	u2931
  5341   002472  EF3D  F012         	goto	u2930
  5342   002476                     u2931:
  5343   002476  EF25  F012         	goto	l3810
  5344   00247A                     u2930:
  5345   00247A  0012               	return		;funcret
  5346   00247C                     __end_of_puts:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function _putch *****************
  5350 ;; Defined at:
  5351 ;;		line 57 in file "uart.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  byte            1    wreg     unsigned char 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  byte            1    0[COMRAM] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5365 ;;      Params:         0       0       0       0       0       0       0
  5366 ;;      Locals:         1       0       0       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0
  5368 ;;      Totals:         1       0       0       0       0       0       0
  5369 ;;Total ram usage:        1 bytes
  5370 ;; Hardware stack levels used: 1
  5371 ;; Hardware stack levels required when called: 1
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_download_log
  5376 ;;		_puts
  5377 ;;		_getche
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text20
  5382   002566                     __ptext20:
  5383                           	callstack 0
  5384   002566                     _putch:
  5385                           	callstack 27
  5386                           
  5387                           ;incstack = 0
  5388                           ;putch@byte stored from wreg
  5389   002566  6E01               	movwf	putch@byte^0,c
  5390   002568                     l685:
  5391                           
  5392                           ;uart.c: 61:  while(!TXIF)
  5393   002568  A89E               	btfss	3998,4,c	;volatile
  5394   00256A  EFB9  F012         	goto	u2121
  5395   00256E  EFBB  F012         	goto	u2120
  5396   002572                     u2121:
  5397   002572  EFB4  F012         	goto	l685
  5398   002576                     u2120:
  5399   002576                     
  5400                           ;uart.c: 65:  TXREG = byte;
  5401   002576  C001  FFAD         	movff	putch@byte,4013	;volatile
  5402   00257A  0012               	return		;funcret
  5403   00257C                     __end_of_putch:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function _init_uart *****************
  5407 ;; Defined at:
  5408 ;;		line 4 in file "uart.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, status,2
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5422 ;;      Params:         0       0       0       0       0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used: 1
  5428 ;; Hardware stack levels required when called: 1
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_download_log
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text21
  5437   00247C                     __ptext21:
  5438                           	callstack 0
  5439   00247C                     _init_uart:
  5440                           	callstack 28
  5441   00247C                     
  5442                           ;uart.c: 7:  TRISC7 = 1;
  5443   00247C  8E94               	bsf	3988,7,c	;volatile
  5444                           
  5445                           ;uart.c: 8:  TRISC6 = 0;
  5446   00247E  9C94               	bcf	3988,6,c	;volatile
  5447                           
  5448                           ;uart.c: 12:  TX9 = 0;
  5449   002480  9CAC               	bcf	4012,6,c	;volatile
  5450                           
  5451                           ;uart.c: 14:  TXEN = 1;
  5452   002482  8AAC               	bsf	4012,5,c	;volatile
  5453                           
  5454                           ;uart.c: 17:  SYNC = 0;
  5455   002484  98AC               	bcf	4012,4,c	;volatile
  5456                           
  5457                           ;uart.c: 19:  SENDB = 0;
  5458   002486  96AC               	bcf	4012,3,c	;volatile
  5459                           
  5460                           ;uart.c: 22:  BRGH = 1;
  5461   002488  84AC               	bsf	4012,2,c	;volatile
  5462                           
  5463                           ;uart.c: 26:  SPEN = 1;
  5464   00248A  8EAB               	bsf	4011,7,c	;volatile
  5465                           
  5466                           ;uart.c: 28:  RX9 = 0;
  5467   00248C  9CAB               	bcf	4011,6,c	;volatile
  5468                           
  5469                           ;uart.c: 30:  CREN = 1;
  5470   00248E  88AB               	bsf	4011,4,c	;volatile
  5471                           
  5472                           ;uart.c: 34:  ABDOVF = 0;
  5473   002490  9EB8               	bcf	4024,7,c	;volatile
  5474                           
  5475                           ;uart.c: 36:  BRG16 = 0;
  5476   002492  96B8               	bcf	4024,3,c	;volatile
  5477                           
  5478                           ;uart.c: 38:  WUE = 0;
  5479   002494  92B8               	bcf	4024,1,c	;volatile
  5480                           
  5481                           ;uart.c: 40:  ABDEN = 0;
  5482   002496  90B8               	bcf	4024,0,c	;volatile
  5483   002498                     
  5484                           ;uart.c: 44:  SPBRG = 129;
  5485   002498  0E81               	movlw	129
  5486   00249A  6EAF               	movwf	175,c	;volatile
  5487   00249C                     
  5488                           ;uart.c: 48:  TXIE = 1;
  5489   00249C  889D               	bsf	3997,4,c	;volatile
  5490   00249E                     
  5491                           ;uart.c: 50:  TXIF = 0;
  5492   00249E  989E               	bcf	3998,4,c	;volatile
  5493   0024A0                     
  5494                           ;uart.c: 52:  RCIE = 1;
  5495   0024A0  8A9D               	bsf	3997,5,c	;volatile
  5496   0024A2                     
  5497                           ;uart.c: 54:  RCIF = 0;
  5498   0024A2  9A9E               	bcf	3998,5,c	;volatile
  5499   0024A4  0012               	return		;funcret
  5500   0024A6                     __end_of_init_uart:
  5501                           	callstack 0
  5502                           
  5503 ;; *************** function ___awmod *****************
  5504 ;; Defined at:
  5505 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  dividend        2    0[COMRAM] int 
  5508 ;;  divisor         2    2[COMRAM] int 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  sign            1    5[COMRAM] unsigned char 
  5511 ;;  counter         1    4[COMRAM] unsigned char 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  2    0[COMRAM] int 
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5521 ;;      Params:         4       0       0       0       0       0       0
  5522 ;;      Locals:         2       0       0       0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0
  5524 ;;      Totals:         6       0       0       0       0       0       0
  5525 ;;Total ram usage:        6 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; Hardware stack levels required when called: 1
  5528 ;; This function calls:
  5529 ;;		Nothing
  5530 ;; This function is called by:
  5531 ;;		_timeout
  5532 ;;		_view_log
  5533 ;;		_menu
  5534 ;;		_download_log
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text22
  5539   001C7C                     __ptext22:
  5540                           	callstack 0
  5541   001C7C                     ___awmod:
  5542                           	callstack 28
  5543   001C7C  0E00               	movlw	0
  5544   001C7E  6E06               	movwf	___awmod@sign^0,c
  5545   001C80  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5546   001C82  EF47  F00E         	goto	u2420
  5547   001C86  EF45  F00E         	goto	u2421
  5548   001C8A                     u2421:
  5549   001C8A  EF4D  F00E         	goto	l3444
  5550   001C8E                     u2420:
  5551   001C8E  6C01               	negf	___awmod@dividend^0,c
  5552   001C90  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5553   001C92  B0D8               	btfsc	status,0,c
  5554   001C94  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5555   001C96  0E01               	movlw	1
  5556   001C98  6E06               	movwf	___awmod@sign^0,c
  5557   001C9A                     l3444:
  5558   001C9A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5559   001C9C  EF54  F00E         	goto	u2430
  5560   001CA0  EF52  F00E         	goto	u2431
  5561   001CA4                     u2431:
  5562   001CA4  EF58  F00E         	goto	l3448
  5563   001CA8                     u2430:
  5564   001CA8  6C03               	negf	___awmod@divisor^0,c
  5565   001CAA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5566   001CAC  B0D8               	btfsc	status,0,c
  5567   001CAE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5568   001CB0                     l3448:
  5569   001CB0  5003               	movf	___awmod@divisor^0,w,c
  5570   001CB2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5571   001CB4  B4D8               	btfsc	status,2,c
  5572   001CB6  EF5F  F00E         	goto	u2441
  5573   001CBA  EF61  F00E         	goto	u2440
  5574   001CBE                     u2441:
  5575   001CBE  EF85  F00E         	goto	l3464
  5576   001CC2                     u2440:
  5577   001CC2  0E01               	movlw	1
  5578   001CC4  6E05               	movwf	___awmod@counter^0,c
  5579   001CC6  EF69  F00E         	goto	l3454
  5580   001CCA                     l3452:
  5581   001CCA  90D8               	bcf	status,0,c
  5582   001CCC  3603               	rlcf	___awmod@divisor^0,f,c
  5583   001CCE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5584   001CD0  2A05               	incf	___awmod@counter^0,f,c
  5585   001CD2                     l3454:
  5586   001CD2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5587   001CD4  EF6E  F00E         	goto	u2451
  5588   001CD8  EF70  F00E         	goto	u2450
  5589   001CDC                     u2451:
  5590   001CDC  EF65  F00E         	goto	l3452
  5591   001CE0                     u2450:
  5592   001CE0                     l3456:
  5593   001CE0  5003               	movf	___awmod@divisor^0,w,c
  5594   001CE2  5C01               	subwf	___awmod@dividend^0,w,c
  5595   001CE4  5004               	movf	(___awmod@divisor+1)^0,w,c
  5596   001CE6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5597   001CE8  A0D8               	btfss	status,0,c
  5598   001CEA  EF79  F00E         	goto	u2461
  5599   001CEE  EF7B  F00E         	goto	u2460
  5600   001CF2                     u2461:
  5601   001CF2  EF7F  F00E         	goto	l3460
  5602   001CF6                     u2460:
  5603   001CF6  5003               	movf	___awmod@divisor^0,w,c
  5604   001CF8  5E01               	subwf	___awmod@dividend^0,f,c
  5605   001CFA  5004               	movf	(___awmod@divisor+1)^0,w,c
  5606   001CFC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5607   001CFE                     l3460:
  5608   001CFE  90D8               	bcf	status,0,c
  5609   001D00  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5610   001D02  3203               	rrcf	___awmod@divisor^0,f,c
  5611   001D04  2E05               	decfsz	___awmod@counter^0,f,c
  5612   001D06  EF70  F00E         	goto	l3456
  5613   001D0A                     l3464:
  5614   001D0A  5006               	movf	___awmod@sign^0,w,c
  5615   001D0C  B4D8               	btfsc	status,2,c
  5616   001D0E  EF8B  F00E         	goto	u2471
  5617   001D12  EF8D  F00E         	goto	u2470
  5618   001D16                     u2471:
  5619   001D16  EF91  F00E         	goto	l3468
  5620   001D1A                     u2470:
  5621   001D1A  6C01               	negf	___awmod@dividend^0,c
  5622   001D1C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5623   001D1E  B0D8               	btfsc	status,0,c
  5624   001D20  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5625   001D22                     l3468:
  5626   001D22  C001  F001         	movff	___awmod@dividend,?___awmod
  5627   001D26  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5628   001D2A  0012               	return		;funcret
  5629   001D2C                     __end_of___awmod:
  5630                           	callstack 0
  5631                           
  5632 ;; *************** function _default_screen *****************
  5633 ;; Defined at:
  5634 ;;		line 195 in file "blackbox.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  key             1    wreg     unsigned char 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  key             1   51[COMRAM] unsigned char 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5648 ;;      Params:         0       0       0       0       0       0       0
  5649 ;;      Locals:         1       0       0       0       0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0
  5651 ;;      Totals:         1       0       0       0       0       0       0
  5652 ;;Total ram usage:        1 bytes
  5653 ;; Hardware stack levels used: 1
  5654 ;; Hardware stack levels required when called: 7
  5655 ;; This function calls:
  5656 ;;		_clcd_print
  5657 ;;		_event
  5658 ;;		_get_time
  5659 ;;		_speed_display
  5660 ;; This function is called by:
  5661 ;;		_main
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text23
  5666   002282                     __ptext23:
  5667                           	callstack 0
  5668   002282                     _default_screen:
  5669                           	callstack 23
  5670                           
  5671                           ;incstack = 0
  5672                           ;default_screen@key stored from wreg
  5673   002282  6E34               	movwf	default_screen@key^0,c
  5674   002284                     
  5675                           ;blackbox.c: 196:     speed_display(speed);
  5676   002284  0EAF               	movlw	low _speed
  5677   002286  6E32               	movwf	speed_display@speed^0,c
  5678   002288  0E00               	movlw	high _speed
  5679   00228A  6E33               	movwf	(speed_display@speed+1)^0,c
  5680   00228C  EC2A  F00D         	call	_speed_display	;wreg free
  5681   002290                     
  5682                           ;blackbox.c: 197:     get_time();
  5683   002290  ECEA  F00E         	call	_get_time	;wreg free
  5684   002294                     
  5685                           ;blackbox.c: 198:     clcd_print("  TIME    EV  SP", (0x80 + (0)));
  5686   002294  0EC2               	movlw	low STR_26
  5687   002296  6E03               	movwf	clcd_print@data^0,c
  5688   002298  0E2E               	movlw	high STR_26
  5689   00229A  6E04               	movwf	(clcd_print@data+1)^0,c
  5690   00229C  0E80               	movlw	128
  5691   00229E  6E05               	movwf	clcd_print@addr^0,c
  5692   0022A0  EC8C  F010         	call	_clcd_print	;wreg free
  5693   0022A4                     
  5694                           ;blackbox.c: 199:     clcd_print(time, (0xC0 + (0)));
  5695   0022A4  0EE0               	movlw	low _time
  5696   0022A6  6E03               	movwf	clcd_print@data^0,c
  5697   0022A8  0E00               	movlw	high _time
  5698   0022AA  6E04               	movwf	(clcd_print@data+1)^0,c
  5699   0022AC  0EC0               	movlw	192
  5700   0022AE  6E05               	movwf	clcd_print@addr^0,c
  5701   0022B0  EC8C  F010         	call	_clcd_print	;wreg free
  5702   0022B4                     
  5703                           ;blackbox.c: 200:     clcd_print(speed, (0xC0 + (14)));
  5704   0022B4  0EAF               	movlw	low _speed
  5705   0022B6  6E03               	movwf	clcd_print@data^0,c
  5706   0022B8  0E00               	movlw	high _speed
  5707   0022BA  6E04               	movwf	(clcd_print@data+1)^0,c
  5708   0022BC  0ECE               	movlw	206
  5709   0022BE  6E05               	movwf	clcd_print@addr^0,c
  5710   0022C0  EC8C  F010         	call	_clcd_print	;wreg free
  5711   0022C4                     
  5712                           ;blackbox.c: 201:     event(key);
  5713   0022C4  5034               	movf	default_screen@key^0,w,c
  5714   0022C6  EC35  F009         	call	_event
  5715   0022CA  0012               	return		;funcret
  5716   0022CC                     __end_of_default_screen:
  5717                           	callstack 0
  5718                           
  5719 ;; *************** function _speed_display *****************
  5720 ;; Defined at:
  5721 ;;		line 244 in file "blackbox.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  speed           2   49[COMRAM] PTR unsigned char 
  5724 ;;		 -> speed(3), 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;		None
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5736 ;;      Params:         2       0       0       0       0       0       0
  5737 ;;      Locals:         0       0       0       0       0       0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0
  5739 ;;      Totals:         2       0       0       0       0       0       0
  5740 ;;Total ram usage:        2 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; Hardware stack levels required when called: 2
  5743 ;; This function calls:
  5744 ;;		___fldiv
  5745 ;;		___fltol
  5746 ;;		___lwdiv
  5747 ;;		___lwmod
  5748 ;;		___xxtofl
  5749 ;;		_read_adc
  5750 ;; This function is called by:
  5751 ;;		_default_screen
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text24
  5756   001A54                     __ptext24:
  5757                           	callstack 0
  5758   001A54                     _speed_display:
  5759                           	callstack 27
  5760   001A54                     
  5761                           ;blackbox.c: 245:     adc_reg_val = read_adc(0x04);
  5762   001A54  0E04               	movlw	4
  5763   001A56  EC66  F011         	call	_read_adc
  5764   001A5A  C001  F049         	movff	?_read_adc,_adc_reg_val
  5765   001A5E  C002  F04A         	movff	?_read_adc+1,_adc_reg_val+1
  5766                           
  5767                           ;blackbox.c: 246:     adc_reg_val = (adc_reg_val / 10.33);
  5768   001A62  0EAE               	movlw	174
  5769   001A64  6E13               	movwf	___fldiv@a^0,c
  5770   001A66  0E47               	movlw	71
  5771   001A68  6E14               	movwf	(___fldiv@a+1)^0,c
  5772   001A6A  0E25               	movlw	37
  5773   001A6C  6E15               	movwf	(___fldiv@a+2)^0,c
  5774   001A6E  0E41               	movlw	65
  5775   001A70  6E16               	movwf	(___fldiv@a+3)^0,c
  5776   001A72  C049  F001         	movff	_adc_reg_val,___xxtofl@val
  5777   001A76  C04A  F002         	movff	_adc_reg_val+1,___xxtofl@val+1
  5778   001A7A  6A03               	clrf	(___xxtofl@val+2)^0,c
  5779   001A7C  6A04               	clrf	(___xxtofl@val+3)^0,c
  5780   001A7E  0E00               	movlw	0
  5781   001A80  EC5B  F008         	call	___xxtofl
  5782   001A84  C001  F00F         	movff	?___xxtofl,___fldiv@b
  5783   001A88  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  5784   001A8C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  5785   001A90  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  5786   001A94  EC29  F004         	call	___fldiv	;wreg free
  5787   001A98  C00F  F028         	movff	?___fldiv,___fltol@f1
  5788   001A9C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  5789   001AA0  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  5790   001AA4  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  5791   001AA8  EC0C  F00B         	call	___fltol	;wreg free
  5792   001AAC  C028  F049         	movff	?___fltol,_adc_reg_val
  5793   001AB0  C029  F04A         	movff	?___fltol+1,_adc_reg_val+1
  5794   001AB4                     
  5795                           ;blackbox.c: 247:     speed[0] = (char) (adc_reg_val / 10 % 10) + 48;
  5796   001AB4  0E00               	movlw	0
  5797   001AB6  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5798   001AB8  0E0A               	movlw	10
  5799   001ABA  6E03               	movwf	___lwdiv@divisor^0,c
  5800   001ABC  C049  F001         	movff	_adc_reg_val,___lwdiv@dividend
  5801   001AC0  C04A  F002         	movff	_adc_reg_val+1,___lwdiv@dividend+1
  5802   001AC4  ECAA  F00F         	call	___lwdiv	;wreg free
  5803   001AC8  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  5804   001ACC  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  5805   001AD0  0E00               	movlw	0
  5806   001AD2  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  5807   001AD4  0E0A               	movlw	10
  5808   001AD6  6E0A               	movwf	___lwmod@divisor^0,c
  5809   001AD8  ECC2  F010         	call	___lwmod	;wreg free
  5810   001ADC  5008               	movf	?___lwmod^0,w,c
  5811   001ADE  0F30               	addlw	48
  5812   001AE0  C032  FFD9         	movff	speed_display@speed,fsr2l
  5813   001AE4  C033  FFDA         	movff	speed_display@speed+1,fsr2h
  5814   001AE8  6EDF               	movwf	indf2,c
  5815   001AEA                     
  5816                           ;blackbox.c: 248:     speed[1] = (char) (adc_reg_val % 10) + 48;
  5817   001AEA  EE20 F001          	lfsr	2,1
  5818   001AEE  5032               	movf	speed_display@speed^0,w,c
  5819   001AF0  26D9               	addwf	fsr2l,f,c
  5820   001AF2  5033               	movf	(speed_display@speed+1)^0,w,c
  5821   001AF4  22DA               	addwfc	fsr2h,f,c
  5822   001AF6  C049  F008         	movff	_adc_reg_val,___lwmod@dividend
  5823   001AFA  C04A  F009         	movff	_adc_reg_val+1,___lwmod@dividend+1
  5824   001AFE  0E00               	movlw	0
  5825   001B00  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  5826   001B02  0E0A               	movlw	10
  5827   001B04  6E0A               	movwf	___lwmod@divisor^0,c
  5828   001B06  ECC2  F010         	call	___lwmod	;wreg free
  5829   001B0A  5008               	movf	?___lwmod^0,w,c
  5830   001B0C  0F30               	addlw	48
  5831   001B0E  6EDF               	movwf	indf2,c
  5832   001B10  0012               	return		;funcret
  5833   001B12                     __end_of_speed_display:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function _read_adc *****************
  5837 ;; Defined at:
  5838 ;;		line 43 in file "adc.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  channel         1    wreg     unsigned char 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  channel         1    6[COMRAM] unsigned char 
  5843 ;;  reg_val         2    4[COMRAM] unsigned short 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  2    0[COMRAM] unsigned short 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5853 ;;      Params:         2       0       0       0       0       0       0
  5854 ;;      Locals:         3       0       0       0       0       0       0
  5855 ;;      Temps:          2       0       0       0       0       0       0
  5856 ;;      Totals:         7       0       0       0       0       0       0
  5857 ;;Total ram usage:        7 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; Hardware stack levels required when called: 1
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_speed_display
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text25
  5868   0022CC                     __ptext25:
  5869                           	callstack 0
  5870   0022CC                     _read_adc:
  5871                           	callstack 27
  5872                           
  5873                           ;incstack = 0
  5874                           ;read_adc@channel stored from wreg
  5875   0022CC  6E07               	movwf	read_adc@channel^0,c
  5876   0022CE                     
  5877                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  5878   0022CE  C007  F003         	movff	read_adc@channel,??_read_adc
  5879   0022D2  90D8               	bcf	status,0,c
  5880   0022D4  3603               	rlcf	??_read_adc^0,f,c
  5881   0022D6  90D8               	bcf	status,0,c
  5882   0022D8  3603               	rlcf	??_read_adc^0,f,c
  5883   0022DA  50C2               	movf	194,w,c	;volatile
  5884   0022DC  0BC3               	andlw	195
  5885   0022DE  1003               	iorwf	??_read_adc^0,w,c
  5886   0022E0  6EC2               	movwf	194,c	;volatile
  5887   0022E2                     
  5888                           ;adc.c: 51:  GO = 1;
  5889   0022E2  82C2               	bsf	4034,1,c	;volatile
  5890   0022E4                     l526:
  5891   0022E4  B2C2               	btfsc	4034,1,c	;volatile
  5892   0022E6  EF77  F011         	goto	u2111
  5893   0022EA  EF79  F011         	goto	u2110
  5894   0022EE                     u2111:
  5895   0022EE  EF72  F011         	goto	l526
  5896   0022F2                     u2110:
  5897   0022F2                     
  5898                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  5899   0022F2  50C3               	movf	195,w,c	;volatile
  5900   0022F4  CFC4 F003          	movff	4036,??_read_adc	;volatile
  5901   0022F8  6A04               	clrf	(??_read_adc+1)^0,c
  5902   0022FA  C003  F004         	movff	??_read_adc,??_read_adc+1
  5903   0022FE  6A03               	clrf	??_read_adc^0,c
  5904   002300  1003               	iorwf	??_read_adc^0,w,c
  5905   002302  6E05               	movwf	read_adc@reg_val^0,c
  5906   002304  5004               	movf	(??_read_adc+1)^0,w,c
  5907   002306  6E06               	movwf	(read_adc@reg_val+1)^0,c
  5908   002308                     
  5909                           ;adc.c: 55:  return reg_val;
  5910   002308  C005  F001         	movff	read_adc@reg_val,?_read_adc
  5911   00230C  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  5912   002310  0012               	return		;funcret
  5913   002312                     __end_of_read_adc:
  5914                           	callstack 0
  5915                           
  5916 ;; *************** function ___xxtofl *****************
  5917 ;; Defined at:
  5918 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  sign            1    wreg     unsigned char 
  5921 ;;  val             4    0[COMRAM] long 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  sign            1    8[COMRAM] unsigned char 
  5924 ;;  arg             4   10[COMRAM] unsigned long 
  5925 ;;  exp             1    9[COMRAM] unsigned char 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  4    0[COMRAM] unsigned char 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5935 ;;      Params:         4       0       0       0       0       0       0
  5936 ;;      Locals:         6       0       0       0       0       0       0
  5937 ;;      Temps:          4       0       0       0       0       0       0
  5938 ;;      Totals:        14       0       0       0       0       0       0
  5939 ;;Total ram usage:       14 bytes
  5940 ;; Hardware stack levels used: 1
  5941 ;; Hardware stack levels required when called: 1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_speed_display
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text26
  5950   0010B6                     __ptext26:
  5951                           	callstack 0
  5952   0010B6                     ___xxtofl:
  5953                           	callstack 27
  5954                           
  5955                           ;incstack = 0
  5956                           ;___xxtofl@sign stored from wreg
  5957   0010B6  6E09               	movwf	___xxtofl@sign^0,c
  5958   0010B8  5009               	movf	___xxtofl@sign^0,w,c
  5959   0010BA  B4D8               	btfsc	status,2,c
  5960   0010BC  EF62  F008         	goto	u2611
  5961   0010C0  EF64  F008         	goto	u2610
  5962   0010C4                     u2611:
  5963   0010C4  EF86  F008         	goto	l1391
  5964   0010C8                     u2610:
  5965   0010C8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5966   0010CA  EF6B  F008         	goto	u2620
  5967   0010CE  EF69  F008         	goto	u2621
  5968   0010D2                     u2621:
  5969   0010D2  EF86  F008         	goto	l1391
  5970   0010D6                     u2620:
  5971   0010D6  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5972   0010DA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5973   0010DE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5974   0010E2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5975   0010E6  1E05               	comf	??___xxtofl^0,f,c
  5976   0010E8  1E06               	comf	(??___xxtofl+1)^0,f,c
  5977   0010EA  1E07               	comf	(??___xxtofl+2)^0,f,c
  5978   0010EC  1E08               	comf	(??___xxtofl+3)^0,f,c
  5979   0010EE  2A05               	incf	??___xxtofl^0,f,c
  5980   0010F0  0E00               	movlw	0
  5981   0010F2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5982   0010F4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5983   0010F6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5984   0010F8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5985   0010FC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5986   001100  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5987   001104  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5988   001108  EF8E  F008         	goto	l3560
  5989   00110C                     l1391:
  5990   00110C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5991   001110  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5992   001114  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5993   001118  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5994   00111C                     l3560:
  5995   00111C  5001               	movf	___xxtofl@val^0,w,c
  5996   00111E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5997   001120  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5998   001122  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5999   001124  A4D8               	btfss	status,2,c
  6000   001126  EF97  F008         	goto	u2631
  6001   00112A  EF99  F008         	goto	u2630
  6002   00112E                     u2631:
  6003   00112E  EFA3  F008         	goto	l3566
  6004   001132                     u2630:
  6005   001132  0E00               	movlw	0
  6006   001134  6E01               	movwf	?___xxtofl^0,c
  6007   001136  0E00               	movlw	0
  6008   001138  6E02               	movwf	(?___xxtofl+1)^0,c
  6009   00113A  0E00               	movlw	0
  6010   00113C  6E03               	movwf	(?___xxtofl+2)^0,c
  6011   00113E  0E00               	movlw	0
  6012   001140  6E04               	movwf	(?___xxtofl+3)^0,c
  6013   001142  EF34  F009         	goto	l1394
  6014   001146                     l3566:
  6015   001146  0E96               	movlw	150
  6016   001148  6E0A               	movwf	___xxtofl@exp^0,c
  6017   00114A  EFAD  F008         	goto	l3570
  6018   00114E                     l3568:
  6019   00114E  2A0A               	incf	___xxtofl@exp^0,f,c
  6020   001150  90D8               	bcf	status,0,c
  6021   001152  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6022   001154  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6023   001156  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6024   001158  320B               	rrcf	___xxtofl@arg^0,f,c
  6025   00115A                     l3570:
  6026   00115A  0E00               	movlw	0
  6027   00115C  140B               	andwf	___xxtofl@arg^0,w,c
  6028   00115E  6E05               	movwf	??___xxtofl^0,c
  6029   001160  0E00               	movlw	0
  6030   001162  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6031   001164  6E06               	movwf	(??___xxtofl+1)^0,c
  6032   001166  0E00               	movlw	0
  6033   001168  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6034   00116A  6E07               	movwf	(??___xxtofl+2)^0,c
  6035   00116C  0EFE               	movlw	254
  6036   00116E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6037   001170  6E08               	movwf	(??___xxtofl+3)^0,c
  6038   001172  5005               	movf	??___xxtofl^0,w,c
  6039   001174  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6040   001176  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6041   001178  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6042   00117A  A4D8               	btfss	status,2,c
  6043   00117C  EFC2  F008         	goto	u2641
  6044   001180  EFC4  F008         	goto	u2640
  6045   001184                     u2641:
  6046   001184  EFA7  F008         	goto	l3568
  6047   001188                     u2640:
  6048   001188  EFD2  F008         	goto	l1398
  6049   00118C                     l3572:
  6050   00118C  2A0A               	incf	___xxtofl@exp^0,f,c
  6051   00118E  0E01               	movlw	1
  6052   001190  260B               	addwf	___xxtofl@arg^0,f,c
  6053   001192  0E00               	movlw	0
  6054   001194  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6055   001196  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6056   001198  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6057   00119A  90D8               	bcf	status,0,c
  6058   00119C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6059   00119E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6060   0011A0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6061   0011A2  320B               	rrcf	___xxtofl@arg^0,f,c
  6062   0011A4                     l1398:
  6063   0011A4  0E00               	movlw	0
  6064   0011A6  140B               	andwf	___xxtofl@arg^0,w,c
  6065   0011A8  6E05               	movwf	??___xxtofl^0,c
  6066   0011AA  0E00               	movlw	0
  6067   0011AC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6068   0011AE  6E06               	movwf	(??___xxtofl+1)^0,c
  6069   0011B0  0E00               	movlw	0
  6070   0011B2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6071   0011B4  6E07               	movwf	(??___xxtofl+2)^0,c
  6072   0011B6  0EFF               	movlw	255
  6073   0011B8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6074   0011BA  6E08               	movwf	(??___xxtofl+3)^0,c
  6075   0011BC  5005               	movf	??___xxtofl^0,w,c
  6076   0011BE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6077   0011C0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6078   0011C2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6079   0011C4  A4D8               	btfss	status,2,c
  6080   0011C6  EFE7  F008         	goto	u2651
  6081   0011CA  EFE9  F008         	goto	u2650
  6082   0011CE                     u2651:
  6083   0011CE  EFC6  F008         	goto	l3572
  6084   0011D2                     u2650:
  6085   0011D2  EFF1  F008         	goto	l3580
  6086   0011D6                     l3578:
  6087   0011D6  060A               	decf	___xxtofl@exp^0,f,c
  6088   0011D8  90D8               	bcf	status,0,c
  6089   0011DA  360B               	rlcf	___xxtofl@arg^0,f,c
  6090   0011DC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6091   0011DE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6092   0011E0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6093   0011E2                     l3580:
  6094   0011E2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6095   0011E4  EFF6  F008         	goto	u2661
  6096   0011E8  EFF8  F008         	goto	u2660
  6097   0011EC                     u2661:
  6098   0011EC  EF00  F009         	goto	l1405
  6099   0011F0                     u2660:
  6100   0011F0  0E02               	movlw	2
  6101   0011F2  600A               	cpfslt	___xxtofl@exp^0,c
  6102   0011F4  EFFE  F008         	goto	u2671
  6103   0011F8  EF00  F009         	goto	u2670
  6104   0011FC                     u2671:
  6105   0011FC  EFEB  F008         	goto	l3578
  6106   001200                     u2670:
  6107   001200                     l1405:
  6108   001200  B00A               	btfsc	___xxtofl@exp^0,0,c
  6109   001202  EF05  F009         	goto	u2681
  6110   001206  EF07  F009         	goto	u2680
  6111   00120A                     u2681:
  6112   00120A  EF08  F009         	goto	l3586
  6113   00120E                     u2680:
  6114   00120E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6115   001210                     l3586:
  6116   001210  90D8               	bcf	status,0,c
  6117   001212  320A               	rrcf	___xxtofl@exp^0,f,c
  6118   001214  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6119   001218  6A06               	clrf	(??___xxtofl+1)^0,c
  6120   00121A  6A07               	clrf	(??___xxtofl+2)^0,c
  6121   00121C  6A08               	clrf	(??___xxtofl+3)^0,c
  6122   00121E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6123   001222  6A07               	clrf	(??___xxtofl+2)^0,c
  6124   001224  6A06               	clrf	(??___xxtofl+1)^0,c
  6125   001226  6A05               	clrf	??___xxtofl^0,c
  6126   001228  5005               	movf	??___xxtofl^0,w,c
  6127   00122A  120B               	iorwf	___xxtofl@arg^0,f,c
  6128   00122C  5006               	movf	(??___xxtofl+1)^0,w,c
  6129   00122E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6130   001230  5007               	movf	(??___xxtofl+2)^0,w,c
  6131   001232  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6132   001234  5008               	movf	(??___xxtofl+3)^0,w,c
  6133   001236  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6134   001238  5009               	movf	___xxtofl@sign^0,w,c
  6135   00123A  B4D8               	btfsc	status,2,c
  6136   00123C  EF22  F009         	goto	u2691
  6137   001240  EF24  F009         	goto	u2690
  6138   001244                     u2691:
  6139   001244  EF2C  F009         	goto	l3596
  6140   001248                     u2690:
  6141   001248  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6142   00124A  EF2B  F009         	goto	u2700
  6143   00124E  EF29  F009         	goto	u2701
  6144   001252                     u2701:
  6145   001252  EF2C  F009         	goto	l3596
  6146   001256                     u2700:
  6147   001256  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6148   001258                     l3596:
  6149   001258  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6150   00125C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6151   001260  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6152   001264  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6153   001268                     l1394:
  6154   001268  0012               	return		;funcret
  6155   00126A                     __end_of___xxtofl:
  6156                           	callstack 0
  6157                           
  6158 ;; *************** function ___lwmod *****************
  6159 ;; Defined at:
  6160 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  dividend        2    7[COMRAM] unsigned int 
  6163 ;;  divisor         2    9[COMRAM] unsigned int 
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;  counter         1   11[COMRAM] unsigned char 
  6166 ;; Return value:  Size  Location     Type
  6167 ;;                  2    7[COMRAM] unsigned int 
  6168 ;; Registers used:
  6169 ;;		wreg, status,2, status,0
  6170 ;; Tracked objects:
  6171 ;;		On entry : 0/0
  6172 ;;		On exit  : 0/0
  6173 ;;		Unchanged: 0/0
  6174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6175 ;;      Params:         4       0       0       0       0       0       0
  6176 ;;      Locals:         1       0       0       0       0       0       0
  6177 ;;      Temps:          0       0       0       0       0       0       0
  6178 ;;      Totals:         5       0       0       0       0       0       0
  6179 ;;Total ram usage:        5 bytes
  6180 ;; Hardware stack levels used: 1
  6181 ;; Hardware stack levels required when called: 1
  6182 ;; This function calls:
  6183 ;;		Nothing
  6184 ;; This function is called by:
  6185 ;;		_speed_display
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text27
  6190   002184                     __ptext27:
  6191                           	callstack 0
  6192   002184                     ___lwmod:
  6193                           	callstack 27
  6194   002184  500A               	movf	___lwmod@divisor^0,w,c
  6195   002186  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  6196   002188  B4D8               	btfsc	status,2,c
  6197   00218A  EFC9  F010         	goto	u2581
  6198   00218E  EFCB  F010         	goto	u2580
  6199   002192                     u2581:
  6200   002192  EFEF  F010         	goto	l1237
  6201   002196                     u2580:
  6202   002196  0E01               	movlw	1
  6203   002198  6E0C               	movwf	___lwmod@counter^0,c
  6204   00219A  EFD3  F010         	goto	l3544
  6205   00219E                     l3542:
  6206   00219E  90D8               	bcf	status,0,c
  6207   0021A0  360A               	rlcf	___lwmod@divisor^0,f,c
  6208   0021A2  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  6209   0021A4  2A0C               	incf	___lwmod@counter^0,f,c
  6210   0021A6                     l3544:
  6211   0021A6  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  6212   0021A8  EFD8  F010         	goto	u2591
  6213   0021AC  EFDA  F010         	goto	u2590
  6214   0021B0                     u2591:
  6215   0021B0  EFCF  F010         	goto	l3542
  6216   0021B4                     u2590:
  6217   0021B4                     l3546:
  6218   0021B4  500A               	movf	___lwmod@divisor^0,w,c
  6219   0021B6  5C08               	subwf	___lwmod@dividend^0,w,c
  6220   0021B8  500B               	movf	(___lwmod@divisor+1)^0,w,c
  6221   0021BA  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  6222   0021BC  A0D8               	btfss	status,0,c
  6223   0021BE  EFE3  F010         	goto	u2601
  6224   0021C2  EFE5  F010         	goto	u2600
  6225   0021C6                     u2601:
  6226   0021C6  EFE9  F010         	goto	l3550
  6227   0021CA                     u2600:
  6228   0021CA  500A               	movf	___lwmod@divisor^0,w,c
  6229   0021CC  5E08               	subwf	___lwmod@dividend^0,f,c
  6230   0021CE  500B               	movf	(___lwmod@divisor+1)^0,w,c
  6231   0021D0  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  6232   0021D2                     l3550:
  6233   0021D2  90D8               	bcf	status,0,c
  6234   0021D4  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  6235   0021D6  320A               	rrcf	___lwmod@divisor^0,f,c
  6236   0021D8  2E0C               	decfsz	___lwmod@counter^0,f,c
  6237   0021DA  EFDA  F010         	goto	l3546
  6238   0021DE                     l1237:
  6239   0021DE  C008  F008         	movff	___lwmod@dividend,?___lwmod
  6240   0021E2  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  6241   0021E6  0012               	return		;funcret
  6242   0021E8                     __end_of___lwmod:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function ___lwdiv *****************
  6246 ;; Defined at:
  6247 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  dividend        2    0[COMRAM] unsigned int 
  6250 ;;  divisor         2    2[COMRAM] unsigned int 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  quotient        2    4[COMRAM] unsigned int 
  6253 ;;  counter         1    6[COMRAM] unsigned char 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  2    0[COMRAM] unsigned int 
  6256 ;; Registers used:
  6257 ;;		wreg, status,2, status,0
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6263 ;;      Params:         4       0       0       0       0       0       0
  6264 ;;      Locals:         3       0       0       0       0       0       0
  6265 ;;      Temps:          0       0       0       0       0       0       0
  6266 ;;      Totals:         7       0       0       0       0       0       0
  6267 ;;Total ram usage:        7 bytes
  6268 ;; Hardware stack levels used: 1
  6269 ;; Hardware stack levels required when called: 1
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_speed_display
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text28
  6278   001F54                     __ptext28:
  6279                           	callstack 0
  6280   001F54                     ___lwdiv:
  6281                           	callstack 27
  6282   001F54  0E00               	movlw	0
  6283   001F56  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  6284   001F58  0E00               	movlw	0
  6285   001F5A  6E05               	movwf	___lwdiv@quotient^0,c
  6286   001F5C  5003               	movf	___lwdiv@divisor^0,w,c
  6287   001F5E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6288   001F60  B4D8               	btfsc	status,2,c
  6289   001F62  EFB5  F00F         	goto	u2551
  6290   001F66  EFB7  F00F         	goto	u2550
  6291   001F6A                     u2551:
  6292   001F6A  EFDF  F00F         	goto	l1227
  6293   001F6E                     u2550:
  6294   001F6E  0E01               	movlw	1
  6295   001F70  6E07               	movwf	___lwdiv@counter^0,c
  6296   001F72  EFBF  F00F         	goto	l3524
  6297   001F76                     l3522:
  6298   001F76  90D8               	bcf	status,0,c
  6299   001F78  3603               	rlcf	___lwdiv@divisor^0,f,c
  6300   001F7A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6301   001F7C  2A07               	incf	___lwdiv@counter^0,f,c
  6302   001F7E                     l3524:
  6303   001F7E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  6304   001F80  EFC4  F00F         	goto	u2561
  6305   001F84  EFC6  F00F         	goto	u2560
  6306   001F88                     u2561:
  6307   001F88  EFBB  F00F         	goto	l3522
  6308   001F8C                     u2560:
  6309   001F8C                     l3526:
  6310   001F8C  90D8               	bcf	status,0,c
  6311   001F8E  3605               	rlcf	___lwdiv@quotient^0,f,c
  6312   001F90  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6313   001F92  5003               	movf	___lwdiv@divisor^0,w,c
  6314   001F94  5C01               	subwf	___lwdiv@dividend^0,w,c
  6315   001F96  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6316   001F98  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6317   001F9A  A0D8               	btfss	status,0,c
  6318   001F9C  EFD2  F00F         	goto	u2571
  6319   001FA0  EFD4  F00F         	goto	u2570
  6320   001FA4                     u2571:
  6321   001FA4  EFD9  F00F         	goto	l3534
  6322   001FA8                     u2570:
  6323   001FA8  5003               	movf	___lwdiv@divisor^0,w,c
  6324   001FAA  5E01               	subwf	___lwdiv@dividend^0,f,c
  6325   001FAC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6326   001FAE  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6327   001FB0  8005               	bsf	___lwdiv@quotient^0,0,c
  6328   001FB2                     l3534:
  6329   001FB2  90D8               	bcf	status,0,c
  6330   001FB4  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6331   001FB6  3203               	rrcf	___lwdiv@divisor^0,f,c
  6332   001FB8  2E07               	decfsz	___lwdiv@counter^0,f,c
  6333   001FBA  EFC6  F00F         	goto	l3526
  6334   001FBE                     l1227:
  6335   001FBE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  6336   001FC2  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6337   001FC6  0012               	return		;funcret
  6338   001FC8                     __end_of___lwdiv:
  6339                           	callstack 0
  6340                           
  6341 ;; *************** function ___fltol *****************
  6342 ;; Defined at:
  6343 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;  f1              4   39[COMRAM] unsigned int 
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;  exp1            1   48[COMRAM] unsigned char 
  6348 ;;  sign1           1   47[COMRAM] unsigned char 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  4   39[COMRAM] long 
  6351 ;; Registers used:
  6352 ;;		wreg, status,2, status,0
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6358 ;;      Params:         4       0       0       0       0       0       0
  6359 ;;      Locals:         2       0       0       0       0       0       0
  6360 ;;      Temps:          4       0       0       0       0       0       0
  6361 ;;      Totals:        10       0       0       0       0       0       0
  6362 ;;Total ram usage:       10 bytes
  6363 ;; Hardware stack levels used: 1
  6364 ;; Hardware stack levels required when called: 1
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_speed_display
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text29
  6373   001618                     __ptext29:
  6374                           	callstack 0
  6375   001618                     ___fltol:
  6376                           	callstack 27
  6377   001618  342A               	rlcf	(___fltol@f1+2)^0,w,c
  6378   00161A  342B               	rlcf	(___fltol@f1+3)^0,w,c
  6379   00161C  6E31               	movwf	___fltol@exp1^0,c
  6380   00161E  5031               	movf	___fltol@exp1^0,w,c
  6381   001620  A4D8               	btfss	status,2,c
  6382   001622  EF15  F00B         	goto	u2481
  6383   001626  EF17  F00B         	goto	u2480
  6384   00162A                     u2481:
  6385   00162A  EF21  F00B         	goto	l3478
  6386   00162E                     u2480:
  6387   00162E                     l3474:
  6388   00162E  0E00               	movlw	0
  6389   001630  6E28               	movwf	?___fltol^0,c
  6390   001632  0E00               	movlw	0
  6391   001634  6E29               	movwf	(?___fltol+1)^0,c
  6392   001636  0E00               	movlw	0
  6393   001638  6E2A               	movwf	(?___fltol+2)^0,c
  6394   00163A  0E00               	movlw	0
  6395   00163C  6E2B               	movwf	(?___fltol+3)^0,c
  6396   00163E  EF8E  F00B         	goto	l1033
  6397   001642                     l3478:
  6398   001642  C028  F02C         	movff	___fltol@f1,??___fltol
  6399   001646  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  6400   00164A  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  6401   00164E  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  6402   001652  0E20               	movlw	32
  6403   001654  EF31  F00B         	goto	u2490
  6404   001658                     u2495:
  6405   001658  90D8               	bcf	status,0,c
  6406   00165A  322F               	rrcf	(??___fltol+3)^0,f,c
  6407   00165C  322E               	rrcf	(??___fltol+2)^0,f,c
  6408   00165E  322D               	rrcf	(??___fltol+1)^0,f,c
  6409   001660  322C               	rrcf	??___fltol^0,f,c
  6410   001662                     u2490:
  6411   001662  2EE8               	decfsz	wreg,f,c
  6412   001664  EF2C  F00B         	goto	u2495
  6413   001668  502C               	movf	??___fltol^0,w,c
  6414   00166A  6E30               	movwf	___fltol@sign1^0,c
  6415   00166C  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  6416   00166E  0EFF               	movlw	255
  6417   001670  1628               	andwf	___fltol@f1^0,f,c
  6418   001672  0EFF               	movlw	255
  6419   001674  1629               	andwf	(___fltol@f1+1)^0,f,c
  6420   001676  0EFF               	movlw	255
  6421   001678  162A               	andwf	(___fltol@f1+2)^0,f,c
  6422   00167A  0E00               	movlw	0
  6423   00167C  162B               	andwf	(___fltol@f1+3)^0,f,c
  6424   00167E  0E96               	movlw	150
  6425   001680  5E31               	subwf	___fltol@exp1^0,f,c
  6426   001682  BE31               	btfsc	___fltol@exp1^0,7,c
  6427   001684  EF48  F00B         	goto	u2500
  6428   001688  EF46  F00B         	goto	u2501
  6429   00168C                     u2501:
  6430   00168C  EF5E  F00B         	goto	l3498
  6431   001690                     u2500:
  6432   001690  5031               	movf	___fltol@exp1^0,w,c
  6433   001692  0A80               	xorlw	128
  6434   001694  0F97               	addlw	151
  6435   001696  B0D8               	btfsc	status,0,c
  6436   001698  EF50  F00B         	goto	u2511
  6437   00169C  EF52  F00B         	goto	u2510
  6438   0016A0                     u2511:
  6439   0016A0  EF54  F00B         	goto	l3494
  6440   0016A4                     u2510:
  6441   0016A4  EF17  F00B         	goto	l3474
  6442   0016A8                     l3494:
  6443   0016A8  90D8               	bcf	status,0,c
  6444   0016AA  322B               	rrcf	(___fltol@f1+3)^0,f,c
  6445   0016AC  322A               	rrcf	(___fltol@f1+2)^0,f,c
  6446   0016AE  3229               	rrcf	(___fltol@f1+1)^0,f,c
  6447   0016B0  3228               	rrcf	___fltol@f1^0,f,c
  6448   0016B2  3E31               	incfsz	___fltol@exp1^0,f,c
  6449   0016B4  EF54  F00B         	goto	l3494
  6450   0016B8  EF76  F00B         	goto	l3508
  6451   0016BC                     l3498:
  6452   0016BC  0E1F               	movlw	31
  6453   0016BE  6431               	cpfsgt	___fltol@exp1^0,c
  6454   0016C0  EF64  F00B         	goto	u2521
  6455   0016C4  EF66  F00B         	goto	u2520
  6456   0016C8                     u2521:
  6457   0016C8  EF6E  F00B         	goto	l3506
  6458   0016CC                     u2520:
  6459   0016CC  EF17  F00B         	goto	l3474
  6460   0016D0                     l3504:
  6461   0016D0  90D8               	bcf	status,0,c
  6462   0016D2  3628               	rlcf	___fltol@f1^0,f,c
  6463   0016D4  3629               	rlcf	(___fltol@f1+1)^0,f,c
  6464   0016D6  362A               	rlcf	(___fltol@f1+2)^0,f,c
  6465   0016D8  362B               	rlcf	(___fltol@f1+3)^0,f,c
  6466   0016DA  0631               	decf	___fltol@exp1^0,f,c
  6467   0016DC                     l3506:
  6468   0016DC  5031               	movf	___fltol@exp1^0,w,c
  6469   0016DE  A4D8               	btfss	status,2,c
  6470   0016E0  EF74  F00B         	goto	u2531
  6471   0016E4  EF76  F00B         	goto	u2530
  6472   0016E8                     u2531:
  6473   0016E8  EF68  F00B         	goto	l3504
  6474   0016EC                     u2530:
  6475   0016EC                     l3508:
  6476   0016EC  5030               	movf	___fltol@sign1^0,w,c
  6477   0016EE  B4D8               	btfsc	status,2,c
  6478   0016F0  EF7C  F00B         	goto	u2541
  6479   0016F4  EF7E  F00B         	goto	u2540
  6480   0016F8                     u2541:
  6481   0016F8  EF86  F00B         	goto	l3512
  6482   0016FC                     u2540:
  6483   0016FC  1E2B               	comf	(___fltol@f1+3)^0,f,c
  6484   0016FE  1E2A               	comf	(___fltol@f1+2)^0,f,c
  6485   001700  1E29               	comf	(___fltol@f1+1)^0,f,c
  6486   001702  6C28               	negf	___fltol@f1^0,c
  6487   001704  0E00               	movlw	0
  6488   001706  2229               	addwfc	(___fltol@f1+1)^0,f,c
  6489   001708  222A               	addwfc	(___fltol@f1+2)^0,f,c
  6490   00170A  222B               	addwfc	(___fltol@f1+3)^0,f,c
  6491   00170C                     l3512:
  6492   00170C  C028  F028         	movff	___fltol@f1,?___fltol
  6493   001710  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  6494   001714  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  6495   001718  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  6496   00171C                     l1033:
  6497   00171C  0012               	return		;funcret
  6498   00171E                     __end_of___fltol:
  6499                           	callstack 0
  6500                           
  6501 ;; *************** function ___fldiv *****************
  6502 ;; Defined at:
  6503 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  b               4   14[COMRAM] long 
  6506 ;;  a               4   18[COMRAM] long 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  grs             4   33[COMRAM] unsigned long 
  6509 ;;  rem             4   26[COMRAM] unsigned long 
  6510 ;;  new_exp         2   31[COMRAM] short 
  6511 ;;  aexp            1   38[COMRAM] unsigned char 
  6512 ;;  bexp            1   37[COMRAM] unsigned char 
  6513 ;;  sign            1   30[COMRAM] unsigned char 
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  4   14[COMRAM] unsigned char 
  6516 ;; Registers used:
  6517 ;;		wreg, status,2, status,0
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6523 ;;      Params:         8       0       0       0       0       0       0
  6524 ;;      Locals:        13       0       0       0       0       0       0
  6525 ;;      Temps:          4       0       0       0       0       0       0
  6526 ;;      Totals:        25       0       0       0       0       0       0
  6527 ;;Total ram usage:       25 bytes
  6528 ;; Hardware stack levels used: 1
  6529 ;; Hardware stack levels required when called: 1
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_speed_display
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text30
  6538   000852                     __ptext30:
  6539                           	callstack 0
  6540   000852                     ___fldiv:
  6541                           	callstack 27
  6542   000852  5012               	movf	(___fldiv@b+3)^0,w,c
  6543   000854  0B80               	andlw	128
  6544   000856  6E1F               	movwf	___fldiv@sign^0,c
  6545   000858  5012               	movf	(___fldiv@b+3)^0,w,c
  6546   00085A  2412               	addwf	(___fldiv@b+3)^0,w,c
  6547   00085C  6E26               	movwf	___fldiv@bexp^0,c
  6548   00085E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6549   000860  EF34  F004         	goto	u2131
  6550   000864  EF36  F004         	goto	u2130
  6551   000868                     u2131:
  6552   000868  EF37  F004         	goto	l3260
  6553   00086C                     u2130:
  6554   00086C  8026               	bsf	___fldiv@bexp^0,0,c
  6555   00086E                     l3260:
  6556   00086E  5026               	movf	___fldiv@bexp^0,w,c
  6557   000870  B4D8               	btfsc	status,2,c
  6558   000872  EF3D  F004         	goto	u2141
  6559   000876  EF3F  F004         	goto	u2140
  6560   00087A                     u2141:
  6561   00087A  EF54  F004         	goto	l3270
  6562   00087E                     u2140:
  6563   00087E  2826               	incf	___fldiv@bexp^0,w,c
  6564   000880  A4D8               	btfss	status,2,c
  6565   000882  EF45  F004         	goto	u2151
  6566   000886  EF47  F004         	goto	u2150
  6567   00088A                     u2151:
  6568   00088A  EF4F  F004         	goto	l3266
  6569   00088E                     u2150:
  6570   00088E  0E00               	movlw	0
  6571   000890  6E0F               	movwf	___fldiv@b^0,c
  6572   000892  0E00               	movlw	0
  6573   000894  6E10               	movwf	(___fldiv@b+1)^0,c
  6574   000896  0E00               	movlw	0
  6575   000898  6E11               	movwf	(___fldiv@b+2)^0,c
  6576   00089A  0E00               	movlw	0
  6577   00089C  6E12               	movwf	(___fldiv@b+3)^0,c
  6578   00089E                     l3266:
  6579   00089E  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6580   0008A0  0E00               	movlw	0
  6581   0008A2  6E12               	movwf	(___fldiv@b+3)^0,c
  6582   0008A4  EF5C  F004         	goto	l3272
  6583   0008A8                     l3270:
  6584   0008A8  0E00               	movlw	0
  6585   0008AA  6E0F               	movwf	___fldiv@b^0,c
  6586   0008AC  0E00               	movlw	0
  6587   0008AE  6E10               	movwf	(___fldiv@b+1)^0,c
  6588   0008B0  0E00               	movlw	0
  6589   0008B2  6E11               	movwf	(___fldiv@b+2)^0,c
  6590   0008B4  0E00               	movlw	0
  6591   0008B6  6E12               	movwf	(___fldiv@b+3)^0,c
  6592   0008B8                     l3272:
  6593   0008B8  5016               	movf	(___fldiv@a+3)^0,w,c
  6594   0008BA  0B80               	andlw	128
  6595   0008BC  1A1F               	xorwf	___fldiv@sign^0,f,c
  6596   0008BE  5016               	movf	(___fldiv@a+3)^0,w,c
  6597   0008C0  2416               	addwf	(___fldiv@a+3)^0,w,c
  6598   0008C2  6E27               	movwf	___fldiv@aexp^0,c
  6599   0008C4  AE15               	btfss	(___fldiv@a+2)^0,7,c
  6600   0008C6  EF67  F004         	goto	u2161
  6601   0008CA  EF69  F004         	goto	u2160
  6602   0008CE                     u2161:
  6603   0008CE  EF6A  F004         	goto	l3280
  6604   0008D2                     u2160:
  6605   0008D2  8027               	bsf	___fldiv@aexp^0,0,c
  6606   0008D4                     l3280:
  6607   0008D4  5027               	movf	___fldiv@aexp^0,w,c
  6608   0008D6  B4D8               	btfsc	status,2,c
  6609   0008D8  EF70  F004         	goto	u2171
  6610   0008DC  EF72  F004         	goto	u2170
  6611   0008E0                     u2171:
  6612   0008E0  EF87  F004         	goto	l3290
  6613   0008E4                     u2170:
  6614   0008E4  2827               	incf	___fldiv@aexp^0,w,c
  6615   0008E6  A4D8               	btfss	status,2,c
  6616   0008E8  EF78  F004         	goto	u2181
  6617   0008EC  EF7A  F004         	goto	u2180
  6618   0008F0                     u2181:
  6619   0008F0  EF82  F004         	goto	l3286
  6620   0008F4                     u2180:
  6621   0008F4  0E00               	movlw	0
  6622   0008F6  6E13               	movwf	___fldiv@a^0,c
  6623   0008F8  0E00               	movlw	0
  6624   0008FA  6E14               	movwf	(___fldiv@a+1)^0,c
  6625   0008FC  0E00               	movlw	0
  6626   0008FE  6E15               	movwf	(___fldiv@a+2)^0,c
  6627   000900  0E00               	movlw	0
  6628   000902  6E16               	movwf	(___fldiv@a+3)^0,c
  6629   000904                     l3286:
  6630   000904  8E15               	bsf	(___fldiv@a+2)^0,7,c
  6631   000906  0E00               	movlw	0
  6632   000908  6E16               	movwf	(___fldiv@a+3)^0,c
  6633   00090A  EF8F  F004         	goto	l3292
  6634   00090E                     l3290:
  6635   00090E  0E00               	movlw	0
  6636   000910  6E13               	movwf	___fldiv@a^0,c
  6637   000912  0E00               	movlw	0
  6638   000914  6E14               	movwf	(___fldiv@a+1)^0,c
  6639   000916  0E00               	movlw	0
  6640   000918  6E15               	movwf	(___fldiv@a+2)^0,c
  6641   00091A  0E00               	movlw	0
  6642   00091C  6E16               	movwf	(___fldiv@a+3)^0,c
  6643   00091E                     l3292:
  6644   00091E  5013               	movf	___fldiv@a^0,w,c
  6645   000920  1014               	iorwf	(___fldiv@a+1)^0,w,c
  6646   000922  1015               	iorwf	(___fldiv@a+2)^0,w,c
  6647   000924  1016               	iorwf	(___fldiv@a+3)^0,w,c
  6648   000926  A4D8               	btfss	status,2,c
  6649   000928  EF98  F004         	goto	u2191
  6650   00092C  EF9A  F004         	goto	u2190
  6651   000930                     u2191:
  6652   000930  EFB2  F004         	goto	l3304
  6653   000934                     u2190:
  6654   000934  0E00               	movlw	0
  6655   000936  6E0F               	movwf	___fldiv@b^0,c
  6656   000938  0E00               	movlw	0
  6657   00093A  6E10               	movwf	(___fldiv@b+1)^0,c
  6658   00093C  0E00               	movlw	0
  6659   00093E  6E11               	movwf	(___fldiv@b+2)^0,c
  6660   000940  0E00               	movlw	0
  6661   000942  6E12               	movwf	(___fldiv@b+3)^0,c
  6662   000944  0E80               	movlw	128
  6663   000946  1211               	iorwf	(___fldiv@b+2)^0,f,c
  6664   000948  0E7F               	movlw	127
  6665   00094A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6666   00094C                     l3298:
  6667   00094C  501F               	movf	___fldiv@sign^0,w,c
  6668   00094E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6669   000950  C00F  F00F         	movff	___fldiv@b,?___fldiv
  6670   000954  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  6671   000958  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  6672   00095C  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  6673   000960  EFF5  F005         	goto	l1318
  6674   000964                     l3304:
  6675   000964  5026               	movf	___fldiv@bexp^0,w,c
  6676   000966  A4D8               	btfss	status,2,c
  6677   000968  EFB8  F004         	goto	u2201
  6678   00096C  EFBA  F004         	goto	u2200
  6679   000970                     u2201:
  6680   000970  EFC4  F004         	goto	l3312
  6681   000974                     u2200:
  6682   000974  0E00               	movlw	0
  6683   000976  6E0F               	movwf	?___fldiv^0,c
  6684   000978  0E00               	movlw	0
  6685   00097A  6E10               	movwf	(?___fldiv+1)^0,c
  6686   00097C  0E00               	movlw	0
  6687   00097E  6E11               	movwf	(?___fldiv+2)^0,c
  6688   000980  0E00               	movlw	0
  6689   000982  6E12               	movwf	(?___fldiv+3)^0,c
  6690   000984  EFF5  F005         	goto	l1318
  6691   000988                     l3312:
  6692   000988  5027               	movf	___fldiv@aexp^0,w,c
  6693   00098A  C026  F017         	movff	___fldiv@bexp,??___fldiv
  6694   00098E  6A18               	clrf	(??___fldiv+1)^0,c
  6695   000990  5E17               	subwf	??___fldiv^0,f,c
  6696   000992  0E00               	movlw	0
  6697   000994  5A18               	subwfb	(??___fldiv+1)^0,f,c
  6698   000996  0E7F               	movlw	127
  6699   000998  2417               	addwf	??___fldiv^0,w,c
  6700   00099A  6E20               	movwf	___fldiv@new_exp^0,c
  6701   00099C  0E00               	movlw	0
  6702   00099E  2018               	addwfc	(??___fldiv+1)^0,w,c
  6703   0009A0  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6704   0009A2  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  6705   0009A6  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  6706   0009AA  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  6707   0009AE  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  6708   0009B2  0E00               	movlw	0
  6709   0009B4  6E0F               	movwf	___fldiv@b^0,c
  6710   0009B6  0E00               	movlw	0
  6711   0009B8  6E10               	movwf	(___fldiv@b+1)^0,c
  6712   0009BA  0E00               	movlw	0
  6713   0009BC  6E11               	movwf	(___fldiv@b+2)^0,c
  6714   0009BE  0E00               	movlw	0
  6715   0009C0  6E12               	movwf	(___fldiv@b+3)^0,c
  6716   0009C2  0E00               	movlw	0
  6717   0009C4  6E22               	movwf	___fldiv@grs^0,c
  6718   0009C6  0E00               	movlw	0
  6719   0009C8  6E23               	movwf	(___fldiv@grs+1)^0,c
  6720   0009CA  0E00               	movlw	0
  6721   0009CC  6E24               	movwf	(___fldiv@grs+2)^0,c
  6722   0009CE  0E00               	movlw	0
  6723   0009D0  6E25               	movwf	(___fldiv@grs+3)^0,c
  6724   0009D2  0E00               	movlw	0
  6725   0009D4  6E27               	movwf	___fldiv@aexp^0,c
  6726   0009D6  EF25  F005         	goto	l1320
  6727   0009DA                     l3322:
  6728   0009DA  5027               	movf	___fldiv@aexp^0,w,c
  6729   0009DC  B4D8               	btfsc	status,2,c
  6730   0009DE  EFF3  F004         	goto	u2211
  6731   0009E2  EFF5  F004         	goto	u2210
  6732   0009E6                     u2211:
  6733   0009E6  EF0C  F005         	goto	l3330
  6734   0009EA                     u2210:
  6735   0009EA  90D8               	bcf	status,0,c
  6736   0009EC  361B               	rlcf	___fldiv@rem^0,f,c
  6737   0009EE  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  6738   0009F0  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  6739   0009F2  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  6740   0009F4  90D8               	bcf	status,0,c
  6741   0009F6  360F               	rlcf	___fldiv@b^0,f,c
  6742   0009F8  3610               	rlcf	(___fldiv@b+1)^0,f,c
  6743   0009FA  3611               	rlcf	(___fldiv@b+2)^0,f,c
  6744   0009FC  3612               	rlcf	(___fldiv@b+3)^0,f,c
  6745   0009FE  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6746   000A00  EF04  F005         	goto	u2221
  6747   000A04  EF06  F005         	goto	u2220
  6748   000A08                     u2221:
  6749   000A08  EF07  F005         	goto	l1323
  6750   000A0C                     u2220:
  6751   000A0C  800F               	bsf	___fldiv@b^0,0,c
  6752   000A0E                     l1323:
  6753   000A0E  90D8               	bcf	status,0,c
  6754   000A10  3622               	rlcf	___fldiv@grs^0,f,c
  6755   000A12  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  6756   000A14  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  6757   000A16  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  6758   000A18                     l3330:
  6759   000A18  5013               	movf	___fldiv@a^0,w,c
  6760   000A1A  5C1B               	subwf	___fldiv@rem^0,w,c
  6761   000A1C  5014               	movf	(___fldiv@a+1)^0,w,c
  6762   000A1E  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  6763   000A20  5015               	movf	(___fldiv@a+2)^0,w,c
  6764   000A22  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  6765   000A24  5016               	movf	(___fldiv@a+3)^0,w,c
  6766   000A26  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  6767   000A28  A0D8               	btfss	status,0,c
  6768   000A2A  EF19  F005         	goto	u2231
  6769   000A2E  EF1B  F005         	goto	u2230
  6770   000A32                     u2231:
  6771   000A32  EF24  F005         	goto	l3336
  6772   000A36                     u2230:
  6773   000A36  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  6774   000A38  5013               	movf	___fldiv@a^0,w,c
  6775   000A3A  5E1B               	subwf	___fldiv@rem^0,f,c
  6776   000A3C  5014               	movf	(___fldiv@a+1)^0,w,c
  6777   000A3E  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  6778   000A40  5015               	movf	(___fldiv@a+2)^0,w,c
  6779   000A42  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  6780   000A44  5016               	movf	(___fldiv@a+3)^0,w,c
  6781   000A46  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  6782   000A48                     l3336:
  6783   000A48  2A27               	incf	___fldiv@aexp^0,f,c
  6784   000A4A                     l1320:
  6785   000A4A  0E19               	movlw	25
  6786   000A4C  6427               	cpfsgt	___fldiv@aexp^0,c
  6787   000A4E  EF2B  F005         	goto	u2241
  6788   000A52  EF2D  F005         	goto	u2240
  6789   000A56                     u2241:
  6790   000A56  EFED  F004         	goto	l3322
  6791   000A5A                     u2240:
  6792   000A5A  501B               	movf	___fldiv@rem^0,w,c
  6793   000A5C  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  6794   000A5E  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  6795   000A60  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  6796   000A62  B4D8               	btfsc	status,2,c
  6797   000A64  EF36  F005         	goto	u2251
  6798   000A68  EF38  F005         	goto	u2250
  6799   000A6C                     u2251:
  6800   000A6C  EF50  F005         	goto	l3348
  6801   000A70                     u2250:
  6802   000A70  8022               	bsf	___fldiv@grs^0,0,c
  6803   000A72  EF50  F005         	goto	l3348
  6804   000A76                     l3342:
  6805   000A76  90D8               	bcf	status,0,c
  6806   000A78  360F               	rlcf	___fldiv@b^0,f,c
  6807   000A7A  3610               	rlcf	(___fldiv@b+1)^0,f,c
  6808   000A7C  3611               	rlcf	(___fldiv@b+2)^0,f,c
  6809   000A7E  3612               	rlcf	(___fldiv@b+3)^0,f,c
  6810   000A80  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6811   000A82  EF45  F005         	goto	u2261
  6812   000A86  EF47  F005         	goto	u2260
  6813   000A8A                     u2261:
  6814   000A8A  EF48  F005         	goto	l1329
  6815   000A8E                     u2260:
  6816   000A8E  800F               	bsf	___fldiv@b^0,0,c
  6817   000A90                     l1329:
  6818   000A90  90D8               	bcf	status,0,c
  6819   000A92  3622               	rlcf	___fldiv@grs^0,f,c
  6820   000A94  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  6821   000A96  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  6822   000A98  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  6823   000A9A  0620               	decf	___fldiv@new_exp^0,f,c
  6824   000A9C  A0D8               	btfss	status,0,c
  6825   000A9E  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  6826   000AA0                     l3348:
  6827   000AA0  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6828   000AA2  EF55  F005         	goto	u2271
  6829   000AA6  EF57  F005         	goto	u2270
  6830   000AAA                     u2271:
  6831   000AAA  EF3B  F005         	goto	l3342
  6832   000AAE                     u2270:
  6833   000AAE  0E00               	movlw	0
  6834   000AB0  6E27               	movwf	___fldiv@aexp^0,c
  6835   000AB2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6836   000AB4  EF5E  F005         	goto	u2281
  6837   000AB8  EF60  F005         	goto	u2280
  6838   000ABC                     u2281:
  6839   000ABC  EF84  F005         	goto	l1331
  6840   000AC0                     u2280:
  6841   000AC0  0EFF               	movlw	255
  6842   000AC2  1422               	andwf	___fldiv@grs^0,w,c
  6843   000AC4  6E17               	movwf	??___fldiv^0,c
  6844   000AC6  0EFF               	movlw	255
  6845   000AC8  1423               	andwf	(___fldiv@grs+1)^0,w,c
  6846   000ACA  6E18               	movwf	(??___fldiv+1)^0,c
  6847   000ACC  0EFF               	movlw	255
  6848   000ACE  1424               	andwf	(___fldiv@grs+2)^0,w,c
  6849   000AD0  6E19               	movwf	(??___fldiv+2)^0,c
  6850   000AD2  0E7F               	movlw	127
  6851   000AD4  1425               	andwf	(___fldiv@grs+3)^0,w,c
  6852   000AD6  6E1A               	movwf	(??___fldiv+3)^0,c
  6853   000AD8  5017               	movf	??___fldiv^0,w,c
  6854   000ADA  1018               	iorwf	(??___fldiv+1)^0,w,c
  6855   000ADC  1019               	iorwf	(??___fldiv+2)^0,w,c
  6856   000ADE  101A               	iorwf	(??___fldiv+3)^0,w,c
  6857   000AE0  B4D8               	btfsc	status,2,c
  6858   000AE2  EF75  F005         	goto	u2291
  6859   000AE6  EF77  F005         	goto	u2290
  6860   000AEA                     u2291:
  6861   000AEA  EF7B  F005         	goto	l1332
  6862   000AEE                     u2290:
  6863   000AEE                     l3356:
  6864   000AEE  0E01               	movlw	1
  6865   000AF0  6E27               	movwf	___fldiv@aexp^0,c
  6866   000AF2  EF84  F005         	goto	l1331
  6867   000AF6                     l1332:
  6868   000AF6  A00F               	btfss	___fldiv@b^0,0,c
  6869   000AF8  EF80  F005         	goto	u2301
  6870   000AFC  EF82  F005         	goto	u2300
  6871   000B00                     u2301:
  6872   000B00  EF84  F005         	goto	l1331
  6873   000B04                     u2300:
  6874   000B04  EF77  F005         	goto	l3356
  6875   000B08                     l1331:
  6876   000B08  5027               	movf	___fldiv@aexp^0,w,c
  6877   000B0A  B4D8               	btfsc	status,2,c
  6878   000B0C  EF8A  F005         	goto	u2311
  6879   000B10  EF8C  F005         	goto	u2310
  6880   000B14                     u2311:
  6881   000B14  EFB0  F005         	goto	l3368
  6882   000B18                     u2310:
  6883   000B18  0E01               	movlw	1
  6884   000B1A  260F               	addwf	___fldiv@b^0,f,c
  6885   000B1C  0E00               	movlw	0
  6886   000B1E  2210               	addwfc	(___fldiv@b+1)^0,f,c
  6887   000B20  2211               	addwfc	(___fldiv@b+2)^0,f,c
  6888   000B22  2212               	addwfc	(___fldiv@b+3)^0,f,c
  6889   000B24  A012               	btfss	(___fldiv@b+3)^0,0,c
  6890   000B26  EF97  F005         	goto	u2321
  6891   000B2A  EF99  F005         	goto	u2320
  6892   000B2E                     u2321:
  6893   000B2E  EFB0  F005         	goto	l3368
  6894   000B32                     u2320:
  6895   000B32  C00F  F017         	movff	___fldiv@b,??___fldiv
  6896   000B36  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  6897   000B3A  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  6898   000B3E  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  6899   000B42  341A               	rlcf	(??___fldiv+3)^0,w,c
  6900   000B44  321A               	rrcf	(??___fldiv+3)^0,f,c
  6901   000B46  3219               	rrcf	(??___fldiv+2)^0,f,c
  6902   000B48  3218               	rrcf	(??___fldiv+1)^0,f,c
  6903   000B4A  3217               	rrcf	??___fldiv^0,f,c
  6904   000B4C  C017  F00F         	movff	??___fldiv,___fldiv@b
  6905   000B50  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  6906   000B54  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  6907   000B58  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  6908   000B5C  4A20               	infsnz	___fldiv@new_exp^0,f,c
  6909   000B5E  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  6910   000B60                     l3368:
  6911   000B60  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6912   000B62  EFBB  F005         	goto	u2331
  6913   000B66  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  6914   000B68  E108               	bnz	u2330
  6915   000B6A  2820               	incf	___fldiv@new_exp^0,w,c
  6916   000B6C  A0D8               	btfss	status,0,c
  6917   000B6E  EFBB  F005         	goto	u2331
  6918   000B72  EFBD  F005         	goto	u2330
  6919   000B76                     u2331:
  6920   000B76  EFC8  F005         	goto	l3372
  6921   000B7A                     u2330:
  6922   000B7A  0E00               	movlw	0
  6923   000B7C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6924   000B7E  6820               	setf	___fldiv@new_exp^0,c
  6925   000B80  0E00               	movlw	0
  6926   000B82  6E0F               	movwf	___fldiv@b^0,c
  6927   000B84  0E00               	movlw	0
  6928   000B86  6E10               	movwf	(___fldiv@b+1)^0,c
  6929   000B88  0E00               	movlw	0
  6930   000B8A  6E11               	movwf	(___fldiv@b+2)^0,c
  6931   000B8C  0E00               	movlw	0
  6932   000B8E  6E12               	movwf	(___fldiv@b+3)^0,c
  6933   000B90                     l3372:
  6934   000B90  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6935   000B92  EFD5  F005         	goto	u2340
  6936   000B96  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  6937   000B98  E106               	bnz	u2341
  6938   000B9A  0420               	decf	___fldiv@new_exp^0,w,c
  6939   000B9C  B0D8               	btfsc	status,0,c
  6940   000B9E  EFD3  F005         	goto	u2341
  6941   000BA2  EFD5  F005         	goto	u2340
  6942   000BA6                     u2341:
  6943   000BA6  EFE3  F005         	goto	l3376
  6944   000BAA                     u2340:
  6945   000BAA  0E00               	movlw	0
  6946   000BAC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6947   000BAE  0E00               	movlw	0
  6948   000BB0  6E20               	movwf	___fldiv@new_exp^0,c
  6949   000BB2  0E00               	movlw	0
  6950   000BB4  6E0F               	movwf	___fldiv@b^0,c
  6951   000BB6  0E00               	movlw	0
  6952   000BB8  6E10               	movwf	(___fldiv@b+1)^0,c
  6953   000BBA  0E00               	movlw	0
  6954   000BBC  6E11               	movwf	(___fldiv@b+2)^0,c
  6955   000BBE  0E00               	movlw	0
  6956   000BC0  6E12               	movwf	(___fldiv@b+3)^0,c
  6957   000BC2  0E00               	movlw	0
  6958   000BC4  6E1F               	movwf	___fldiv@sign^0,c
  6959   000BC6                     l3376:
  6960   000BC6  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  6961   000BCA  A026               	btfss	___fldiv@bexp^0,0,c
  6962   000BCC  EFEA  F005         	goto	u2351
  6963   000BD0  EFEC  F005         	goto	u2350
  6964   000BD4                     u2351:
  6965   000BD4  EFEF  F005         	goto	l3382
  6966   000BD8                     u2350:
  6967   000BD8  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6968   000BDA  EFF0  F005         	goto	l3384
  6969   000BDE                     l3382:
  6970   000BDE  9E11               	bcf	(___fldiv@b+2)^0,7,c
  6971   000BE0                     l3384:
  6972   000BE0  90D8               	bcf	status,0,c
  6973   000BE2  3026               	rrcf	___fldiv@bexp^0,w,c
  6974   000BE4  6E12               	movwf	(___fldiv@b+3)^0,c
  6975   000BE6  EFA6  F004         	goto	l3298
  6976   000BEA                     l1318:
  6977   000BEA  0012               	return		;funcret
  6978   000BEC                     __end_of___fldiv:
  6979                           	callstack 0
  6980                           
  6981 ;; *************** function _get_time *****************
  6982 ;; Defined at:
  6983 ;;		line 78 in file "blackbox.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;		None
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;		None
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, status,2, status,0, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6997 ;;      Params:         0       0       0       0       0       0       0
  6998 ;;      Locals:         0       0       0       0       0       0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0
  7000 ;;      Totals:         0       0       0       0       0       0       0
  7001 ;;Total ram usage:        0 bytes
  7002 ;; Hardware stack levels used: 1
  7003 ;; Hardware stack levels required when called: 5
  7004 ;; This function calls:
  7005 ;;		_read_ds1307
  7006 ;; This function is called by:
  7007 ;;		_default_screen
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text31
  7012   001DD4                     __ptext31:
  7013                           	callstack 0
  7014   001DD4                     _get_time:
  7015                           	callstack 24
  7016   001DD4                     
  7017                           ;blackbox.c: 79:     clock_reg[0] = read_ds1307(0x02);
  7018   001DD4  0E02               	movlw	2
  7019   001DD6  EC53  F012         	call	_read_ds1307
  7020   001DDA  0100               	movlb	0	; () banked
  7021   001DDC  6F71               	movwf	_clock_reg& (0+255),b
  7022                           
  7023                           ;blackbox.c: 80:     clock_reg[1] = read_ds1307(0x01);
  7024   001DDE  0E01               	movlw	1
  7025   001DE0  EC53  F012         	call	_read_ds1307
  7026   001DE4  0100               	movlb	0	; () banked
  7027   001DE6  6F72               	movwf	(_clock_reg+1)& (0+255),b
  7028                           
  7029                           ;blackbox.c: 81:     clock_reg[2] = read_ds1307(0x00);
  7030   001DE8  0E00               	movlw	0
  7031   001DEA  EC53  F012         	call	_read_ds1307
  7032   001DEE  0100               	movlb	0	; () banked
  7033   001DF0  6F73               	movwf	(_clock_reg+2)& (0+255),b
  7034   001DF2                     
  7035                           ; BSR set to: 0
  7036                           ;blackbox.c: 83:     if (clock_reg[0] & 0x40) {
  7037   001DF2  AD71               	btfss	_clock_reg& (0+255),6,b
  7038   001DF4  EFFE  F00E         	goto	u2731
  7039   001DF8  EF00  F00F         	goto	u2730
  7040   001DFC                     u2731:
  7041   001DFC  EF0B  F00F         	goto	l3692
  7042   001E00                     u2730:
  7043   001E00                     
  7044                           ; BSR set to: 0
  7045                           ;blackbox.c: 84:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  7046   001E00  3971               	swapf	_clock_reg& (0+255),w,b
  7047   001E02  0B0F               	andlw	15
  7048   001E04  0B01               	andlw	1
  7049   001E06  0F30               	addlw	48
  7050   001E08  6FE0               	movwf	_time& (0+255),b
  7051                           
  7052                           ;blackbox.c: 85:         time[1] = '0' + (clock_reg[0] & 0x0F);
  7053   001E0A  5171               	movf	_clock_reg& (0+255),w,b
  7054   001E0C  0B0F               	andlw	15
  7055   001E0E  0F30               	addlw	48
  7056   001E10  6FE1               	movwf	(_time+1)& (0+255),b
  7057                           
  7058                           ;blackbox.c: 86:     } else {
  7059   001E12  EF14  F00F         	goto	l3694
  7060   001E16                     l3692:
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;blackbox.c: 87:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  7064   001E16  3971               	swapf	_clock_reg& (0+255),w,b
  7065   001E18  0B0F               	andlw	15
  7066   001E1A  0B03               	andlw	3
  7067   001E1C  0F30               	addlw	48
  7068   001E1E  6FE0               	movwf	_time& (0+255),b
  7069                           
  7070                           ;blackbox.c: 88:         time[1] = '0' + (clock_reg[0] & 0x0F);
  7071   001E20  5171               	movf	_clock_reg& (0+255),w,b
  7072   001E22  0B0F               	andlw	15
  7073   001E24  0F30               	addlw	48
  7074   001E26  6FE1               	movwf	(_time+1)& (0+255),b
  7075   001E28                     l3694:
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;blackbox.c: 90:     time[2] = ':';
  7079   001E28  0E3A               	movlw	58
  7080   001E2A  6FE2               	movwf	(_time+2)& (0+255),b
  7081   001E2C                     
  7082                           ; BSR set to: 0
  7083                           ;blackbox.c: 91:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  7084   001E2C  3972               	swapf	(_clock_reg+1)& (0+255),w,b
  7085   001E2E  0B0F               	andlw	15
  7086   001E30  0B0F               	andlw	15
  7087   001E32  0F30               	addlw	48
  7088   001E34  6FE3               	movwf	(_time+3)& (0+255),b
  7089   001E36                     
  7090                           ; BSR set to: 0
  7091                           ;blackbox.c: 92:     time[4] = '0' + (clock_reg[1] & 0x0F);
  7092   001E36  5172               	movf	(_clock_reg+1)& (0+255),w,b
  7093   001E38  0B0F               	andlw	15
  7094   001E3A  0F30               	addlw	48
  7095   001E3C  6FE4               	movwf	(_time+4)& (0+255),b
  7096   001E3E                     
  7097                           ; BSR set to: 0
  7098                           ;blackbox.c: 93:     time[5] = ':';
  7099   001E3E  0E3A               	movlw	58
  7100   001E40  6FE5               	movwf	(_time+5)& (0+255),b
  7101                           
  7102                           ;blackbox.c: 94:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  7103   001E42  3973               	swapf	(_clock_reg+2)& (0+255),w,b
  7104   001E44  0B0F               	andlw	15
  7105   001E46  0B0F               	andlw	15
  7106   001E48  0F30               	addlw	48
  7107   001E4A  6FE6               	movwf	(_time+6)& (0+255),b
  7108                           
  7109                           ;blackbox.c: 95:     time[7] = '0' + (clock_reg[2] & 0x0F);
  7110   001E4C  5173               	movf	(_clock_reg+2)& (0+255),w,b
  7111   001E4E  0B0F               	andlw	15
  7112   001E50  0F30               	addlw	48
  7113   001E52  6FE7               	movwf	(_time+7)& (0+255),b
  7114   001E54                     
  7115                           ; BSR set to: 0
  7116                           ;blackbox.c: 96:     time[8] = '\0';
  7117   001E54  0E00               	movlw	0
  7118   001E56  6FE8               	movwf	(_time+8)& (0+255),b
  7119   001E58                     
  7120                           ; BSR set to: 0
  7121   001E58  0012               	return		;funcret
  7122   001E5A                     __end_of_get_time:
  7123                           	callstack 0
  7124                           
  7125 ;; *************** function _read_ds1307 *****************
  7126 ;; Defined at:
  7127 ;;		line 53 in file "ds1307.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  address         1    wreg     unsigned char 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;  address         1    1[COMRAM] unsigned char 
  7132 ;;  data            1    2[COMRAM] unsigned char 
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      unsigned char 
  7135 ;; Registers used:
  7136 ;;		wreg, status,2, cstack
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7142 ;;      Params:         0       0       0       0       0       0       0
  7143 ;;      Locals:         2       0       0       0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0       0       0
  7145 ;;      Totals:         2       0       0       0       0       0       0
  7146 ;;Total ram usage:        2 bytes
  7147 ;; Hardware stack levels used: 1
  7148 ;; Hardware stack levels required when called: 4
  7149 ;; This function calls:
  7150 ;;		_i2c_read
  7151 ;;		_i2c_rep_start
  7152 ;;		_i2c_start
  7153 ;;		_i2c_stop
  7154 ;;		_i2c_write
  7155 ;; This function is called by:
  7156 ;;		_get_time
  7157 ;;		_init_ds1307
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text32
  7162   0024A6                     __ptext32:
  7163                           	callstack 0
  7164   0024A6                     _read_ds1307:
  7165                           	callstack 24
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;incstack = 0
  7169                           ;read_ds1307@address stored from wreg
  7170   0024A6  6E02               	movwf	read_ds1307@address^0,c
  7171   0024A8                     
  7172                           ;ds1307.c: 53: unsigned char read_ds1307(unsigned char address);ds1307.c: 54: {;ds1307.c
      +                          : 55:  unsigned char data;;ds1307.c: 57:  i2c_start();
  7173   0024A8  ECFA  F012         	call	_i2c_start	;wreg free
  7174   0024AC                     
  7175                           ;ds1307.c: 58:  i2c_write(0xD0);
  7176   0024AC  0ED0               	movlw	208
  7177   0024AE  ECE4  F012         	call	_i2c_write
  7178   0024B2                     
  7179                           ;ds1307.c: 59:  i2c_write(address);
  7180   0024B2  5002               	movf	read_ds1307@address^0,w,c
  7181   0024B4  ECE4  F012         	call	_i2c_write
  7182   0024B8                     
  7183                           ;ds1307.c: 60:  i2c_rep_start();
  7184   0024B8  ECEA  F012         	call	_i2c_rep_start	;wreg free
  7185   0024BC                     
  7186                           ;ds1307.c: 61:  i2c_write(0xD1);
  7187   0024BC  0ED1               	movlw	209
  7188   0024BE  ECE4  F012         	call	_i2c_write
  7189                           
  7190                           ;ds1307.c: 62:  data = i2c_read();
  7191   0024C2  ECEE  F012         	call	_i2c_read	;wreg free
  7192   0024C6  6E03               	movwf	read_ds1307@data^0,c
  7193   0024C8                     
  7194                           ;ds1307.c: 63:  i2c_stop();
  7195   0024C8  ECF6  F012         	call	_i2c_stop	;wreg free
  7196                           
  7197                           ;ds1307.c: 65:  return data;
  7198   0024CC  5003               	movf	read_ds1307@data^0,w,c
  7199   0024CE  0012               	return		;funcret
  7200   0024D0                     __end_of_read_ds1307:
  7201                           	callstack 0
  7202                           
  7203 ;; *************** function _event *****************
  7204 ;; Defined at:
  7205 ;;		line 205 in file "blackbox.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;  key             1    wreg     unsigned char 
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;  key             1   11[COMRAM] unsigned char 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7219 ;;      Params:         0       0       0       0       0       0       0
  7220 ;;      Locals:         1       0       0       0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0
  7222 ;;      Totals:         1       0       0       0       0       0       0
  7223 ;;Total ram usage:        1 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; Hardware stack levels required when called: 6
  7226 ;; This function calls:
  7227 ;;		_car_log
  7228 ;;		_clcd_print
  7229 ;; This function is called by:
  7230 ;;		_default_screen
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text33
  7235   00126A                     __ptext33:
  7236                           	callstack 0
  7237   00126A                     _event:
  7238                           	callstack 23
  7239                           
  7240                           ;incstack = 0
  7241                           ;event@key stored from wreg
  7242   00126A  6E0C               	movwf	event@key^0,c
  7243   00126C                     
  7244                           ;blackbox.c: 206:     if (flag == 0) {
  7245   00126C  504B               	movf	_flag^0,w,c
  7246   00126E  104C               	iorwf	(_flag+1)^0,w,c
  7247   001270  A4D8               	btfss	status,2,c
  7248   001272  EF3D  F009         	goto	u2741
  7249   001276  EF3F  F009         	goto	u2740
  7250   00127A                     u2741:
  7251   00127A  EF4D  F009         	goto	l3718
  7252   00127E                     u2740:
  7253   00127E                     
  7254                           ;blackbox.c: 207:         clcd_print(arr[0], (0xC0 + (10)));
  7255   00127E  C0B2  F003         	movff	_arr,clcd_print@data
  7256   001282  C0B3  F004         	movff	_arr+1,clcd_print@data+1
  7257   001286  0ECA               	movlw	202
  7258   001288  6E05               	movwf	clcd_print@addr^0,c
  7259   00128A  EC8C  F010         	call	_clcd_print	;wreg free
  7260   00128E                     
  7261                           ;blackbox.c: 208:         flag = 1;
  7262   00128E  0E00               	movlw	0
  7263   001290  6E4C               	movwf	(_flag+1)^0,c
  7264   001292  0E01               	movlw	1
  7265   001294  6E4B               	movwf	_flag^0,c
  7266   001296                     
  7267                           ;blackbox.c: 209:         car_log();
  7268   001296  EC89  F00D         	call	_car_log	;wreg free
  7269   00129A                     l3718:
  7270                           
  7271                           ;blackbox.c: 212:     if (key == 2 && flag == 1) {
  7272   00129A  0E02               	movlw	2
  7273   00129C  180C               	xorwf	event@key^0,w,c
  7274   00129E  A4D8               	btfss	status,2,c
  7275   0012A0  EF54  F009         	goto	u2751
  7276   0012A4  EF56  F009         	goto	u2750
  7277   0012A8                     u2751:
  7278   0012A8  EF73  F009         	goto	l3730
  7279   0012AC                     u2750:
  7280   0012AC  044B               	decf	_flag^0,w,c
  7281   0012AE  104C               	iorwf	(_flag+1)^0,w,c
  7282   0012B0  A4D8               	btfss	status,2,c
  7283   0012B2  EF5D  F009         	goto	u2761
  7284   0012B6  EF5F  F009         	goto	u2760
  7285   0012BA                     u2761:
  7286   0012BA  EF73  F009         	goto	l3730
  7287   0012BE                     u2760:
  7288   0012BE                     
  7289                           ;blackbox.c: 213:         if (i >= 0 && i < 7) {
  7290   0012BE  504E               	movf	(_i+1)^0,w,c
  7291   0012C0  E107               	bnz	u2771
  7292   0012C2  0E07               	movlw	7
  7293   0012C4  5C4D               	subwf	_i^0,w,c
  7294   0012C6  B0D8               	btfsc	status,0,c
  7295   0012C8  EF68  F009         	goto	u2771
  7296   0012CC  EF6A  F009         	goto	u2770
  7297   0012D0                     u2771:
  7298   0012D0  EF71  F009         	goto	l3728
  7299   0012D4                     u2770:
  7300   0012D4                     
  7301                           ;blackbox.c: 214:             cr = 0;
  7302   0012D4  0E00               	movlw	0
  7303   0012D6  0100               	movlb	0	; () banked
  7304   0012D8  6F9A               	movwf	(_cr+1)& (0+255),b
  7305   0012DA  0E00               	movlw	0
  7306   0012DC  6F99               	movwf	_cr& (0+255),b
  7307   0012DE                     
  7308                           ; BSR set to: 0
  7309                           ;blackbox.c: 215:             ++i;
  7310   0012DE  4A4D               	infsnz	_i^0,f,c
  7311   0012E0  2A4E               	incf	(_i+1)^0,f,c
  7312   0012E2                     l3728:
  7313                           
  7314                           ;blackbox.c: 217:         car_log();
  7315   0012E2  EC89  F00D         	call	_car_log	;wreg free
  7316   0012E6                     l3730:
  7317                           
  7318                           ;blackbox.c: 219:     if (key == 3 && flag == 1) {
  7319   0012E6  0E03               	movlw	3
  7320   0012E8  180C               	xorwf	event@key^0,w,c
  7321   0012EA  A4D8               	btfss	status,2,c
  7322   0012EC  EF7A  F009         	goto	u2781
  7323   0012F0  EF7C  F009         	goto	u2780
  7324   0012F4                     u2781:
  7325   0012F4  EF9A  F009         	goto	l3742
  7326   0012F8                     u2780:
  7327   0012F8  044B               	decf	_flag^0,w,c
  7328   0012FA  104C               	iorwf	(_flag+1)^0,w,c
  7329   0012FC  A4D8               	btfss	status,2,c
  7330   0012FE  EF83  F009         	goto	u2791
  7331   001302  EF85  F009         	goto	u2790
  7332   001306                     u2791:
  7333   001306  EF9A  F009         	goto	l3742
  7334   00130A                     u2790:
  7335   00130A                     
  7336                           ;blackbox.c: 220:         if (i > 1) {
  7337   00130A  504E               	movf	(_i+1)^0,w,c
  7338   00130C  E109               	bnz	u2800
  7339   00130E  0E02               	movlw	2
  7340   001310  5C4D               	subwf	_i^0,w,c
  7341   001312  A0D8               	btfss	status,0,c
  7342   001314  EF8E  F009         	goto	u2801
  7343   001318  EF90  F009         	goto	u2800
  7344   00131C                     u2801:
  7345   00131C  EF98  F009         	goto	l3740
  7346   001320                     u2800:
  7347   001320                     
  7348                           ;blackbox.c: 221:             --i;
  7349   001320  064D               	decf	_i^0,f,c
  7350   001322  A0D8               	btfss	status,0,c
  7351   001324  064E               	decf	(_i+1)^0,f,c
  7352   001326                     
  7353                           ;blackbox.c: 222:             cr = 0;
  7354   001326  0E00               	movlw	0
  7355   001328  0100               	movlb	0	; () banked
  7356   00132A  6F9A               	movwf	(_cr+1)& (0+255),b
  7357   00132C  0E00               	movlw	0
  7358   00132E  6F99               	movwf	_cr& (0+255),b
  7359   001330                     l3740:
  7360                           
  7361                           ;blackbox.c: 224:         car_log();
  7362   001330  EC89  F00D         	call	_car_log	;wreg free
  7363   001334                     l3742:
  7364                           
  7365                           ;blackbox.c: 226:     if (key == 1) {
  7366   001334  040C               	decf	event@key^0,w,c
  7367   001336  A4D8               	btfss	status,2,c
  7368   001338  EFA0  F009         	goto	u2811
  7369   00133C  EFA2  F009         	goto	u2810
  7370   001340                     u2811:
  7371   001340  EFB5  F009         	goto	l3752
  7372   001344                     u2810:
  7373   001344                     
  7374                           ;blackbox.c: 227:         clcd_print(arr[8], (0xC0 + (10)));
  7375   001344  C0C2  F003         	movff	_arr+16,clcd_print@data
  7376   001348  C0C3  F004         	movff	_arr+17,clcd_print@data+1
  7377   00134C  0ECA               	movlw	202
  7378   00134E  6E05               	movwf	clcd_print@addr^0,c
  7379   001350  EC8C  F010         	call	_clcd_print	;wreg free
  7380   001354                     
  7381                           ;blackbox.c: 228:         i = 8;
  7382   001354  0E00               	movlw	0
  7383   001356  6E4E               	movwf	(_i+1)^0,c
  7384   001358  0E08               	movlw	8
  7385   00135A  6E4D               	movwf	_i^0,c
  7386   00135C                     
  7387                           ;blackbox.c: 229:         cr = 1;
  7388   00135C  0E00               	movlw	0
  7389   00135E  0100               	movlb	0	; () banked
  7390   001360  6F9A               	movwf	(_cr+1)& (0+255),b
  7391   001362  0E01               	movlw	1
  7392   001364  6F99               	movwf	_cr& (0+255),b
  7393   001366                     
  7394                           ; BSR set to: 0
  7395                           ;blackbox.c: 230:         car_log();
  7396   001366  EC89  F00D         	call	_car_log	;wreg free
  7397   00136A                     l3752:
  7398                           
  7399                           ;blackbox.c: 232:     if (key == 3 && cr == 1) {
  7400   00136A  0E03               	movlw	3
  7401   00136C  180C               	xorwf	event@key^0,w,c
  7402   00136E  A4D8               	btfss	status,2,c
  7403   001370  EFBC  F009         	goto	u2821
  7404   001374  EFBE  F009         	goto	u2820
  7405   001378                     u2821:
  7406   001378  EFD0  F009         	goto	l3762
  7407   00137C                     u2820:
  7408   00137C  0100               	movlb	0	; () banked
  7409   00137E  0599               	decf	_cr& (0+255),w,b
  7410   001380  119A               	iorwf	(_cr+1)& (0+255),w,b
  7411   001382  A4D8               	btfss	status,2,c
  7412   001384  EFC6  F009         	goto	u2831
  7413   001388  EFC8  F009         	goto	u2830
  7414   00138C                     u2831:
  7415   00138C  EFD0  F009         	goto	l3762
  7416   001390                     u2830:
  7417   001390                     
  7418                           ; BSR set to: 0
  7419                           ;blackbox.c: 233:         ++i;
  7420   001390  4A4D               	infsnz	_i^0,f,c
  7421   001392  2A4E               	incf	(_i+1)^0,f,c
  7422   001394                     
  7423                           ; BSR set to: 0
  7424                           ;blackbox.c: 234:         cr = 0;
  7425   001394  0E00               	movlw	0
  7426   001396  6F9A               	movwf	(_cr+1)& (0+255),b
  7427   001398  0E00               	movlw	0
  7428   00139A  6F99               	movwf	_cr& (0+255),b
  7429   00139C                     
  7430                           ; BSR set to: 0
  7431                           ;blackbox.c: 235:         car_log();
  7432   00139C  EC89  F00D         	call	_car_log	;wreg free
  7433   0013A0                     l3762:
  7434                           
  7435                           ;blackbox.c: 237:     clcd_print(arr[i], (0xC0 + (10)));
  7436   0013A0  90D8               	bcf	status,0,c
  7437   0013A2  344D               	rlcf	_i^0,w,c
  7438   0013A4  6ED9               	movwf	fsr2l,c
  7439   0013A6  344E               	rlcf	(_i+1)^0,w,c
  7440   0013A8  6EDA               	movwf	fsr2h,c
  7441   0013AA  0EB2               	movlw	low _arr
  7442   0013AC  26D9               	addwf	fsr2l,f,c
  7443   0013AE  0E00               	movlw	high _arr
  7444   0013B0  22DA               	addwfc	fsr2h,f,c
  7445   0013B2  CFDE F003          	movff	postinc2,clcd_print@data
  7446   0013B6  CFDD F004          	movff	postdec2,clcd_print@data+1
  7447   0013BA  0ECA               	movlw	202
  7448   0013BC  6E05               	movwf	clcd_print@addr^0,c
  7449   0013BE  EC8C  F010         	call	_clcd_print	;wreg free
  7450   0013C2                     
  7451                           ;blackbox.c: 239:     if (i == 8 && (key == 2 || key == 3)) {
  7452   0013C2  0E08               	movlw	8
  7453   0013C4  184D               	xorwf	_i^0,w,c
  7454   0013C6  104E               	iorwf	(_i+1)^0,w,c
  7455   0013C8  A4D8               	btfss	status,2,c
  7456   0013CA  EFE9  F009         	goto	u2841
  7457   0013CE  EFEB  F009         	goto	u2840
  7458   0013D2                     u2841:
  7459   0013D2  EF01  F00A         	goto	l326
  7460   0013D6                     u2840:
  7461   0013D6  0E02               	movlw	2
  7462   0013D8  180C               	xorwf	event@key^0,w,c
  7463   0013DA  B4D8               	btfsc	status,2,c
  7464   0013DC  EFF2  F009         	goto	u2851
  7465   0013E0  EFF4  F009         	goto	u2850
  7466   0013E4                     u2851:
  7467   0013E4  EFFD  F009         	goto	l3770
  7468   0013E8                     u2850:
  7469   0013E8  0E03               	movlw	3
  7470   0013EA  180C               	xorwf	event@key^0,w,c
  7471   0013EC  A4D8               	btfss	status,2,c
  7472   0013EE  EFFB  F009         	goto	u2861
  7473   0013F2  EFFD  F009         	goto	u2860
  7474   0013F6                     u2861:
  7475   0013F6  EF01  F00A         	goto	l326
  7476   0013FA                     u2860:
  7477   0013FA                     l3770:
  7478                           
  7479                           ;blackbox.c: 240:         i = 1;
  7480   0013FA  0E00               	movlw	0
  7481   0013FC  6E4E               	movwf	(_i+1)^0,c
  7482   0013FE  0E01               	movlw	1
  7483   001400  6E4D               	movwf	_i^0,c
  7484   001402                     l326:
  7485   001402  0012               	return		;funcret
  7486   001404                     __end_of_event:
  7487                           	callstack 0
  7488                           
  7489 ;; *************** function _clear_log *****************
  7490 ;; Defined at:
  7491 ;;		line 523 in file "blackbox.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;		None
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  i               4    5[COMRAM] unsigned long 
  7496 ;;  i               2    9[COMRAM] int 
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  1    wreg      void 
  7499 ;; Registers used:
  7500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7506 ;;      Params:         0       0       0       0       0       0       0
  7507 ;;      Locals:         6       0       0       0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0
  7509 ;;      Totals:         6       0       0       0       0       0       0
  7510 ;;Total ram usage:        6 bytes
  7511 ;; Hardware stack levels used: 1
  7512 ;; Hardware stack levels required when called: 3
  7513 ;; This function calls:
  7514 ;;		_clcd_print
  7515 ;;		_clcd_write
  7516 ;; This function is called by:
  7517 ;;		_main
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text34
  7522   001BCA                     __ptext34:
  7523                           	callstack 0
  7524   001BCA                     _clear_log:
  7525                           	callstack 27
  7526   001BCA                     
  7527                           ;blackbox.c: 524:     clcd_write(0x01, 0);
  7528   001BCA  0E00               	movlw	0
  7529   001BCC  6E01               	movwf	clcd_write@control_bit^0,c
  7530   001BCE  0E01               	movlw	1
  7531   001BD0  ECEA  F011         	call	_clcd_write
  7532   001BD4                     
  7533                           ;blackbox.c: 525:     index = 0;
  7534   001BD4  0E00               	movlw	0
  7535   001BD6  6E3C               	movwf	(_index+1)^0,c
  7536   001BD8  0E00               	movlw	0
  7537   001BDA  6E3B               	movwf	_index^0,c
  7538   001BDC                     
  7539                           ;blackbox.c: 526:     overflow = 0;
  7540   001BDC  0E00               	movlw	0
  7541   001BDE  0100               	movlb	0	; () banked
  7542   001BE0  6F88               	movwf	(_overflow+1)& (0+255),b
  7543   001BE2  0E00               	movlw	0
  7544   001BE4  6F87               	movwf	_overflow& (0+255),b
  7545   001BE6                     
  7546                           ; BSR set to: 0
  7547                           ;blackbox.c: 527:     for (int i = 0; i < 17; i++) {
  7548   001BE6  0E00               	movlw	0
  7549   001BE8  6E0B               	movwf	(clear_log@i+1)^0,c
  7550   001BEA  0E00               	movlw	0
  7551   001BEC  6E0A               	movwf	clear_log@i^0,c
  7552   001BEE                     l4240:
  7553                           
  7554                           ;blackbox.c: 528:         log[i] = '\0';
  7555   001BEE  0E60               	movlw	low _log
  7556   001BF0  240A               	addwf	clear_log@i^0,w,c
  7557   001BF2  6ED9               	movwf	fsr2l,c
  7558   001BF4  0E00               	movlw	high _log
  7559   001BF6  200B               	addwfc	(clear_log@i+1)^0,w,c
  7560   001BF8  6EDA               	movwf	fsr2h,c
  7561   001BFA  6ADF               	clrf	indf2,c
  7562   001BFC                     
  7563                           ;blackbox.c: 529:     }
  7564   001BFC  4A0A               	infsnz	clear_log@i^0,f,c
  7565   001BFE  2A0B               	incf	(clear_log@i+1)^0,f,c
  7566   001C00  BE0B               	btfsc	(clear_log@i+1)^0,7,c
  7567   001C02  EF0C  F00E         	goto	u3561
  7568   001C06  500B               	movf	(clear_log@i+1)^0,w,c
  7569   001C08  E109               	bnz	u3560
  7570   001C0A  0E11               	movlw	17
  7571   001C0C  5C0A               	subwf	clear_log@i^0,w,c
  7572   001C0E  A0D8               	btfss	status,0,c
  7573   001C10  EF0C  F00E         	goto	u3561
  7574   001C14  EF0E  F00E         	goto	u3560
  7575   001C18                     u3561:
  7576   001C18  EFF7  F00D         	goto	l4240
  7577   001C1C                     u3560:
  7578   001C1C                     
  7579                           ;blackbox.c: 530:     clcd_print("   Logs Cleared   ", (0x80 + (0)));
  7580   001C1C  0E34               	movlw	low STR_39
  7581   001C1E  6E03               	movwf	clcd_print@data^0,c
  7582   001C20  0E2E               	movlw	high STR_39
  7583   001C22  6E04               	movwf	(clcd_print@data+1)^0,c
  7584   001C24  0E80               	movlw	128
  7585   001C26  6E05               	movwf	clcd_print@addr^0,c
  7586   001C28  EC8C  F010         	call	_clcd_print	;wreg free
  7587                           
  7588                           ;blackbox.c: 531:     clcd_print("<<.......>>", (0xC0 + (4)));
  7589   001C2C  0EA6               	movlw	low STR_40
  7590   001C2E  6E03               	movwf	clcd_print@data^0,c
  7591   001C30  0E2F               	movlw	high STR_40
  7592   001C32  6E04               	movwf	(clcd_print@data+1)^0,c
  7593   001C34  0EC4               	movlw	196
  7594   001C36  6E05               	movwf	clcd_print@addr^0,c
  7595   001C38  EC8C  F010         	call	_clcd_print	;wreg free
  7596   001C3C                     
  7597                           ;blackbox.c: 532:     for (unsigned long int i = 3000000; i--;);
  7598   001C3C  0EC0               	movlw	192
  7599   001C3E  6E06               	movwf	clear_log@i_398^0,c
  7600   001C40  0EC6               	movlw	198
  7601   001C42  6E07               	movwf	(clear_log@i_398+1)^0,c
  7602   001C44  0E2D               	movlw	45
  7603   001C46  6E08               	movwf	(clear_log@i_398+2)^0,c
  7604   001C48  0E00               	movlw	0
  7605   001C4A  6E09               	movwf	(clear_log@i_398+3)^0,c
  7606   001C4C                     l4250:
  7607   001C4C  0606               	decf	clear_log@i_398^0,f,c
  7608   001C4E  0E00               	movlw	0
  7609   001C50  5A07               	subwfb	(clear_log@i_398+1)^0,f,c
  7610   001C52  5A08               	subwfb	(clear_log@i_398+2)^0,f,c
  7611   001C54  5A09               	subwfb	(clear_log@i_398+3)^0,f,c
  7612   001C56  2806               	incf	clear_log@i_398^0,w,c
  7613   001C58  E10A               	bnz	u3571
  7614   001C5A  2807               	incf	(clear_log@i_398+1)^0,w,c
  7615   001C5C  E108               	bnz	u3571
  7616   001C5E  2808               	incf	(clear_log@i_398+2)^0,w,c
  7617   001C60  E106               	bnz	u3571
  7618   001C62  2809               	incf	(clear_log@i_398+3)^0,w,c
  7619   001C64  A4D8               	btfss	status,2,c
  7620   001C66  EF37  F00E         	goto	u3571
  7621   001C6A  EF39  F00E         	goto	u3570
  7622   001C6E                     u3571:
  7623   001C6E  EF26  F00E         	goto	l4250
  7624   001C72                     u3570:
  7625   001C72                     
  7626                           ;blackbox.c: 533:     screen_flag = 2;
  7627   001C72  0E00               	movlw	0
  7628   001C74  6E52               	movwf	(_screen_flag+1)^0,c
  7629   001C76  0E02               	movlw	2
  7630   001C78  6E51               	movwf	_screen_flag^0,c
  7631   001C7A  0012               	return		;funcret
  7632   001C7C                     __end_of_clear_log:
  7633                           	callstack 0
  7634                           
  7635 ;; *************** function _change_pass *****************
  7636 ;; Defined at:
  7637 ;;		line 613 in file "blackbox.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;		None
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  i               2    0        unsigned int 
  7642 ;;  i               8    0        unsigned long long 
  7643 ;;  i               2    0        unsigned int 
  7644 ;;  i               8    0        unsigned long long 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7654 ;;      Params:         0       0       0       0       0       0       0
  7655 ;;      Locals:         0       0       0       0       0       0       0
  7656 ;;      Temps:          0       0       0       0       0       0       0
  7657 ;;      Totals:         0       0       0       0       0       0       0
  7658 ;;Total ram usage:        0 bytes
  7659 ;; Hardware stack levels used: 1
  7660 ;; Hardware stack levels required when called: 6
  7661 ;; This function calls:
  7662 ;;		_car_log
  7663 ;;		_clcd_print
  7664 ;;		_clcd_putch
  7665 ;;		_clcd_write
  7666 ;;		_get_pass
  7667 ;;		_strcmp
  7668 ;;		_strncmp
  7669 ;;		_write_external_eeprom
  7670 ;; This function is called by:
  7671 ;;		_main
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           	psect	text35
  7676   00171E                     __ptext35:
  7677                           	callstack 0
  7678   00171E                     _change_pass:
  7679                           	callstack 24
  7680   00171E                     
  7681                           ;blackbox.c: 614:     static int attempt1;;blackbox.c: 615:     static char c = 0;;black
      +                          box.c: 617:         k = 0;
  7682   00171E  0E00               	movlw	0
  7683   001720  6E38               	movwf	(_k+1)^0,c
  7684   001722  0E00               	movlw	0
  7685   001724  6E37               	movwf	_k^0,c
  7686                           
  7687                           ;blackbox.c: 618:         attempt1 = 3;
  7688   001726  0E00               	movlw	0
  7689   001728  0100               	movlb	0	; () banked
  7690   00172A  6F7C               	movwf	(change_pass@attempt1+1)& (0+255),b
  7691   00172C  0E03               	movlw	3
  7692   00172E  6F7B               	movwf	change_pass@attempt1& (0+255),b
  7693                           
  7694                           ;blackbox.c: 619:         return_delay1 = 0;
  7695   001730  0E00               	movlw	0
  7696   001732  6F80               	movwf	(_return_delay1+1)& (0+255),b
  7697   001734  0E00               	movlw	0
  7698   001736  6F7F               	movwf	_return_delay1& (0+255),b
  7699                           
  7700                           ;blackbox.c: 621:         l = 0;
  7701   001738  0E00               	movlw	0
  7702   00173A  6E36               	movwf	(_l+1)^0,c
  7703   00173C  0E00               	movlw	0
  7704   00173E  6E35               	movwf	_l^0,c
  7705   001740                     
  7706                           ; BSR set to: 0
  7707                           ;blackbox.c: 622:         key = 0xFF;
  7708   001740  6854               	setf	_key^0,c
  7709                           
  7710                           ;blackbox.c: 623:        i = 12;
  7711   001742  0E00               	movlw	0
  7712   001744  6E4E               	movwf	(_i+1)^0,c
  7713   001746  0E0C               	movlw	12
  7714   001748  6E4D               	movwf	_i^0,c
  7715   00174A                     
  7716                           ; BSR set to: 0
  7717                           ;blackbox.c: 624:         car_log();
  7718   00174A  EC89  F00D         	call	_car_log	;wreg free
  7719   00174E                     
  7720                           ;blackbox.c: 625:         clcd_write(0x01, 0);
  7721   00174E  0E00               	movlw	0
  7722   001750  6E01               	movwf	clcd_write@control_bit^0,c
  7723   001752  0E01               	movlw	1
  7724   001754  ECEA  F011         	call	_clcd_write
  7725   001758                     
  7726                           ;blackbox.c: 626:         clcd_print(" Enter pwd ", (0x80 + (0)));
  7727   001758  0E9A               	movlw	low STR_41
  7728   00175A  6E03               	movwf	clcd_print@data^0,c
  7729   00175C  0E2F               	movlw	high STR_41
  7730   00175E  6E04               	movwf	(clcd_print@data+1)^0,c
  7731   001760  0E80               	movlw	128
  7732   001762  6E05               	movwf	clcd_print@addr^0,c
  7733   001764  EC8C  F010         	call	_clcd_print	;wreg free
  7734   001768                     
  7735                           ;blackbox.c: 628:         c = 0;
  7736   001768  0E00               	movlw	0
  7737   00176A  6E53               	movwf	change_pass@c^0,c
  7738   00176C                     
  7739                           ;blackbox.c: 630:     if (return_delay1++ == 50000) {
  7740   00176C  0100               	movlb	0	; () banked
  7741   00176E  4B7F               	infsnz	_return_delay1& (0+255),f,b
  7742   001770  2B80               	incf	(_return_delay1+1)& (0+255),f,b
  7743   001772                     
  7744                           ; BSR set to: 0
  7745                           ;blackbox.c: 642:         clcd_print("               ", (0xC0 + (0)));
  7746   001772  0E5C               	movlw	low (STR_42+2)
  7747   001774  6E03               	movwf	clcd_print@data^0,c
  7748   001776  0E2E               	movlw	high (STR_42+2)
  7749   001778  6E04               	movwf	(clcd_print@data+1)^0,c
  7750   00177A  0EC0               	movlw	192
  7751   00177C  6E05               	movwf	clcd_print@addr^0,c
  7752   00177E  EC8C  F010         	call	_clcd_print	;wreg free
  7753   001782                     
  7754                           ;blackbox.c: 643:         c = 1;
  7755   001782  0E01               	movlw	1
  7756   001784  6E53               	movwf	change_pass@c^0,c
  7757   001786                     
  7758                           ;blackbox.c: 646:         if (key == 5 || key == 6) {
  7759   001786  0E05               	movlw	5
  7760   001788  1854               	xorwf	_key^0,w,c
  7761   00178A  B4D8               	btfsc	status,2,c
  7762   00178C  EFCA  F00B         	goto	u3631
  7763   001790  EFCC  F00B         	goto	u3630
  7764   001794                     u3631:
  7765   001794  EFD5  F00B         	goto	l4378
  7766   001798                     u3630:
  7767   001798  0E06               	movlw	6
  7768   00179A  1854               	xorwf	_key^0,w,c
  7769   00179C  A4D8               	btfss	status,2,c
  7770   00179E  EFD3  F00B         	goto	u3641
  7771   0017A2  EFD5  F00B         	goto	u3640
  7772   0017A6                     u3641:
  7773   0017A6  EFFB  F00B         	goto	l490
  7774   0017AA                     u3640:
  7775   0017AA                     l4378:
  7776                           
  7777                           ;blackbox.c: 647:             clcd_putch('*', (0xC0 + (6 + l)));
  7778   0017AA  0EC6               	movlw	198
  7779   0017AC  6E09               	movwf	clcd_putch@addr^0,c
  7780   0017AE  0E2A               	movlw	42
  7781   0017B0  EC9C  F012         	call	_clcd_putch
  7782   0017B4                     
  7783                           ;blackbox.c: 648:            return_delay1 = 0;
  7784   0017B4  0E00               	movlw	0
  7785   0017B6  0100               	movlb	0	; () banked
  7786   0017B8  6F80               	movwf	(_return_delay1+1)& (0+255),b
  7787   0017BA  0E00               	movlw	0
  7788   0017BC  6F7F               	movwf	_return_delay1& (0+255),b
  7789   0017BE                     
  7790                           ; BSR set to: 0
  7791                           ;blackbox.c: 649:             if (key == 5) {
  7792   0017BE  0E05               	movlw	5
  7793   0017C0  1854               	xorwf	_key^0,w,c
  7794   0017C2  A4D8               	btfss	status,2,c
  7795   0017C4  EFE6  F00B         	goto	u3651
  7796   0017C8  EFE8  F00B         	goto	u3650
  7797   0017CC                     u3651:
  7798   0017CC  EFEE  F00B         	goto	l4388
  7799   0017D0                     u3650:
  7800   0017D0                     
  7801                           ; BSR set to: 0
  7802                           ;blackbox.c: 650:                 old_pd[l++] = '1';
  7803   0017D0  0E31               	movlw	49
  7804   0017D2  6FA0               	movwf	_old_pd& (0+255),b
  7805   0017D4                     l4386:
  7806                           
  7807                           ; BSR set to: 0
  7808   0017D4  4A35               	infsnz	_l^0,f,c
  7809   0017D6  2A36               	incf	(_l+1)^0,f,c
  7810                           
  7811                           ;blackbox.c: 651:             } else if (key == 6) {
  7812   0017D8  EFFB  F00B         	goto	l490
  7813   0017DC                     l4388:
  7814                           
  7815                           ; BSR set to: 0
  7816   0017DC  0E06               	movlw	6
  7817   0017DE  1854               	xorwf	_key^0,w,c
  7818   0017E0  A4D8               	btfss	status,2,c
  7819   0017E2  EFF5  F00B         	goto	u3661
  7820   0017E6  EFF7  F00B         	goto	u3660
  7821   0017EA                     u3661:
  7822   0017EA  EFFB  F00B         	goto	l443
  7823   0017EE                     u3660:
  7824   0017EE                     
  7825                           ; BSR set to: 0
  7826                           ;blackbox.c: 652:                 old_pd[l++] = '0';
  7827   0017EE  0E30               	movlw	48
  7828   0017F0  6FA0               	movwf	_old_pd& (0+255),b
  7829   0017F2  EFEA  F00B         	goto	l4386
  7830   0017F6                     l443:
  7831   0017F6                     l490:
  7832   0017F6  0012               	return		;funcret
  7833   0017F8                     __end_of_change_pass:
  7834                           	callstack 0
  7835                           
  7836 ;; *************** function _strncmp *****************
  7837 ;; Defined at:
  7838 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strncmp.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7841 ;;		 -> new_pd(5), 
  7842 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7843 ;;		 -> new_pd(5), 
  7844 ;;  n               2    4[COMRAM] unsigned int 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;  r               2   10[COMRAM] PTR const unsigned char 
  7847 ;;		 -> new_pd(5), 
  7848 ;;  l               2    8[COMRAM] PTR const unsigned char 
  7849 ;;		 -> new_pd(5), 
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  2    0[COMRAM] int 
  7852 ;; Registers used:
  7853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7859 ;;      Params:         6       0       0       0       0       0       0
  7860 ;;      Locals:         4       0       0       0       0       0       0
  7861 ;;      Temps:          2       0       0       0       0       0       0
  7862 ;;      Totals:        12       0       0       0       0       0       0
  7863 ;;Total ram usage:       12 bytes
  7864 ;; Hardware stack levels used: 1
  7865 ;; Hardware stack levels required when called: 1
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_change_pass
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           	psect	text36
  7874   0017F8                     __ptext36:
  7875                           	callstack 0
  7876   0017F8                     _strncmp:
  7877                           	callstack 28
  7878   0017F8  C001  F009         	movff	strncmp@_l,strncmp@l
  7879   0017FC  C002  F00A         	movff	strncmp@_l+1,strncmp@l+1
  7880   001800  C003  F00B         	movff	strncmp@_r,strncmp@r
  7881   001804  C004  F00C         	movff	strncmp@_r+1,strncmp@r+1
  7882   001808  0605               	decf	strncmp@n^0,f,c
  7883   00180A  A0D8               	btfss	status,0,c
  7884   00180C  0606               	decf	(strncmp@n+1)^0,f,c
  7885   00180E  2805               	incf	strncmp@n^0,w,c
  7886   001810  E106               	bnz	u2941
  7887   001812  2806               	incf	(strncmp@n+1)^0,w,c
  7888   001814  A4D8               	btfss	status,2,c
  7889   001816  EF0F  F00C         	goto	u2941
  7890   00181A  EF11  F00C         	goto	u2940
  7891   00181E                     u2941:
  7892   00181E  EF1E  F00C         	goto	l3824
  7893   001822                     u2940:
  7894   001822  0E00               	movlw	0
  7895   001824  6E02               	movwf	(?_strncmp+1)^0,c
  7896   001826  0E00               	movlw	0
  7897   001828  6E01               	movwf	?_strncmp^0,c
  7898   00182A  EF62  F00C         	goto	l1419
  7899   00182E                     l3822:
  7900   00182E  4A09               	infsnz	strncmp@l^0,f,c
  7901   001830  2A0A               	incf	(strncmp@l+1)^0,f,c
  7902   001832  4A0B               	infsnz	strncmp@r^0,f,c
  7903   001834  2A0C               	incf	(strncmp@r+1)^0,f,c
  7904   001836  0605               	decf	strncmp@n^0,f,c
  7905   001838  A0D8               	btfss	status,0,c
  7906   00183A  0606               	decf	(strncmp@n+1)^0,f,c
  7907   00183C                     l3824:
  7908   00183C  C009  FFD9         	movff	strncmp@l,fsr2l
  7909   001840  C00A  FFDA         	movff	strncmp@l+1,fsr2h
  7910   001844  50DF               	movf	indf2,w,c
  7911   001846  B4D8               	btfsc	status,2,c
  7912   001848  EF28  F00C         	goto	u2951
  7913   00184C  EF2A  F00C         	goto	u2950
  7914   001850                     u2951:
  7915   001850  EF50  F00C         	goto	l3832
  7916   001854                     u2950:
  7917   001854  C00B  FFD9         	movff	strncmp@r,fsr2l
  7918   001858  C00C  FFDA         	movff	strncmp@r+1,fsr2h
  7919   00185C  50DF               	movf	indf2,w,c
  7920   00185E  B4D8               	btfsc	status,2,c
  7921   001860  EF34  F00C         	goto	u2961
  7922   001864  EF36  F00C         	goto	u2960
  7923   001868                     u2961:
  7924   001868  EF50  F00C         	goto	l3832
  7925   00186C                     u2960:
  7926   00186C  5005               	movf	strncmp@n^0,w,c
  7927   00186E  1006               	iorwf	(strncmp@n+1)^0,w,c
  7928   001870  B4D8               	btfsc	status,2,c
  7929   001872  EF3D  F00C         	goto	u2971
  7930   001876  EF3F  F00C         	goto	u2970
  7931   00187A                     u2971:
  7932   00187A  EF50  F00C         	goto	l3832
  7933   00187E                     u2970:
  7934   00187E  C00B  FFD9         	movff	strncmp@r,fsr2l
  7935   001882  C00C  FFDA         	movff	strncmp@r+1,fsr2h
  7936   001886  C009  FFE1         	movff	strncmp@l,fsr1l
  7937   00188A  C00A  FFE2         	movff	strncmp@l+1,fsr1h
  7938   00188E  50DE               	movf	postinc2,w,c
  7939   001890  18E6               	xorwf	postinc1,w,c
  7940   001892  B4D8               	btfsc	status,2,c
  7941   001894  EF4E  F00C         	goto	u2981
  7942   001898  EF50  F00C         	goto	u2980
  7943   00189C                     u2981:
  7944   00189C  EF17  F00C         	goto	l3822
  7945   0018A0                     u2980:
  7946   0018A0                     l3832:
  7947   0018A0  C009  FFD9         	movff	strncmp@l,fsr2l
  7948   0018A4  C00A  FFDA         	movff	strncmp@l+1,fsr2h
  7949   0018A8  50DF               	movf	indf2,w,c
  7950   0018AA  6E07               	movwf	??_strncmp^0,c
  7951   0018AC  C00B  FFD9         	movff	strncmp@r,fsr2l
  7952   0018B0  C00C  FFDA         	movff	strncmp@r+1,fsr2h
  7953   0018B4  50DF               	movf	indf2,w,c
  7954   0018B6  6E08               	movwf	(??_strncmp+1)^0,c
  7955   0018B8  5008               	movf	(??_strncmp+1)^0,w,c
  7956   0018BA  5C07               	subwf	??_strncmp^0,w,c
  7957   0018BC  6E01               	movwf	?_strncmp^0,c
  7958   0018BE  6A02               	clrf	(?_strncmp+1)^0,c
  7959   0018C0  A0D8               	btfss	status,0,c
  7960   0018C2  0602               	decf	(?_strncmp+1)^0,f,c
  7961   0018C4                     l1419:
  7962   0018C4  0012               	return		;funcret
  7963   0018C6                     __end_of_strncmp:
  7964                           	callstack 0
  7965                           
  7966 ;; *************** function _strcmp *****************
  7967 ;; Defined at:
  7968 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcmp.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;  l               2    0[COMRAM] PTR const unsigned char 
  7971 ;;		 -> old_pd(5), password(5), 
  7972 ;;  r               2    2[COMRAM] PTR const unsigned char 
  7973 ;;		 -> pass(5), 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;		None
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  2    0[COMRAM] int 
  7978 ;; Registers used:
  7979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7985 ;;      Params:         4       0       0       0       0       0       0
  7986 ;;      Locals:         0       0       0       0       0       0       0
  7987 ;;      Temps:          2       0       0       0       0       0       0
  7988 ;;      Totals:         6       0       0       0       0       0       0
  7989 ;;Total ram usage:        6 bytes
  7990 ;; Hardware stack levels used: 1
  7991 ;; Hardware stack levels required when called: 1
  7992 ;; This function calls:
  7993 ;;		Nothing
  7994 ;; This function is called by:
  7995 ;;		_login
  7996 ;;		_change_pass
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text37
  8001   0020AC                     __ptext37:
  8002                           	callstack 0
  8003   0020AC                     _strcmp:
  8004                           	callstack 28
  8005   0020AC  EF5C  F010         	goto	l3788
  8006   0020B0                     l3786:
  8007   0020B0  4A01               	infsnz	strcmp@l^0,f,c
  8008   0020B2  2A02               	incf	(strcmp@l+1)^0,f,c
  8009   0020B4  4A03               	infsnz	strcmp@r^0,f,c
  8010   0020B6  2A04               	incf	(strcmp@r+1)^0,f,c
  8011   0020B8                     l3788:
  8012   0020B8  C003  FFD9         	movff	strcmp@r,fsr2l
  8013   0020BC  C004  FFDA         	movff	strcmp@r+1,fsr2h
  8014   0020C0  C001  FFE1         	movff	strcmp@l,fsr1l
  8015   0020C4  C002  FFE2         	movff	strcmp@l+1,fsr1h
  8016   0020C8  50DE               	movf	postinc2,w,c
  8017   0020CA  18E6               	xorwf	postinc1,w,c
  8018   0020CC  A4D8               	btfss	status,2,c
  8019   0020CE  EF6B  F010         	goto	u2911
  8020   0020D2  EF6D  F010         	goto	u2910
  8021   0020D6                     u2911:
  8022   0020D6  EF79  F010         	goto	l3792
  8023   0020DA                     u2910:
  8024   0020DA  C001  FFD9         	movff	strcmp@l,fsr2l
  8025   0020DE  C002  FFDA         	movff	strcmp@l+1,fsr2h
  8026   0020E2  50DF               	movf	indf2,w,c
  8027   0020E4  A4D8               	btfss	status,2,c
  8028   0020E6  EF77  F010         	goto	u2921
  8029   0020EA  EF79  F010         	goto	u2920
  8030   0020EE                     u2921:
  8031   0020EE  EF58  F010         	goto	l3786
  8032   0020F2                     u2920:
  8033   0020F2                     l3792:
  8034   0020F2  C001  FFD9         	movff	strcmp@l,fsr2l
  8035   0020F6  C002  FFDA         	movff	strcmp@l+1,fsr2h
  8036   0020FA  50DF               	movf	indf2,w,c
  8037   0020FC  6E05               	movwf	??_strcmp^0,c
  8038   0020FE  C003  FFD9         	movff	strcmp@r,fsr2l
  8039   002102  C004  FFDA         	movff	strcmp@r+1,fsr2h
  8040   002106  50DF               	movf	indf2,w,c
  8041   002108  6E06               	movwf	(??_strcmp+1)^0,c
  8042   00210A  5006               	movf	(??_strcmp+1)^0,w,c
  8043   00210C  5C05               	subwf	??_strcmp^0,w,c
  8044   00210E  6E01               	movwf	?_strcmp^0,c
  8045   002110  6A02               	clrf	(?_strcmp+1)^0,c
  8046   002112  A0D8               	btfss	status,0,c
  8047   002114  0602               	decf	(?_strcmp+1)^0,f,c
  8048   002116  0012               	return		;funcret
  8049   002118                     __end_of_strcmp:
  8050                           	callstack 0
  8051                           
  8052 ;; *************** function _get_pass *****************
  8053 ;; Defined at:
  8054 ;;		line 40 in file "blackbox.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;		None
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  i               2    3[COMRAM] int 
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      void 
  8061 ;; Registers used:
  8062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8068 ;;      Params:         0       0       0       0       0       0       0
  8069 ;;      Locals:         2       0       0       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0       0       0
  8071 ;;      Totals:         2       0       0       0       0       0       0
  8072 ;;Total ram usage:        2 bytes
  8073 ;; Hardware stack levels used: 1
  8074 ;; Hardware stack levels required when called: 5
  8075 ;; This function calls:
  8076 ;;		_read_external_eeprom
  8077 ;; This function is called by:
  8078 ;;		_login
  8079 ;;		_change_pass
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text38
  8084   002396                     __ptext38:
  8085                           	callstack 0
  8086   002396                     _get_pass:
  8087                           	callstack 24
  8088   002396                     
  8089                           ;blackbox.c: 41:     for (int i = 0; i < 5; i++) {
  8090   002396  0E00               	movlw	0
  8091   002398  6E05               	movwf	(get_pass@i+1)^0,c
  8092   00239A  0E00               	movlw	0
  8093   00239C  6E04               	movwf	get_pass@i^0,c
  8094   00239E                     l3656:
  8095                           
  8096                           ;blackbox.c: 42:         pass[i] = read_external_eeprom(i);
  8097   00239E  0EA5               	movlw	low _pass
  8098   0023A0  2404               	addwf	get_pass@i^0,w,c
  8099   0023A2  6ED9               	movwf	fsr2l,c
  8100   0023A4  0E00               	movlw	high _pass
  8101   0023A6  2005               	addwfc	(get_pass@i+1)^0,w,c
  8102   0023A8  6EDA               	movwf	fsr2h,c
  8103   0023AA  5004               	movf	get_pass@i^0,w,c
  8104   0023AC  EC68  F012         	call	_read_external_eeprom
  8105   0023B0  6EDF               	movwf	indf2,c
  8106   0023B2                     
  8107                           ;blackbox.c: 43:     }
  8108   0023B2  4A04               	infsnz	get_pass@i^0,f,c
  8109   0023B4  2A05               	incf	(get_pass@i+1)^0,f,c
  8110   0023B6  BE05               	btfsc	(get_pass@i+1)^0,7,c
  8111   0023B8  EFE7  F011         	goto	u2711
  8112   0023BC  5005               	movf	(get_pass@i+1)^0,w,c
  8113   0023BE  E109               	bnz	u2710
  8114   0023C0  0E05               	movlw	5
  8115   0023C2  5C04               	subwf	get_pass@i^0,w,c
  8116   0023C4  A0D8               	btfss	status,0,c
  8117   0023C6  EFE7  F011         	goto	u2711
  8118   0023CA  EFE9  F011         	goto	u2710
  8119   0023CE                     u2711:
  8120   0023CE  EFCF  F011         	goto	l3656
  8121   0023D2                     u2710:
  8122   0023D2  0012               	return		;funcret
  8123   0023D4                     __end_of_get_pass:
  8124                           	callstack 0
  8125                           
  8126 ;; *************** function _read_external_eeprom *****************
  8127 ;; Defined at:
  8128 ;;		line 21 in file "ext_eeprom.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  address         1    wreg     unsigned char 
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;  address         1    1[COMRAM] unsigned char 
  8133 ;;  data            1    2[COMRAM] unsigned char 
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      unsigned char 
  8136 ;; Registers used:
  8137 ;;		wreg, status,2, cstack
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8143 ;;      Params:         0       0       0       0       0       0       0
  8144 ;;      Locals:         2       0       0       0       0       0       0
  8145 ;;      Temps:          0       0       0       0       0       0       0
  8146 ;;      Totals:         2       0       0       0       0       0       0
  8147 ;;Total ram usage:        2 bytes
  8148 ;; Hardware stack levels used: 1
  8149 ;; Hardware stack levels required when called: 4
  8150 ;; This function calls:
  8151 ;;		_i2c_read
  8152 ;;		_i2c_rep_start
  8153 ;;		_i2c_start
  8154 ;;		_i2c_stop
  8155 ;;		_i2c_write
  8156 ;; This function is called by:
  8157 ;;		_get_pass
  8158 ;;		_view_log
  8159 ;;		_download_log
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text39
  8164   0024D0                     __ptext39:
  8165                           	callstack 0
  8166   0024D0                     _read_external_eeprom:
  8167                           	callstack 25
  8168                           
  8169                           ;incstack = 0
  8170                           ;read_external_eeprom@address stored from wreg
  8171   0024D0  6E02               	movwf	read_external_eeprom@address^0,c
  8172   0024D2                     
  8173                           ;ext_eeprom.c: 21: unsigned char read_external_eeprom(unsigned char address);ext_eeprom.
      +                          c: 22: {;ext_eeprom.c: 23:  unsigned char data;;ext_eeprom.c: 25:  i2c_start();
  8174   0024D2  ECFA  F012         	call	_i2c_start	;wreg free
  8175   0024D6                     
  8176                           ;ext_eeprom.c: 26:  i2c_write(0xA0);
  8177   0024D6  0EA0               	movlw	160
  8178   0024D8  ECE4  F012         	call	_i2c_write
  8179   0024DC                     
  8180                           ;ext_eeprom.c: 27:  i2c_write(address);
  8181   0024DC  5002               	movf	read_external_eeprom@address^0,w,c
  8182   0024DE  ECE4  F012         	call	_i2c_write
  8183   0024E2                     
  8184                           ;ext_eeprom.c: 28:  i2c_rep_start();
  8185   0024E2  ECEA  F012         	call	_i2c_rep_start	;wreg free
  8186   0024E6                     
  8187                           ;ext_eeprom.c: 29:  i2c_write(0xA1);
  8188   0024E6  0EA1               	movlw	161
  8189   0024E8  ECE4  F012         	call	_i2c_write
  8190                           
  8191                           ;ext_eeprom.c: 30:  data = i2c_read();
  8192   0024EC  ECEE  F012         	call	_i2c_read	;wreg free
  8193   0024F0  6E03               	movwf	read_external_eeprom@data^0,c
  8194   0024F2                     
  8195                           ;ext_eeprom.c: 31:  i2c_stop();
  8196   0024F2  ECF6  F012         	call	_i2c_stop	;wreg free
  8197                           
  8198                           ;ext_eeprom.c: 33:  return data;
  8199   0024F6  5003               	movf	read_external_eeprom@data^0,w,c
  8200   0024F8  0012               	return		;funcret
  8201   0024FA                     __end_of_read_external_eeprom:
  8202                           	callstack 0
  8203                           
  8204 ;; *************** function _i2c_rep_start *****************
  8205 ;; Defined at:
  8206 ;;		line 48 in file "i2c.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;		None
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      void 
  8213 ;; Registers used:
  8214 ;;		cstack
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8220 ;;      Params:         0       0       0       0       0       0       0
  8221 ;;      Locals:         0       0       0       0       0       0       0
  8222 ;;      Temps:          0       0       0       0       0       0       0
  8223 ;;      Totals:         0       0       0       0       0       0       0
  8224 ;;Total ram usage:        0 bytes
  8225 ;; Hardware stack levels used: 1
  8226 ;; Hardware stack levels required when called: 2
  8227 ;; This function calls:
  8228 ;;		_i2c_idle
  8229 ;; This function is called by:
  8230 ;;		_read_ds1307
  8231 ;;		_read_external_eeprom
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           	psect	text40
  8236   0025D4                     __ptext40:
  8237                           	callstack 0
  8238   0025D4                     _i2c_rep_start:
  8239                           	callstack 26
  8240   0025D4                     
  8241                           ;i2c.c: 50:  RSEN = 1;
  8242   0025D4  82C5               	bsf	4037,1,c	;volatile
  8243   0025D6                     
  8244                           ;i2c.c: 51:  i2c_idle();
  8245   0025D6  ECDB  F012         	call	_i2c_idle	;wreg free
  8246   0025DA  0012               	return		;funcret
  8247   0025DC                     __end_of_i2c_rep_start:
  8248                           	callstack 0
  8249                           
  8250 ;; *************** function _i2c_read *****************
  8251 ;; Defined at:
  8252 ;;		line 72 in file "i2c.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;		None
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      unsigned char 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8266 ;;      Params:         0       0       0       0       0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0
  8269 ;;      Totals:         0       0       0       0       0       0       0
  8270 ;;Total ram usage:        0 bytes
  8271 ;; Hardware stack levels used: 1
  8272 ;; Hardware stack levels required when called: 3
  8273 ;; This function calls:
  8274 ;;		_i2c_rx_mode
  8275 ;; This function is called by:
  8276 ;;		_read_ds1307
  8277 ;;		_read_external_eeprom
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           	psect	text41
  8282   0025DC                     __ptext41:
  8283                           	callstack 0
  8284   0025DC                     _i2c_read:
  8285                           	callstack 25
  8286   0025DC                     
  8287                           ;i2c.c: 74:  i2c_rx_mode();
  8288   0025DC  ECF2  F012         	call	_i2c_rx_mode	;wreg free
  8289   0025E0                     
  8290                           ;i2c.c: 77:  return SSPBUF;
  8291   0025E0  50C9               	movf	201,w,c	;volatile
  8292   0025E2  0012               	return		;funcret
  8293   0025E4                     __end_of_i2c_read:
  8294                           	callstack 0
  8295                           
  8296 ;; *************** function _i2c_rx_mode *****************
  8297 ;; Defined at:
  8298 ;;		line 60 in file "i2c.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		cstack
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8312 ;;      Params:         0       0       0       0       0       0       0
  8313 ;;      Locals:         0       0       0       0       0       0       0
  8314 ;;      Temps:          0       0       0       0       0       0       0
  8315 ;;      Totals:         0       0       0       0       0       0       0
  8316 ;;Total ram usage:        0 bytes
  8317 ;; Hardware stack levels used: 1
  8318 ;; Hardware stack levels required when called: 2
  8319 ;; This function calls:
  8320 ;;		_i2c_idle
  8321 ;; This function is called by:
  8322 ;;		_i2c_read
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           	psect	text42
  8327   0025E4                     __ptext42:
  8328                           	callstack 0
  8329   0025E4                     _i2c_rx_mode:
  8330                           	callstack 25
  8331   0025E4                     
  8332                           ;i2c.c: 62:  RCEN = 1;
  8333   0025E4  86C5               	bsf	4037,3,c	;volatile
  8334   0025E6                     
  8335                           ;i2c.c: 63:  i2c_idle();
  8336   0025E6  ECDB  F012         	call	_i2c_idle	;wreg free
  8337   0025EA  0012               	return		;funcret
  8338   0025EC                     __end_of_i2c_rx_mode:
  8339                           	callstack 0
  8340                           
  8341 ;; *************** function _clcd_putch *****************
  8342 ;; Defined at:
  8343 ;;		line 67 in file "clcd.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;  data            1    wreg     const unsigned char 
  8346 ;;  addr            1    8[COMRAM] unsigned char 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  data            1    9[COMRAM] const unsigned char 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		wreg, status,2, cstack
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8358 ;;      Params:         1       0       0       0       0       0       0
  8359 ;;      Locals:         1       0       0       0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0
  8361 ;;      Totals:         2       0       0       0       0       0       0
  8362 ;;Total ram usage:        2 bytes
  8363 ;; Hardware stack levels used: 1
  8364 ;; Hardware stack levels required when called: 2
  8365 ;; This function calls:
  8366 ;;		_clcd_write
  8367 ;; This function is called by:
  8368 ;;		_timeout
  8369 ;;		_view_log
  8370 ;;		_blink
  8371 ;;		_login
  8372 ;;		_menu
  8373 ;;		_download_log
  8374 ;;		_change_pass
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text43
  8379   002538                     __ptext43:
  8380                           	callstack 0
  8381   002538                     _clcd_putch:
  8382                           	callstack 27
  8383                           
  8384                           ;incstack = 0
  8385                           ;clcd_putch@data stored from wreg
  8386   002538  6E0A               	movwf	clcd_putch@data^0,c
  8387   00253A                     
  8388                           ;clcd.c: 67: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 68: {
      +                          ;clcd.c: 69:  clcd_write(addr, 0);
  8389   00253A  0E00               	movlw	0
  8390   00253C  6E01               	movwf	clcd_write@control_bit^0,c
  8391   00253E  5009               	movf	clcd_putch@addr^0,w,c
  8392   002540  ECEA  F011         	call	_clcd_write
  8393                           
  8394                           ;clcd.c: 70:  clcd_write(data, 1);
  8395   002544  0E01               	movlw	1
  8396   002546  6E01               	movwf	clcd_write@control_bit^0,c
  8397   002548  500A               	movf	clcd_putch@data^0,w,c
  8398   00254A  ECEA  F011         	call	_clcd_write
  8399   00254E  0012               	return		;funcret
  8400   002550                     __end_of_clcd_putch:
  8401                           	callstack 0
  8402                           
  8403 ;; *************** function _clcd_print *****************
  8404 ;; Defined at:
  8405 ;;		line 58 in file "clcd.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;  data            2    2[COMRAM] PTR const unsigned char 
  8408 ;;		 -> STR_59(21), STR_58(13), STR_57(17), STR_52(7), 
  8409 ;;		 -> STR_51(18), STR_50(13), STR_49(17), STR_48(16), 
  8410 ;;		 -> STR_47(14), STR_46(19), STR_44(16), STR_41(12), 
  8411 ;;		 -> STR_40(12), STR_39(19), STR_35(17), STR_34(15), 
  8412 ;;		 -> STR_33(3), STR_32(3), STR_31(15), STR_30(12), 
  8413 ;;		 -> STR_29(15), STR_28(9), STR_27(17), STR_26(17), 
  8414 ;;		 -> STR_25(17), STR_24(17), STR_23(17), speed(3), 
  8415 ;;		 -> time(9), STR_22(5), STR_21(10), STR_20(16), 
  8416 ;;		 -> STR_19(13), STR_18(13), STR_17(13), STR_16(13), 
  8417 ;;		 -> STR_15(17), STR_14(3), STR_13(3), STR_12(3), 
  8418 ;;		 -> STR_11(3), STR_10(3), STR_9(3), STR_8(3), 
  8419 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
  8420 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  8421 ;;  addr            1    4[COMRAM] unsigned char 
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8433 ;;      Params:         3       0       0       0       0       0       0
  8434 ;;      Locals:         0       0       0       0       0       0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0
  8436 ;;      Totals:         3       0       0       0       0       0       0
  8437 ;;Total ram usage:        3 bytes
  8438 ;; Hardware stack levels used: 1
  8439 ;; Hardware stack levels required when called: 2
  8440 ;; This function calls:
  8441 ;;		_clcd_write
  8442 ;; This function is called by:
  8443 ;;		_timeout
  8444 ;;		_view_log
  8445 ;;		_default_screen
  8446 ;;		_event
  8447 ;;		_login
  8448 ;;		_menu
  8449 ;;		_download_log
  8450 ;;		_clear_log
  8451 ;;		_change_pass
  8452 ;; This function uses a non-reentrant model
  8453 ;;
  8454                           
  8455                           	psect	text44
  8456   002118                     __ptext44:
  8457                           	callstack 0
  8458   002118                     _clcd_print:
  8459                           	callstack 27
  8460   002118                     
  8461                           ;clcd.c: 58: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 59: 
      +                          {;clcd.c: 60:  clcd_write(addr, 0);
  8462   002118  0E00               	movlw	0
  8463   00211A  6E01               	movwf	clcd_write@control_bit^0,c
  8464   00211C  5005               	movf	clcd_print@addr^0,w,c
  8465   00211E  ECEA  F011         	call	_clcd_write
  8466                           
  8467                           ;clcd.c: 61:  while (*data != '\0')
  8468   002122  EFA9  F010         	goto	l3172
  8469   002126                     l3168:
  8470                           
  8471                           ;clcd.c: 62:  {;clcd.c: 63:   clcd_write(*data++, 1);
  8472   002126  0E01               	movlw	1
  8473   002128  6E01               	movwf	clcd_write@control_bit^0,c
  8474   00212A  C003  FFF6         	movff	clcd_print@data,tblptrl
  8475   00212E  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  8476   002132  6AF8               	clrf	tblptru,c
  8477   002134  0E05               	movlw	(high __ramtop+-1)
  8478   002136  64F7               	cpfsgt	tblptrh,c
  8479   002138  D003               	bra	u2077
  8480   00213A  0008               	tblrd		*
  8481   00213C  50F5               	movf	tablat,w,c
  8482   00213E  D005               	bra	u2070
  8483   002140                     u2077:
  8484   002140  CFF6 FFE1          	movff	tblptrl,fsr1l
  8485   002144  CFF7 FFE2          	movff	tblptrh,fsr1h
  8486   002148  50E7               	movf	indf1,w,c
  8487   00214A                     u2070:
  8488   00214A  ECEA  F011         	call	_clcd_write
  8489   00214E  4A03               	infsnz	clcd_print@data^0,f,c
  8490   002150  2A04               	incf	(clcd_print@data+1)^0,f,c
  8491   002152                     l3172:
  8492                           
  8493                           ;clcd.c: 61:  while (*data != '\0')
  8494   002152  C003  FFF6         	movff	clcd_print@data,tblptrl
  8495   002156  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  8496   00215A  6AF8               	clrf	tblptru,c
  8497   00215C  0E05               	movlw	(high __ramtop+-1)
  8498   00215E  64F7               	cpfsgt	tblptrh,c
  8499   002160  D003               	bra	u2087
  8500   002162  0008               	tblrd		*
  8501   002164  50F5               	movf	tablat,w,c
  8502   002166  D005               	bra	u2080
  8503   002168                     u2087:
  8504   002168  CFF6 FFE1          	movff	tblptrl,fsr1l
  8505   00216C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8506   002170  50E7               	movf	indf1,w,c
  8507   002172                     u2080:
  8508   002172  0900               	iorlw	0
  8509   002174  A4D8               	btfss	status,2,c
  8510   002176  EFBF  F010         	goto	u2091
  8511   00217A  EFC1  F010         	goto	u2090
  8512   00217E                     u2091:
  8513   00217E  EF93  F010         	goto	l3168
  8514   002182                     u2090:
  8515   002182  0012               	return		;funcret
  8516   002184                     __end_of_clcd_print:
  8517                           	callstack 0
  8518                           
  8519 ;; *************** function _clcd_write *****************
  8520 ;; Defined at:
  8521 ;;		line 4 in file "clcd.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  byte            1    wreg     unsigned char 
  8524 ;;  control_bit     1    0[COMRAM] unsigned char 
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;  byte            1    1[COMRAM] unsigned char 
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  1    wreg      void 
  8529 ;; Registers used:
  8530 ;;		wreg
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8536 ;;      Params:         1       0       0       0       0       0       0
  8537 ;;      Locals:         1       0       0       0       0       0       0
  8538 ;;      Temps:          0       0       0       0       0       0       0
  8539 ;;      Totals:         2       0       0       0       0       0       0
  8540 ;;Total ram usage:        2 bytes
  8541 ;; Hardware stack levels used: 1
  8542 ;; Hardware stack levels required when called: 1
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		_init_clcd
  8547 ;;		_clcd_print
  8548 ;;		_clcd_putch
  8549 ;;		_timeout
  8550 ;;		_view_log
  8551 ;;		_login
  8552 ;;		_menu
  8553 ;;		_download_log
  8554 ;;		_clear_log
  8555 ;;		_change_pass
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559                           	psect	text45
  8560   0023D4                     __ptext45:
  8561                           	callstack 0
  8562   0023D4                     _clcd_write:
  8563                           	callstack 28
  8564                           
  8565                           ;incstack = 0
  8566                           ;clcd_write@byte stored from wreg
  8567   0023D4  6E02               	movwf	clcd_write@byte^0,c
  8568   0023D6                     
  8569                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 5: {;
      +                          clcd.c: 6:  RC1 = control_bit;
  8570   0023D6  B001               	btfsc	clcd_write@control_bit^0,0,c
  8571   0023D8  EFF0  F011         	goto	u2011
  8572   0023DC  EFF3  F011         	goto	u2010
  8573   0023E0                     u2011:
  8574   0023E0  8282               	bsf	3970,1,c	;volatile
  8575   0023E2  EFF4  F011         	goto	u2025
  8576   0023E6                     u2010:
  8577   0023E6  9282               	bcf	3970,1,c	;volatile
  8578   0023E8                     u2025:
  8579   0023E8                     
  8580                           ;clcd.c: 7:  PORTD = byte;
  8581   0023E8  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  8582   0023EC                     
  8583                           ;clcd.c: 10:  RC2 = 1;
  8584   0023EC  8482               	bsf	3970,2,c	;volatile
  8585   0023EE                     
  8586                           ;clcd.c: 11:  RC2 = 0;
  8587   0023EE  9482               	bcf	3970,2,c	;volatile
  8588   0023F0                     
  8589                           ;clcd.c: 13:  TRISD7 = 0xFF;
  8590   0023F0  8E95               	bsf	3989,7,c	;volatile
  8591   0023F2                     
  8592                           ;clcd.c: 14:  RC0 = 1;
  8593   0023F2  8082               	bsf	3970,0,c	;volatile
  8594   0023F4                     
  8595                           ;clcd.c: 15:  RC1 = 0;
  8596   0023F4  9282               	bcf	3970,1,c	;volatile
  8597   0023F6                     l3128:
  8598                           
  8599                           ;clcd.c: 18:  {;clcd.c: 19:   RC2 = 1;
  8600   0023F6  8482               	bsf	3970,2,c	;volatile
  8601   0023F8                     
  8602                           ;clcd.c: 20:   RC2 = 0;
  8603   0023F8  9482               	bcf	3970,2,c	;volatile
  8604   0023FA                     
  8605                           ;clcd.c: 21:  } while (RD7);
  8606   0023FA  BE83               	btfsc	3971,7,c	;volatile
  8607   0023FC  EF02  F012         	goto	u2031
  8608   002400  EF04  F012         	goto	u2030
  8609   002404                     u2031:
  8610   002404  EFFB  F011         	goto	l3128
  8611   002408                     u2030:
  8612   002408                     
  8613                           ;clcd.c: 23:  RC0 = 0;
  8614   002408  9082               	bcf	3970,0,c	;volatile
  8615                           
  8616                           ;clcd.c: 24:  TRISD7 = 0x00;
  8617   00240A  9E95               	bcf	3989,7,c	;volatile
  8618   00240C  0012               	return		;funcret
  8619   00240E                     __end_of_clcd_write:
  8620                           	callstack 0
  8621                           
  8622 ;; *************** function _car_log *****************
  8623 ;; Defined at:
  8624 ;;		line 120 in file "blackbox.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;  i               2    9[COMRAM] int 
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8638 ;;      Params:         0       0       0       0       0       0       0
  8639 ;;      Locals:         2       0       0       0       0       0       0
  8640 ;;      Temps:          2       0       0       0       0       0       0
  8641 ;;      Totals:         4       0       0       0       0       0       0
  8642 ;;Total ram usage:        4 bytes
  8643 ;; Hardware stack levels used: 1
  8644 ;; Hardware stack levels required when called: 5
  8645 ;; This function calls:
  8646 ;;		_event_capture
  8647 ;; This function is called by:
  8648 ;;		_event
  8649 ;;		_download_log
  8650 ;;		_change_pass
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text46
  8655   001B12                     __ptext46:
  8656                           	callstack 0
  8657   001B12                     _car_log:
  8658                           	callstack 24
  8659   001B12                     
  8660                           ;blackbox.c: 122:     for (int i = 0; i < 8; i++) {
  8661   001B12  0E00               	movlw	0
  8662   001B14  6E0B               	movwf	(car_log@i+1)^0,c
  8663   001B16  0E00               	movlw	0
  8664   001B18  6E0A               	movwf	car_log@i^0,c
  8665   001B1A                     l3212:
  8666                           
  8667                           ;blackbox.c: 123:         log[i] = time[i];
  8668   001B1A  0EE0               	movlw	low _time
  8669   001B1C  240A               	addwf	car_log@i^0,w,c
  8670   001B1E  6ED9               	movwf	fsr2l,c
  8671   001B20  0E00               	movlw	high _time
  8672   001B22  200B               	addwfc	(car_log@i+1)^0,w,c
  8673   001B24  6EDA               	movwf	fsr2h,c
  8674   001B26  0E60               	movlw	low _log
  8675   001B28  240A               	addwf	car_log@i^0,w,c
  8676   001B2A  6EE1               	movwf	fsr1l,c
  8677   001B2C  0E00               	movlw	high _log
  8678   001B2E  200B               	addwfc	(car_log@i+1)^0,w,c
  8679   001B30  6EE2               	movwf	fsr1h,c
  8680   001B32  CFDF FFE7          	movff	indf2,indf1
  8681   001B36                     
  8682                           ;blackbox.c: 124:     }
  8683   001B36  4A0A               	infsnz	car_log@i^0,f,c
  8684   001B38  2A0B               	incf	(car_log@i+1)^0,f,c
  8685   001B3A  BE0B               	btfsc	(car_log@i+1)^0,7,c
  8686   001B3C  EFA9  F00D         	goto	u2101
  8687   001B40  500B               	movf	(car_log@i+1)^0,w,c
  8688   001B42  E109               	bnz	u2100
  8689   001B44  0E08               	movlw	8
  8690   001B46  5C0A               	subwf	car_log@i^0,w,c
  8691   001B48  A0D8               	btfss	status,0,c
  8692   001B4A  EFA9  F00D         	goto	u2101
  8693   001B4E  EFAB  F00D         	goto	u2100
  8694   001B52                     u2101:
  8695   001B52  EF8D  F00D         	goto	l3212
  8696   001B56                     u2100:
  8697   001B56                     
  8698                           ;blackbox.c: 125:     log[8] = ' ';
  8699   001B56  0E20               	movlw	32
  8700   001B58  0100               	movlb	0	; () banked
  8701   001B5A  6F68               	movwf	(_log+8)& (0+255),b
  8702                           
  8703                           ;blackbox.c: 126:     log[9] = ' ';
  8704   001B5C  0E20               	movlw	32
  8705   001B5E  6F69               	movwf	(_log+9)& (0+255),b
  8706   001B60                     
  8707                           ; BSR set to: 0
  8708                           ;blackbox.c: 127:     log[10] = arr[i][0];
  8709   001B60  90D8               	bcf	status,0,c
  8710   001B62  344D               	rlcf	_i^0,w,c
  8711   001B64  6ED9               	movwf	fsr2l,c
  8712   001B66  344E               	rlcf	(_i+1)^0,w,c
  8713   001B68  6EDA               	movwf	fsr2h,c
  8714   001B6A  0EB2               	movlw	low _arr
  8715   001B6C  26D9               	addwf	fsr2l,f,c
  8716   001B6E  0E00               	movlw	high _arr
  8717   001B70  22DA               	addwfc	fsr2h,f,c
  8718   001B72  CFDE FFF6          	movff	postinc2,tblptrl
  8719   001B76  CFDD FFF7          	movff	postdec2,tblptrh
  8720   001B7A                     	if	0	;tblptru may be non-zero
  8721   001B7A                     	endif
  8722   001B7A                     	if	0	;tblptru may be non-zero
  8723   001B7A                     	endif
  8724   001B7A  0008               	tblrd		*
  8725   001B7C  CFF5 F06A          	movff	tablat,_log+10
  8726   001B80                     
  8727                           ; BSR set to: 0
  8728                           ;blackbox.c: 128:     log[11] = arr[i][1];
  8729   001B80  90D8               	bcf	status,0,c
  8730   001B82  344D               	rlcf	_i^0,w,c
  8731   001B84  6ED9               	movwf	fsr2l,c
  8732   001B86  344E               	rlcf	(_i+1)^0,w,c
  8733   001B88  6EDA               	movwf	fsr2h,c
  8734   001B8A  0EB2               	movlw	low _arr
  8735   001B8C  26D9               	addwf	fsr2l,f,c
  8736   001B8E  0E00               	movlw	high _arr
  8737   001B90  22DA               	addwfc	fsr2h,f,c
  8738   001B92  CFDE F008          	movff	postinc2,??_car_log
  8739   001B96  CFDD F009          	movff	postdec2,??_car_log+1
  8740   001B9A  0E01               	movlw	1
  8741   001B9C  2608               	addwf	??_car_log^0,f,c
  8742   001B9E  0E00               	movlw	0
  8743   001BA0  2209               	addwfc	(??_car_log+1)^0,f,c
  8744   001BA2  C008  FFF6         	movff	??_car_log,tblptrl
  8745   001BA6  C009  FFF7         	movff	??_car_log+1,tblptrh
  8746   001BAA                     	if	0	;tblptru may be non-zero
  8747   001BAA                     	endif
  8748   001BAA                     	if	0	;tblptru may be non-zero
  8749   001BAA                     	endif
  8750   001BAA  0008               	tblrd		*
  8751   001BAC  CFF5 F06B          	movff	tablat,_log+11
  8752                           
  8753                           ;blackbox.c: 129:     log[12] = ' ';
  8754   001BB0  0E20               	movlw	32
  8755   001BB2  6F6C               	movwf	(_log+12)& (0+255),b
  8756                           
  8757                           ;blackbox.c: 130:     log[13] = ' ';
  8758   001BB4  0E20               	movlw	32
  8759   001BB6  6F6D               	movwf	(_log+13)& (0+255),b
  8760   001BB8                     
  8761                           ; BSR set to: 0
  8762                           ;blackbox.c: 131:     log[14] = speed[0];
  8763   001BB8  C0AF  F06E         	movff	_speed,_log+14
  8764   001BBC                     
  8765                           ; BSR set to: 0
  8766                           ;blackbox.c: 132:     log[15] = speed[1];
  8767   001BBC  C0B0  F06F         	movff	_speed+1,_log+15
  8768                           
  8769                           ;blackbox.c: 133:     log[16] = '\0';
  8770   001BC0  0E00               	movlw	0
  8771   001BC2  6F70               	movwf	(_log+16)& (0+255),b
  8772   001BC4                     
  8773                           ; BSR set to: 0
  8774                           ;blackbox.c: 136:     event_capture();
  8775   001BC4  EC2D  F00F         	call	_event_capture	;wreg free
  8776   001BC8  0012               	return		;funcret
  8777   001BCA                     __end_of_car_log:
  8778                           	callstack 0
  8779                           
  8780 ;; *************** function _event_capture *****************
  8781 ;; Defined at:
  8782 ;;		line 104 in file "blackbox.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;		None
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;  i               1    6[COMRAM] unsigned char 
  8787 ;;  address         1    5[COMRAM] unsigned char 
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1    wreg      void 
  8790 ;; Registers used:
  8791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8797 ;;      Params:         0       0       0       0       0       0       0
  8798 ;;      Locals:         2       0       0       0       0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0
  8800 ;;      Totals:         2       0       0       0       0       0       0
  8801 ;;Total ram usage:        2 bytes
  8802 ;; Hardware stack levels used: 1
  8803 ;; Hardware stack levels required when called: 4
  8804 ;; This function calls:
  8805 ;;		_write_external_eeprom
  8806 ;; This function is called by:
  8807 ;;		_car_log
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text47
  8812   001E5A                     __ptext47:
  8813                           	callstack 0
  8814   001E5A                     _event_capture:
  8815                           	callstack 24
  8816   001E5A                     
  8817                           ;blackbox.c: 105:     char address;;blackbox.c: 106:     if (++position == 10) {
  8818   001E5A  0100               	movlb	0	; () banked
  8819   001E5C  4BDC               	infsnz	_position& (0+255),f,b
  8820   001E5E  2BDD               	incf	(_position+1)& (0+255),f,b
  8821   001E60  0E0A               	movlw	10
  8822   001E62  19DC               	xorwf	_position& (0+255),w,b
  8823   001E64  11DD               	iorwf	(_position+1)& (0+255),w,b
  8824   001E66  A4D8               	btfss	status,2,c
  8825   001E68  EF38  F00F         	goto	u2041
  8826   001E6C  EF3A  F00F         	goto	u2040
  8827   001E70                     u2041:
  8828   001E70  EF42  F00F         	goto	l3138
  8829   001E74                     u2040:
  8830   001E74                     
  8831                           ; BSR set to: 0
  8832                           ;blackbox.c: 107:         position = 0;
  8833   001E74  0E00               	movlw	0
  8834   001E76  6FDD               	movwf	(_position+1)& (0+255),b
  8835   001E78  0E00               	movlw	0
  8836   001E7A  6FDC               	movwf	_position& (0+255),b
  8837                           
  8838                           ;blackbox.c: 108:         overflow = 1;
  8839   001E7C  0E00               	movlw	0
  8840   001E7E  6F88               	movwf	(_overflow+1)& (0+255),b
  8841   001E80  0E01               	movlw	1
  8842   001E82  6F87               	movwf	_overflow& (0+255),b
  8843   001E84                     l3138:
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;blackbox.c: 110:     address = (position * 16) + 5;
  8847   001E84  51DC               	movf	_position& (0+255),w,b
  8848   001E86  0D10               	mullw	16
  8849   001E88  50F3               	movf	243,w,c
  8850   001E8A  0F05               	addlw	5
  8851   001E8C  6E06               	movwf	event_capture@address^0,c
  8852   001E8E                     
  8853                           ; BSR set to: 0
  8854                           ;blackbox.c: 111:     for (char i = 0; i < 16; i++) {
  8855   001E8E  0E00               	movlw	0
  8856   001E90  6E07               	movwf	event_capture@i^0,c
  8857   001E92                     l3146:
  8858                           
  8859                           ;blackbox.c: 112:         write_external_eeprom(address + i, log[i]);
  8860   001E92  0E60               	movlw	low _log
  8861   001E94  2407               	addwf	event_capture@i^0,w,c
  8862   001E96  6ED9               	movwf	fsr2l,c
  8863   001E98  6ADA               	clrf	fsr2h,c
  8864   001E9A  0E00               	movlw	high _log
  8865   001E9C  22DA               	addwfc	fsr2h,f,c
  8866   001E9E  50DF               	movf	indf2,w,c
  8867   001EA0  6E02               	movwf	write_external_eeprom@data^0,c
  8868   001EA2  5006               	movf	event_capture@address^0,w,c
  8869   001EA4  2407               	addwf	event_capture@i^0,w,c
  8870   001EA6  ECAB  F011         	call	_write_external_eeprom
  8871   001EAA                     
  8872                           ;blackbox.c: 113:     }
  8873   001EAA  2A07               	incf	event_capture@i^0,f,c
  8874   001EAC  0E0F               	movlw	15
  8875   001EAE  6407               	cpfsgt	event_capture@i^0,c
  8876   001EB0  EF5C  F00F         	goto	u2051
  8877   001EB4  EF5E  F00F         	goto	u2050
  8878   001EB8                     u2051:
  8879   001EB8  EF49  F00F         	goto	l3146
  8880   001EBC                     u2050:
  8881   001EBC                     
  8882                           ;blackbox.c: 115:     if (index < 9) {
  8883   001EBC  BE3C               	btfsc	(_index+1)^0,7,c
  8884   001EBE  EF6C  F00F         	goto	u2060
  8885   001EC2  503C               	movf	(_index+1)^0,w,c
  8886   001EC4  E107               	bnz	u2061
  8887   001EC6  0E09               	movlw	9
  8888   001EC8  5C3B               	subwf	_index^0,w,c
  8889   001ECA  B0D8               	btfsc	status,0,c
  8890   001ECC  EF6A  F00F         	goto	u2061
  8891   001ED0  EF6C  F00F         	goto	u2060
  8892   001ED4                     u2061:
  8893   001ED4  EF6E  F00F         	goto	l279
  8894   001ED8                     u2060:
  8895   001ED8                     
  8896                           ;blackbox.c: 116:         index++;
  8897   001ED8  4A3B               	infsnz	_index^0,f,c
  8898   001EDA  2A3C               	incf	(_index+1)^0,f,c
  8899   001EDC                     l279:
  8900   001EDC  0012               	return		;funcret
  8901   001EDE                     __end_of_event_capture:
  8902                           	callstack 0
  8903                           
  8904 ;; *************** function _write_external_eeprom *****************
  8905 ;; Defined at:
  8906 ;;		line 11 in file "ext_eeprom.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;  address         1    wreg     unsigned char 
  8909 ;;  data            1    1[COMRAM] unsigned char 
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;  address         1    4[COMRAM] unsigned char 
  8912 ;;  i               2    2[COMRAM] unsigned int 
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  1    wreg      void 
  8915 ;; Registers used:
  8916 ;;		wreg, status,2, status,0, cstack
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8922 ;;      Params:         1       0       0       0       0       0       0
  8923 ;;      Locals:         3       0       0       0       0       0       0
  8924 ;;      Temps:          0       0       0       0       0       0       0
  8925 ;;      Totals:         4       0       0       0       0       0       0
  8926 ;;Total ram usage:        4 bytes
  8927 ;; Hardware stack levels used: 1
  8928 ;; Hardware stack levels required when called: 3
  8929 ;; This function calls:
  8930 ;;		_i2c_start
  8931 ;;		_i2c_stop
  8932 ;;		_i2c_write
  8933 ;; This function is called by:
  8934 ;;		_init_config
  8935 ;;		_event_capture
  8936 ;;		_change_pass
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text48
  8941   002356                     __ptext48:
  8942                           	callstack 0
  8943   002356                     _write_external_eeprom:
  8944                           	callstack 26
  8945                           
  8946                           ;incstack = 0
  8947                           ;write_external_eeprom@address stored from wreg
  8948   002356  6E05               	movwf	write_external_eeprom@address^0,c
  8949   002358                     
  8950                           ;ext_eeprom.c: 11: void write_external_eeprom(unsigned char address, unsigned char data)
      +                          ;ext_eeprom.c: 12: {;ext_eeprom.c: 13:  i2c_start();
  8951   002358  ECFA  F012         	call	_i2c_start	;wreg free
  8952   00235C                     
  8953                           ;ext_eeprom.c: 14:  i2c_write(0xA0);
  8954   00235C  0EA0               	movlw	160
  8955   00235E  ECE4  F012         	call	_i2c_write
  8956   002362                     
  8957                           ;ext_eeprom.c: 15:  i2c_write(address);
  8958   002362  5005               	movf	write_external_eeprom@address^0,w,c
  8959   002364  ECE4  F012         	call	_i2c_write
  8960   002368                     
  8961                           ;ext_eeprom.c: 16:  i2c_write(data);
  8962   002368  5002               	movf	write_external_eeprom@data^0,w,c
  8963   00236A  ECE4  F012         	call	_i2c_write
  8964   00236E                     
  8965                           ;ext_eeprom.c: 17:  i2c_stop();
  8966   00236E  ECF6  F012         	call	_i2c_stop	;wreg free
  8967   002372                     
  8968                           ;ext_eeprom.c: 18:  for(unsigned int i = 3000;i--;);
  8969   002372  0E0B               	movlw	11
  8970   002374  6E04               	movwf	(write_external_eeprom@i+1)^0,c
  8971   002376  0EB8               	movlw	184
  8972   002378  6E03               	movwf	write_external_eeprom@i^0,c
  8973   00237A                     l3108:
  8974   00237A  0603               	decf	write_external_eeprom@i^0,f,c
  8975   00237C  A0D8               	btfss	status,0,c
  8976   00237E  0604               	decf	(write_external_eeprom@i+1)^0,f,c
  8977   002380  2803               	incf	write_external_eeprom@i^0,w,c
  8978   002382  E106               	bnz	u2001
  8979   002384  2804               	incf	(write_external_eeprom@i+1)^0,w,c
  8980   002386  A4D8               	btfss	status,2,c
  8981   002388  EFC8  F011         	goto	u2001
  8982   00238C  EFCA  F011         	goto	u2000
  8983   002390                     u2001:
  8984   002390  EFBD  F011         	goto	l3108
  8985   002394                     u2000:
  8986   002394  0012               	return		;funcret
  8987   002396                     __end_of_write_external_eeprom:
  8988                           	callstack 0
  8989                           
  8990 ;; *************** function _i2c_write *****************
  8991 ;; Defined at:
  8992 ;;		line 54 in file "i2c.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  data            1    wreg     unsigned char 
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;  data            1    0[COMRAM] unsigned char 
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  1    wreg      void 
  8999 ;; Registers used:
  9000 ;;		wreg, cstack
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9006 ;;      Params:         0       0       0       0       0       0       0
  9007 ;;      Locals:         1       0       0       0       0       0       0
  9008 ;;      Temps:          0       0       0       0       0       0       0
  9009 ;;      Totals:         1       0       0       0       0       0       0
  9010 ;;Total ram usage:        1 bytes
  9011 ;; Hardware stack levels used: 1
  9012 ;; Hardware stack levels required when called: 2
  9013 ;; This function calls:
  9014 ;;		_i2c_idle
  9015 ;; This function is called by:
  9016 ;;		_write_ds1307
  9017 ;;		_read_ds1307
  9018 ;;		_write_external_eeprom
  9019 ;;		_read_external_eeprom
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           	psect	text49
  9024   0025C8                     __ptext49:
  9025                           	callstack 0
  9026   0025C8                     _i2c_write:
  9027                           	callstack 26
  9028                           
  9029                           ;incstack = 0
  9030                           ;i2c_write@data stored from wreg
  9031   0025C8  6E01               	movwf	i2c_write@data^0,c
  9032   0025CA                     
  9033                           ;i2c.c: 54: void i2c_write(unsigned char data);i2c.c: 55: {;i2c.c: 56:  SSPBUF = data;
  9034   0025CA  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  9035   0025CE                     
  9036                           ;i2c.c: 57:  i2c_idle();
  9037   0025CE  ECDB  F012         	call	_i2c_idle	;wreg free
  9038   0025D2  0012               	return		;funcret
  9039   0025D4                     __end_of_i2c_write:
  9040                           	callstack 0
  9041                           
  9042 ;; *************** function _i2c_stop *****************
  9043 ;; Defined at:
  9044 ;;		line 42 in file "i2c.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;		None
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;		None
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  1    wreg      void 
  9051 ;; Registers used:
  9052 ;;		cstack
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9058 ;;      Params:         0       0       0       0       0       0       0
  9059 ;;      Locals:         0       0       0       0       0       0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0
  9061 ;;      Totals:         0       0       0       0       0       0       0
  9062 ;;Total ram usage:        0 bytes
  9063 ;; Hardware stack levels used: 1
  9064 ;; Hardware stack levels required when called: 2
  9065 ;; This function calls:
  9066 ;;		_i2c_idle
  9067 ;; This function is called by:
  9068 ;;		_write_ds1307
  9069 ;;		_read_ds1307
  9070 ;;		_write_external_eeprom
  9071 ;;		_read_external_eeprom
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           	psect	text50
  9076   0025EC                     __ptext50:
  9077                           	callstack 0
  9078   0025EC                     _i2c_stop:
  9079                           	callstack 26
  9080   0025EC                     
  9081                           ;i2c.c: 44:  PEN = 1;
  9082   0025EC  84C5               	bsf	4037,2,c	;volatile
  9083   0025EE                     
  9084                           ;i2c.c: 45:  i2c_idle();
  9085   0025EE  ECDB  F012         	call	_i2c_idle	;wreg free
  9086   0025F2  0012               	return		;funcret
  9087   0025F4                     __end_of_i2c_stop:
  9088                           	callstack 0
  9089                           
  9090 ;; *************** function _i2c_start *****************
  9091 ;; Defined at:
  9092 ;;		line 36 in file "i2c.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;		None
  9095 ;; Auto vars:     Size  Location     Type
  9096 ;;		None
  9097 ;; Return value:  Size  Location     Type
  9098 ;;                  1    wreg      void 
  9099 ;; Registers used:
  9100 ;;		cstack
  9101 ;; Tracked objects:
  9102 ;;		On entry : 0/0
  9103 ;;		On exit  : 0/0
  9104 ;;		Unchanged: 0/0
  9105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9106 ;;      Params:         0       0       0       0       0       0       0
  9107 ;;      Locals:         0       0       0       0       0       0       0
  9108 ;;      Temps:          0       0       0       0       0       0       0
  9109 ;;      Totals:         0       0       0       0       0       0       0
  9110 ;;Total ram usage:        0 bytes
  9111 ;; Hardware stack levels used: 1
  9112 ;; Hardware stack levels required when called: 2
  9113 ;; This function calls:
  9114 ;;		_i2c_idle
  9115 ;; This function is called by:
  9116 ;;		_write_ds1307
  9117 ;;		_read_ds1307
  9118 ;;		_write_external_eeprom
  9119 ;;		_read_external_eeprom
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122                           
  9123                           	psect	text51
  9124   0025F4                     __ptext51:
  9125                           	callstack 0
  9126   0025F4                     _i2c_start:
  9127                           	callstack 26
  9128   0025F4                     
  9129                           ;i2c.c: 38:  SEN = 1;
  9130   0025F4  80C5               	bsf	4037,0,c	;volatile
  9131   0025F6                     
  9132                           ;i2c.c: 39:  i2c_idle();
  9133   0025F6  ECDB  F012         	call	_i2c_idle	;wreg free
  9134   0025FA  0012               	return		;funcret
  9135   0025FC                     __end_of_i2c_start:
  9136                           	callstack 0
  9137                           
  9138 ;; *************** function _i2c_idle *****************
  9139 ;; Defined at:
  9140 ;;		line 22 in file "i2c.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;		None
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;		None
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  1    wreg      void 
  9147 ;; Registers used:
  9148 ;;		None
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9154 ;;      Params:         0       0       0       0       0       0       0
  9155 ;;      Locals:         0       0       0       0       0       0       0
  9156 ;;      Temps:          0       0       0       0       0       0       0
  9157 ;;      Totals:         0       0       0       0       0       0       0
  9158 ;;Total ram usage:        0 bytes
  9159 ;; Hardware stack levels used: 1
  9160 ;; Hardware stack levels required when called: 1
  9161 ;; This function calls:
  9162 ;;		Nothing
  9163 ;; This function is called by:
  9164 ;;		_i2c_start
  9165 ;;		_i2c_stop
  9166 ;;		_i2c_rep_start
  9167 ;;		_i2c_write
  9168 ;;		_i2c_rx_mode
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           	psect	text52
  9173   0025B6                     __ptext52:
  9174                           	callstack 0
  9175   0025B6                     _i2c_idle:
  9176                           	callstack 26
  9177   0025B6                     l567:
  9178   0025B6  A69E               	btfss	3998,3,c	;volatile
  9179   0025B8  EFE0  F012         	goto	u1991
  9180   0025BC  EFE2  F012         	goto	u1990
  9181   0025C0                     u1991:
  9182   0025C0  EFDB  F012         	goto	l567
  9183   0025C4                     u1990:
  9184   0025C4                     
  9185                           ;i2c.c: 25:  SSPIF = 0;
  9186   0025C4  969E               	bcf	3998,3,c	;volatile
  9187   0025C6  0012               	return		;funcret
  9188   0025C8                     __end_of_i2c_idle:
  9189                           	callstack 0
  9190                           
  9191 ;; *************** function _isr *****************
  9192 ;; Defined at:
  9193 ;;		line 6 in file "isr.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;		None
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;		None
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  1    wreg      void 
  9200 ;; Registers used:
  9201 ;;		wreg, status,2, status,0
  9202 ;; Tracked objects:
  9203 ;;		On entry : 0/0
  9204 ;;		On exit  : 0/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9207 ;;      Params:         0       0       0       0       0       0       0
  9208 ;;      Locals:         0       0       0       0       0       0       0
  9209 ;;      Temps:          0       0       0       0       0       0       0
  9210 ;;      Totals:         0       0       0       0       0       0       0
  9211 ;;Total ram usage:        0 bytes
  9212 ;; Hardware stack levels used: 1
  9213 ;; This function calls:
  9214 ;;		Nothing
  9215 ;; This function is called by:
  9216 ;;		Interrupt level 2
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	intcode
  9221   000008                     __pintcode:
  9222                           	callstack 0
  9223   000008                     _isr:
  9224                           	callstack 23
  9225                           
  9226                           ;incstack = 0
  9227   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9228   00000A  EDF4  F010         	call	int_func,f	;refresh shadow registers
  9229                           
  9230                           	psect	intcode_body
  9231   0021E8                     __pintcode_body:
  9232                           	callstack 23
  9233   0021E8                     int_func:
  9234                           	callstack 23
  9235   0021E8  0006               	pop		; remove dummy address from shadow register refresh
  9236   0021EA                     
  9237                           ;isr.c: 8:  static unsigned short count;;isr.c: 10:  if (TMR0IF)
  9238   0021EA  A4F2               	btfss	4082,2,c	;volatile
  9239   0021EC  EFFA  F010         	goto	i2u377_41
  9240   0021F0  EFFC  F010         	goto	i2u377_40
  9241   0021F4                     i2u377_41:
  9242   0021F4  EF19  F011         	goto	i2l718
  9243   0021F8                     i2u377_40:
  9244   0021F8                     
  9245                           ;isr.c: 11:  {;isr.c: 12:   TMR0 = TMR0 + 8;
  9246   0021F8  0E08               	movlw	8
  9247   0021FA  24D6               	addwf	214,w,c	;volatile
  9248   0021FC  6ED6               	movwf	214,c	;volatile
  9249   0021FE  0E00               	movlw	0
  9250   002200  20D7               	addwfc	215,w,c	;volatile
  9251   002202  6ED7               	movwf	215,c	;volatile
  9252                           
  9253                           ;isr.c: 14:   if (count++ == 20000)
  9254   002204  0100               	movlb	0	; () banked
  9255   002206  4B79               	infsnz	isr@count& (0+255),f,b
  9256   002208  2B7A               	incf	(isr@count+1)& (0+255),f,b
  9257   00220A  0E21               	movlw	33
  9258   00220C  1979               	xorwf	isr@count& (0+255),w,b
  9259   00220E  E107               	bnz	i2u378_41
  9260   002210  0E4E               	movlw	78
  9261   002212  197A               	xorwf	(isr@count+1)& (0+255),w,b
  9262   002214  A4D8               	btfss	status,2,c
  9263   002216  EF0F  F011         	goto	i2u378_41
  9264   00221A  EF11  F011         	goto	i2u378_40
  9265   00221E                     i2u378_41:
  9266   00221E  EF18  F011         	goto	i2l4604
  9267   002222                     i2u378_40:
  9268   002222                     
  9269                           ; BSR set to: 0
  9270                           ;isr.c: 15:   {;isr.c: 16:    count = 0;
  9271   002222  0E00               	movlw	0
  9272   002224  6F7A               	movwf	(isr@count+1)& (0+255),b
  9273   002226  0E00               	movlw	0
  9274   002228  6F79               	movwf	isr@count& (0+255),b
  9275   00222A                     
  9276                           ; BSR set to: 0
  9277                           ;isr.c: 17:             seconds--;
  9278   00222A  065A               	decf	_seconds^0,f,c
  9279   00222C  A0D8               	btfss	status,0,c
  9280   00222E  065B               	decf	(_seconds+1)^0,f,c
  9281   002230                     i2l4604:
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;isr.c: 19:   TMR0IF = 0;
  9285   002230  94F2               	bcf	4082,2,c	;volatile
  9286   002232                     i2l718:
  9287   002232  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9288   002234  0011               	retfie		f
  9289   002236                     __end_of_isr:
  9290                           	callstack 0
  9291                           
  9292                           	psect	rparam
  9293   000000                     
  9294                           	psect	temp
  9295   00005D                     btemp:
  9296                           	callstack 0
  9297   00005D                     	ds	1
  9298   000000                     int$flags	set	btemp
  9299   000000                     wtemp8	set	btemp+1
  9300   000000                     ttemp5	set	btemp+1
  9301   000000                     ttemp6	set	btemp+4
  9302   000000                     ttemp7	set	btemp+8
  9303                           
  9304                           	psect	idloc
  9305                           
  9306                           ;Config register IDLOC0 @ 0x200000
  9307                           ;	unspecified, using default values
  9308   200000                     	org	2097152
  9309   200000  FF                 	db	255
  9310                           
  9311                           ;Config register IDLOC1 @ 0x200001
  9312                           ;	unspecified, using default values
  9313   200001                     	org	2097153
  9314   200001  FF                 	db	255
  9315                           
  9316                           ;Config register IDLOC2 @ 0x200002
  9317                           ;	unspecified, using default values
  9318   200002                     	org	2097154
  9319   200002  FF                 	db	255
  9320                           
  9321                           ;Config register IDLOC3 @ 0x200003
  9322                           ;	unspecified, using default values
  9323   200003                     	org	2097155
  9324   200003  FF                 	db	255
  9325                           
  9326                           ;Config register IDLOC4 @ 0x200004
  9327                           ;	unspecified, using default values
  9328   200004                     	org	2097156
  9329   200004  FF                 	db	255
  9330                           
  9331                           ;Config register IDLOC5 @ 0x200005
  9332                           ;	unspecified, using default values
  9333   200005                     	org	2097157
  9334   200005  FF                 	db	255
  9335                           
  9336                           ;Config register IDLOC6 @ 0x200006
  9337                           ;	unspecified, using default values
  9338   200006                     	org	2097158
  9339   200006  FF                 	db	255
  9340                           
  9341                           ;Config register IDLOC7 @ 0x200007
  9342                           ;	unspecified, using default values
  9343   200007                     	org	2097159
  9344   200007  FF                 	db	255
  9345                           
  9346                           	psect	config
  9347                           
  9348                           ; Padding undefined space
  9349   300000                     	org	3145728
  9350   300000  FF                 	db	255
  9351                           
  9352                           ;Config register CONFIG1H @ 0x300001
  9353                           ;	unspecified, using default values
  9354                           ;	Oscillator Selection bits
  9355                           ;	OSC = 0x7, unprogrammed default
  9356                           ;	Fail-Safe Clock Monitor Enable bit
  9357                           ;	FCMEN = 0x0, unprogrammed default
  9358                           ;	Internal/External Oscillator Switchover bit
  9359                           ;	IESO = 0x0, unprogrammed default
  9360   300001                     	org	3145729
  9361   300001  07                 	db	7
  9362                           
  9363                           ;Config register CONFIG2L @ 0x300002
  9364                           ;	unspecified, using default values
  9365                           ;	Power-up Timer Enable bit
  9366                           ;	PWRT = 0x1, unprogrammed default
  9367                           ;	Brown-out Reset Enable bits
  9368                           ;	BOREN = 0x3, unprogrammed default
  9369                           ;	Brown-out Reset Voltage bits
  9370                           ;	BORV = 0x3, unprogrammed default
  9371   300002                     	org	3145730
  9372   300002  1F                 	db	31
  9373                           
  9374                           ;Config register CONFIG2H @ 0x300003
  9375                           ;	unspecified, using default values
  9376                           ;	Watchdog Timer Enable bit
  9377                           ;	WDT = 0x1, unprogrammed default
  9378                           ;	Watchdog Timer Postscale Select bits
  9379                           ;	WDTPS = 0xF, unprogrammed default
  9380   300003                     	org	3145731
  9381   300003  1F                 	db	31
  9382                           
  9383                           ; Padding undefined space
  9384   300004                     	org	3145732
  9385   300004  FF                 	db	255
  9386                           
  9387                           ;Config register CONFIG3H @ 0x300005
  9388                           ;	unspecified, using default values
  9389                           ;	PORTB A/D Enable bit
  9390                           ;	PBADEN = 0x1, unprogrammed default
  9391                           ;	Low-Power Timer 1 Oscillator Enable bit
  9392                           ;	LPT1OSC = 0x0, unprogrammed default
  9393                           ;	MCLR Pin Enable bit
  9394                           ;	MCLRE = 0x1, unprogrammed default
  9395   300005                     	org	3145733
  9396   300005  82                 	db	130
  9397                           
  9398                           ;Config register CONFIG4L @ 0x300006
  9399                           ;	unspecified, using default values
  9400                           ;	Stack Full/Underflow Reset Enable bit
  9401                           ;	STVREN = 0x1, unprogrammed default
  9402                           ;	Single-Supply ICSP Enable bit
  9403                           ;	LVP = 0x1, unprogrammed default
  9404                           ;	Boot Block Size Select bit
  9405                           ;	BBSIZ = 0x0, unprogrammed default
  9406                           ;	Extended Instruction Set Enable bit
  9407                           ;	XINST = 0x0, unprogrammed default
  9408                           ;	Background Debugger Enable bit
  9409                           ;	DEBUG = 0x1, unprogrammed default
  9410   300006                     	org	3145734
  9411   300006  85                 	db	133
  9412                           
  9413                           ; Padding undefined space
  9414   300007                     	org	3145735
  9415   300007  FF                 	db	255
  9416                           
  9417                           ;Config register CONFIG5L @ 0x300008
  9418                           ;	unspecified, using default values
  9419                           ;	Code Protection bit
  9420                           ;	CP0 = 0x1, unprogrammed default
  9421                           ;	Code Protection bit
  9422                           ;	CP1 = 0x1, unprogrammed default
  9423                           ;	Code Protection bit
  9424                           ;	CP2 = 0x1, unprogrammed default
  9425                           ;	Code Protection bit
  9426                           ;	CP3 = 0x1, unprogrammed default
  9427   300008                     	org	3145736
  9428   300008  0F                 	db	15
  9429                           
  9430                           ;Config register CONFIG5H @ 0x300009
  9431                           ;	unspecified, using default values
  9432                           ;	Boot Block Code Protection bit
  9433                           ;	CPB = 0x1, unprogrammed default
  9434                           ;	Data EEPROM Code Protection bit
  9435                           ;	CPD = 0x1, unprogrammed default
  9436   300009                     	org	3145737
  9437   300009  C0                 	db	192
  9438                           
  9439                           ;Config register CONFIG6L @ 0x30000A
  9440                           ;	unspecified, using default values
  9441                           ;	Write Protection bit
  9442                           ;	WRT0 = 0x1, unprogrammed default
  9443                           ;	Write Protection bit
  9444                           ;	WRT1 = 0x1, unprogrammed default
  9445                           ;	Write Protection bit
  9446                           ;	WRT2 = 0x1, unprogrammed default
  9447                           ;	Write Protection bit
  9448                           ;	WRT3 = 0x1, unprogrammed default
  9449   30000A                     	org	3145738
  9450   30000A  0F                 	db	15
  9451                           
  9452                           ;Config register CONFIG6H @ 0x30000B
  9453                           ;	unspecified, using default values
  9454                           ;	Configuration Register Write Protection bit
  9455                           ;	WRTC = 0x1, unprogrammed default
  9456                           ;	Boot Block Write Protection bit
  9457                           ;	WRTB = 0x1, unprogrammed default
  9458                           ;	Data EEPROM Write Protection bit
  9459                           ;	WRTD = 0x1, unprogrammed default
  9460   30000B                     	org	3145739
  9461   30000B  E0                 	db	224
  9462                           
  9463                           ;Config register CONFIG7L @ 0x30000C
  9464                           ;	unspecified, using default values
  9465                           ;	Table Read Protection bit
  9466                           ;	EBTR0 = 0x1, unprogrammed default
  9467                           ;	Table Read Protection bit
  9468                           ;	EBTR1 = 0x1, unprogrammed default
  9469                           ;	Table Read Protection bit
  9470                           ;	EBTR2 = 0x1, unprogrammed default
  9471                           ;	Table Read Protection bit
  9472                           ;	EBTR3 = 0x1, unprogrammed default
  9473   30000C                     	org	3145740
  9474   30000C  0F                 	db	15
  9475                           
  9476                           ;Config register CONFIG7H @ 0x30000D
  9477                           ;	unspecified, using default values
  9478                           ;	Boot Block Table Read Protection bit
  9479                           ;	EBTRB = 0x1, unprogrammed default
  9480   30000D                     	org	3145741
  9481   30000D  40                 	db	64
  9482                           tosu	equ	0xFFF
  9483                           tosh	equ	0xFFE
  9484                           tosl	equ	0xFFD
  9485                           stkptr	equ	0xFFC
  9486                           pclatu	equ	0xFFB
  9487                           pclath	equ	0xFFA
  9488                           pcl	equ	0xFF9
  9489                           tblptru	equ	0xFF8
  9490                           tblptrh	equ	0xFF7
  9491                           tblptrl	equ	0xFF6
  9492                           tablat	equ	0xFF5
  9493                           prodh	equ	0xFF4
  9494                           prodl	equ	0xFF3
  9495                           indf0	equ	0xFEF
  9496                           postinc0	equ	0xFEE
  9497                           postdec0	equ	0xFED
  9498                           preinc0	equ	0xFEC
  9499                           plusw0	equ	0xFEB
  9500                           fsr0h	equ	0xFEA
  9501                           fsr0l	equ	0xFE9
  9502                           wreg	equ	0xFE8
  9503                           indf1	equ	0xFE7
  9504                           postinc1	equ	0xFE6
  9505                           postdec1	equ	0xFE5
  9506                           preinc1	equ	0xFE4
  9507                           plusw1	equ	0xFE3
  9508                           fsr1h	equ	0xFE2
  9509                           fsr1l	equ	0xFE1
  9510                           bsr	equ	0xFE0
  9511                           indf2	equ	0xFDF
  9512                           postinc2	equ	0xFDE
  9513                           postdec2	equ	0xFDD
  9514                           preinc2	equ	0xFDC
  9515                           plusw2	equ	0xFDB
  9516                           fsr2h	equ	0xFDA
  9517                           fsr2l	equ	0xFD9
  9518                           status	equ	0xFD8

Data Sizes:
    Strings     539
    Constant    0
    Data        62
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      92
    BANK0           160      0     137
    BANK1           256      0      34
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 5
		 -> new_pd(BANK0[5]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 5
		 -> new_pd(BANK0[5]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 5
		 -> new_pd(BANK0[5]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> new_pd(BANK0[5]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 5
		 -> pass(BANK0[5]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> old_pd(BANK0[5]), password(BANK0[5]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_38(CODE[2]), STR_37(CODE[25]), STR_36(CODE[35]), 

    speed_display@speed	PTR unsigned char  size(2) Largest target is 3
		 -> speed(BANK0[3]), 

    view_log@vlog	PTR unsigned char [17] size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main_menu	PTR unsigned char [6] size(2) Largest target is 17
		 -> STR_19(CODE[13]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[13]), 
		 -> STR_15(CODE[17]), 

    arr	PTR unsigned char [15] size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_59(CODE[21]), STR_58(CODE[13]), STR_57(CODE[17]), STR_52(CODE[7]), 
		 -> STR_51(CODE[18]), STR_50(CODE[13]), STR_49(CODE[17]), STR_48(CODE[16]), 
		 -> STR_47(CODE[14]), STR_46(CODE[19]), STR_44(CODE[16]), STR_41(CODE[12]), 
		 -> STR_40(CODE[12]), STR_39(CODE[19]), STR_35(CODE[17]), STR_34(CODE[15]), 
		 -> STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[15]), STR_30(CODE[12]), 
		 -> STR_29(CODE[15]), STR_28(CODE[9]), STR_27(CODE[17]), STR_26(CODE[17]), 
		 -> STR_25(CODE[17]), STR_24(CODE[17]), STR_23(CODE[17]), speed(BANK0[3]), 
		 -> time(BANK0[9]), STR_22(CODE[5]), STR_21(CODE[10]), STR_20(CODE[16]), 
		 -> STR_19(CODE[13]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[13]), 
		 -> STR_15(CODE[17]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_default_screen
    _view_log->_clcd_putch
    _menu->_clcd_putch
    _login->_blink
    _timeout->_clcd_putch
    _blink->_clcd_putch
    _init_config->_write_external_eeprom
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _download_log->_car_log
    _puts->_putch
    _default_screen->_speed_display
    _speed_display->___fltol
    ___lwmod->___lwdiv
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _event->_car_log
    _clear_log->_clcd_print
    _change_pass->_strncmp
    _get_pass->_read_external_eeprom
    _read_external_eeprom->_i2c_write
    _clcd_putch->___awdiv
    _clcd_print->_clcd_write
    _car_log->_event_capture
    _event_capture->_write_external_eeprom
    _write_external_eeprom->_i2c_write

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  143855
                        _change_pass
                          _clear_log
                     _default_screen
                       _download_log
                        _init_config
                              _login
                               _menu
                      _read_switches
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                            39    39      0   17177
                                             10 COMRAM    39    39      0
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      30
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menu                                                 1     1      0   16805
                                             10 COMRAM     1     1      0
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _login                                               17    17      0   38089
                                             12 COMRAM    17    17      0
                              _blink
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                           _clr_pass
                           _get_pass
                             _strcmp
                            _timeout
 ---------------------------------------------------------------------------------
 (2) _timeout                                              0     0      0   17103
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                           _clr_pass
 ---------------------------------------------------------------------------------
 (3) _clr_pass                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _blink                                                2     0      2    4768
                                             10 COMRAM     2     0      2
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    3505
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     484
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     370
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    2400
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                        25    25      0   18478
                                             11 COMRAM    25    25      0
                            ___awmod
                            _car_log
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                          _init_uart
                              _putch
                               _puts
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     295
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _default_screen                                       1     1      0   20879
                                             51 COMRAM     1     1      0
                         _clcd_print
                              _event
                           _get_time
                      _speed_display
 ---------------------------------------------------------------------------------
 (2) _speed_display                                        2     0      2    3044
                                             49 COMRAM     2     0      2
                            ___fldiv
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                           _read_adc
 ---------------------------------------------------------------------------------
 (3) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _event                                                1     1      0    9351
                                             11 COMRAM     1     1      0
                            _car_log
                         _clcd_print
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            6     6      0   10886
                                              5 COMRAM     6     6      0
                         _clcd_print
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _change_pass                                         20    20      0   18006
                            _car_log
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                           _get_pass
                             _strcmp
                            _strncmp
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _strncmp                                             12     6      6     453
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     2      4     416
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _get_pass                                             2     2      0     157
                                              3 COMRAM     2     2      0
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    4648
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    8395
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    2400
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _car_log                                              4     4      0     824
                                              7 COMRAM     4     4      0
                      _event_capture
 ---------------------------------------------------------------------------------
 (3) _event_capture                                        2     2      0     734
                                              5 COMRAM     2     2      0
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_external_eeprom                                4     3      1     621
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change_pass
     _car_log
       _event_capture
         _write_external_eeprom
           _i2c_start
             _i2c_idle
           _i2c_stop
             _i2c_idle
           _i2c_write
             _i2c_idle
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
       _clcd_write (ARG)
     _clcd_write
     _get_pass
       _read_external_eeprom
         _i2c_read
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
         _i2c_stop
         _i2c_write
     _strcmp
     _strncmp
     _write_external_eeprom
   _clear_log
     _clcd_print
     _clcd_write
   _default_screen
     _clcd_print
     _event
       _car_log
       _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
         _i2c_rep_start
         _i2c_start
         _i2c_stop
         _i2c_write
     _speed_display
       ___fldiv
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___xxtofl
       _read_adc
   _download_log
     ___awmod
     _car_log
     _clcd_print
     _clcd_putch
     _clcd_write
     _init_uart
     _putch
     _puts
       _putch
     _read_external_eeprom
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
     _init_timer0
     _write_external_eeprom
   _login
     _blink
       _clcd_putch
     _clcd_print
     _clcd_putch
     _clcd_write
     _clr_pass
     _get_pass
     _strcmp
     _timeout
       ___awdiv
       ___awmod
       _clcd_print
       _clcd_putch
       _clcd_write
       _clr_pass
   _menu
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
   _read_switches
     _scan_key
   _view_log
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_external_eeprom

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
BITBIGSFRl         281      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      22       7       13.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      89       5       85.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      5C       1       97.9%
BITBIGSFRhhhlhh     19      0       0      17        0.0%
BITBIGSFRhl          F      0       0      24        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRhhhlhl      A      0       0      18        0.0%
BITBIGSFRhhlhhl      9      0       0      21        0.0%
BITBIGSFRhhlhhh      8      0       0      20        0.0%
BITBIGSFRhhlhhh      7      0       0      19        0.0%
BITBIGSFRhhll        7      0       0      23        0.0%
BITBIGSFRhhlhl       2      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     107      26        0.0%
DATA                 0      0     107       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jan 20 14:23:29 2024

                 ___fldiv@aexp 0027                   ___fldiv@bexp 0026                              _i 004D  
                            _k 0037                              _l 0035                              _x 00DE  
                 ___fldiv@sign 001F          _write_external_eeprom 2356                 clcd_print@addr 0005  
               clcd_print@data 0003                             l22 2408                             l23 240C  
                           l32 2182                             l26 1DD2                             l35 254E  
                           l51 152A                             l60 15BC                             l52 1616  
                           l61 1594                             l53 1566                             l70 1600  
                           l54 153E                             l63 15A8                             l48 25B4  
                           l56 1552                             l81 1F52                             l66 15D8  
                           l59 1580                             l68 15EC                             l69 1614  
                           _GO 7E11                   ___awdiv@sign 0006                             _cr 0099  
           _init_matrix_keypad 25A4                            l124 2280                            l140 1508  
                          l310 0EB0                            l313 22CA                            l411 10B4  
                          l251 258E                            l326 1402                            l406 0F66  
                          l335 20AA                            l248 23D2                            l440 1772  
                          l264 1E58                            l329 1B10                            l443 17F6  
                          l419 1C7A                            l523 2518                            l259 198E  
                          l284 1BC8                            l612 2354                            l349 0240  
                          l526 22E4                            l279 1EDC                            l615 2536  
                          l368 0440                            l529 2310                            l377 067A  
                          l570 25C6                            l634 2394                            l490 17F6  
                          l618 24CE                            l395 0850                            l580 25F2  
                          l564 2564                            l637 24F8                            l733 25A2  
                          l567 25B6                            l583 25DA                            l569 25C4  
                          l577 25FA                            l586 25D2                            l682 24A4  
                          l595 25E2                            l589 25EA                            l685 2568  
                          l694 247A                            _CKE 7E3E                            l688 257A  
                          l980 1D2A                            l967 1A52                            _GIE 7F97  
                          _RC0 7C10                            _RC1 7C11                            _RC2 7C12  
                          _RD7 7C1F                            _PEN 7E2A                            u800 15B6  
                          u801 15B2                            u810 15D2                            u730 1524  
                          u811 15CE                            u731 1520                            u820 15E6  
                          u740 1538                            _SEN 7E28                            u821 15E2  
                          u741 1534                            u830 15FA                            u750 154C  
                          u831 15F6                            u751 1548                            _PSA 7EAB  
                          u840 160E                            u760 1560                            u841 160A  
                          u761 155C                            u770 157A                            u771 1576  
                          u780 158E                            u781 158A                            u790 15A2  
                          u791 159E                            _RX9 7D5E                            _SMP 7E3F  
                          _TX9 7D66                            _WUE 7DC1                            _arr 00B2  
                          _idx 0045                            _key 0054                            _log 0060  
                          _sec 007D                            _isr 0008                 clcd_putch@addr 0009  
                          _pos 0058                 clcd_putch@data 000A                   ___awmod@sign 0006  
                          wreg 0FE8            ?_init_matrix_keypad 0001                   ___fltol@exp1 0031  
              ??_speed_display 0034                           l2000 154C                           l1033 171C  
                         l2010 157A                           l2022 15A2                           l2006 1560  
                         l1320 0A4A                           l2032 15D2                           l2016 158E  
                         l1234 1FC6                           l2050 160E                           l1331 0B08  
                         l1323 0A0E                           l1227 1FBE                           l3100 2362  
                         l1332 0AF6                           l1244 21E6                           l2060 250E  
                         l2044 15FA                           l2028 15B6                           l2300 1F38  
                         l1237 21DE                           l1405 1200                           l3102 2368  
                         l3110 25E4                           l1318 0BEA                           l2062 2516  
                         l2070 255E                           l2054 1614                           l2038 15E6  
                         l2302 1F48                           l1415 2116                           l3104 236E  
                         l3120 23EE                           l3112 25E6                           l3200 24BC  
                         l2072 2560                           l2064 2550                           l4000 0444  
                         l1329 0A90                           l3106 2372                           l3130 23F8  
                         l3122 23F0                           l3114 23D6                           l3202 24C8  
                         l2058 24FA                           l2074 2562                           l2066 2554  
                         l2090 2590                           l4010 04BE                           l4002 0456  
                         l2306 1F50                           l1419 18C4                           l3108 237A  
                         l3140 1E8E                           l3220 1B60                           l3212 1B1A  
                         l3132 23FA                           l3124 23F2                           l3116 23E8  
                         l3300 0950                           l2068 255C                           l2092 2598  
                         l4100 07DC                           l4020 0538                           l4012 04E0  
                         l4004 0466                           l3150 1EAC                           l3134 1E5A  
                         l3222 1B80                           l3214 1B36                           l3206 1B12  
                         l3126 23F4                           l3118 23EC                           l3230 22CE  
                         l2094 25A0                           l4110 0808                           l4102 07E6  
                         l4030 057C                           l4022 0548                           l4014 0502  
                         l4006 0488                           l1391 110C                           l3152 1EBC  
                         l3136 1E74                           l3224 1BB8                           l3216 1B3A  
                         l3128 23F6                           l3160 25DC                           l3320 09D2  
                         l3312 0988                           l3304 0964                           l3232 22E2  
                         l3240 2568                           l3400 19AE                           l4120 0830  
                         l4112 0810                           l4104 07EE                           l4040 05D0  
                         l4032 0584                           l4024 054C                           l4016 0514  
                         l4008 04AE                           l4200 0E24                           l3082 25B6  
                         l3090 25EE                           l3154 1ED8                           l3146 1E92  
                         l3138 1E84                           l3226 1BBC                           l3218 1B56  
                         l3170 214E                           l3162 25E0                           l3330 0A18  
                         l3322 09DA                           l3314 09A2                           l3306 0974  
                         l1394 1268                           l3234 22F2                           l3242 2576  
                         l3250 252C                           l3410 19E2                           l3402 19BC  
                         l4122 0838                           l4114 0818                           l4106 07F6  
                         l4050 0610                           l4042 05D8                           l4034 05A4  
                         l4026 0552                           l4018 0526                           l2290 1F16  
                         l2282 1EE0                           l4210 0E56                           l4202 0E2E  
                         l4130 0BF8                           l3084 25F4                           l3092 25CA  
                         l3148 1EAA                           l3228 1BC4                           l3172 2152  
                         l3156 25D4                           l3180 24DC                           l3340 0A70  
                         l3332 0A36                           l3324 09EA                           l3316 09B2  
                         l3308 0974                           l3260 086E                           l3236 2308  
                         l4300 0FE8                           l3252 2532                           l3244 251C  
                         l3420 1A1C                           l3412 19EA                           l3404 19C4  
                         l4124 0840                           l4116 0820                           l4108 0800  
                         l4052 0624                           l4044 05EC                           l4036 05B6  
                         l4028 056A                           l4060 067E                           l2284 1EF0  
                         l4220 0E88                           l4212 0E60                           l4204 0E38  
                         l4140 0C4C                           l4132 0C0C                           l3086 25F6  
                         l3094 25CE                           l3166 2118                           l3174 253A  
                         l3158 25D6                           l3182 24E2                           l4230 1BD4  
                         l3350 0AAE                           l3342 0A76                           l3334 0A38  
                         l3326 09FE                           l3318 09C2                           l3262 087E  
                         l3270 08A8                           l3254 0852                           l3510 16FC  
                         l1398 11A4                           l4310 1006                           l4302 0FEE  
                         l3246 2520                           l3430 1A42                           l3422 1A24  
                         l3414 19F2                           l3406 19C8                           l3190 257C  
                         l4126 0848                           l4118 0828                           l4070 06C8  
                         l4062 0690                           l4046 05F4                           l4038 05BE  
                         l4054 0630                           l2286 1EF6                           l4222 0E92  
                         l4214 0E6A                           l4206 0E42                           l4150 0C8C  
                         l4142 0C52                           l4134 0C18                           l3088 25EC  
                         l3096 2358                           l3168 2126                           l3184 24E6  
                         l3176 24D2                           l4240 1BEE                           l4232 1BDC  
                         l3192 24A8                           l3360 0B18                           l3352 0AB2  
                         l3344 0A80                           l3336 0A48                           l3328 0A0C  
                         l3280 08D4                           l3272 08B8                           l3264 088E  
                         l3256 085E                           l3512 170C                           l3504 16D0  
                         l3520 1F6E                           l3440 1C8E                           l4320 1024  
                         l4312 100C                           l4304 0FF4                           l3600 1D2C  
                         l3248 2526                           l3432 1A4A                           l3424 1A26  
                         l3416 1A00                           l3408 19D0                           l4080 0724  
                         l4072 06E4                           l4064 06A6                           l4056 0642  
                         l4048 0608                           l2288 1F06                           l2296 1F20  
                         l4224 0E9C                           l4216 0E74                           l4208 0E4C  
                         l4160 0CD8                           l4144 0C68                           l4152 0C98  
                         l4136 0C38                           l4128 0BEC                           l3098 235C  
                         l3186 24F2                           l3178 24D6                           l4250 1C4C  
                         l4242 1BFC                           l4234 1BE6                           l3194 24AC  
                         l3370 0B7A                           l3362 0B24                           l3354 0AC0  
                         l3346 0A8E                           l3338 0A5A                           l3282 08E4  
                         l3290 090E                           l3274 08BE                           l3266 089E  
                         l3258 086C                           l3506 16DC                           l3530 1FA8  
                         l3522 1F76                           l3450 1CC2                           l3442 1C96  
                         l4330 1042                           l4322 102A                           l4314 1012  
                         l4306 0FFA                           l3610 1D52                           l3602 1D30  
                         l3426 1A2C                           l3418 1A06                           l4090 0782  
                         l4074 0700                           l4082 0732                           l4066 06AE  
                         l4058 066C                           l2298 1F30                           l4226 0EA6  
                         l4218 0E7E                           l4162 0CEC                           l4170 0D3E  
                         l4154 0CAA                           l4146 0C70                           l4138 0C48  
                         l4252 1C72                           l4244 1C00                           l4228 1BCA  
                         l3196 24B2                           l3700 1E3E                           l3380 0BD8  
                         l3372 0B90                           l3364 0B32                           l3356 0AEE  
                         l3348 0AA0                           l3292 091E                           l3284 08F4  
                         l3276 08C4                           l3268 08A0                           l3508 16EC  
                         l3532 1FB0                           l3524 1F7E                           l3516 1F54  
                         l3540 2196                           l3460 1CFE                           l3452 1CCA  
                         l3444 1C9A                           l3436 1C7C                           l4340 1092  
                         l4332 1048                           l4324 1030                           l4316 1018  
                         l4308 1000                           l4260 0ED6                           l3620 1D84  
                         l3612 1D62                           l3604 1D36                           l3428 1A32  
                         l4092 0788                           l4084 0746                           l4076 0704  
                         l4068 06B4                           l4172 0D52                           l4164 0D0A  
                         l4156 0CC0                           l4180 0D94                           l4148 0C82  
                         l4350 1740                           l4246 1C1C                           l3710 126C  
                         l3198 24B8                           l3702 1E54                           l3382 0BDE  
                         l3374 0BAA                           l3366 0B5C                           l3294 0934  
                         l3286 0904                           l3278 08D2                           l3534 1FB2  
                         l3526 1F8C                           l3518 1F5C                           l3550 21D2  
                         l3542 219E                           l3462 1D04                           l3454 1CD2  
                         l3446 1CA8                           l3438 1C80                           l4342 109C  
                         l4326 1036                           l4318 101E                           l4334 104E  
                         l4270 0F06                           l4262 0EDC                           l4254 0EB2  
                         l3630 1DB2                           l3622 1D8E                           l3614 1D6C  
                         l3606 1D38                           l4086 0760                           l4078 0720  
                         l4094 0796                           l4190 0DC6                           l4174 0D6C  
                         l4166 0D26                           l4158 0CC8                           l4182 0D9C  
                         l4360 176C                           l4352 174A                           l4248 1C3C  
                         l3720 12AC                           l3712 127E                           l3384 0BE0  
                         l3376 0BC6                           l3368 0B60                           l3296 0944  
                         l3288 0906                           l3480 166C                           l3472 1618  
                         l3536 1FB8                           l3528 1F92                           l3552 21D8  
                         l3544 21A6                           l3560 111C                           l3704 1A54  
                         l3456 1CE0                           l3464 1D0A                           l3448 1CB0  
                         l3800 249C                           l4344 10A4                           l4336 106C  
                         l4328 103C                           l4280 0F86                           l4272 0F22  
                         l4264 0EE0                           l4256 0EB6                           l3632 1DC0  
                         l3624 1D96                           l3616 1D74                           l3608 1D48  
                         l3640 2326                           l3392 1990                           l4088 0766  
                         l4096 079E                           l4192 0DD4                           l4184 0DBE  
                         l4176 0D7A                           l4168 0D2A                           l3650 2396  
                         l4370 1782                           l4354 174E                           l3722 12BE  
                         l3730 12E6                           l3714 128E                           l3378 0BCA  
                         l3298 094C                           l3482 166E                           l3474 162E  
                         l3546 21B4                           l3538 2184                           l3570 115A  
                         l3562 1132                           l3554 10B8                           l3706 1AB4  
                         l3466 1D1A                           l3458 1CF6                           l3802 249E  
                         l3810 244A                           l4346 10AC                           l4290 0FAE  
                         l4274 0F26                           l4338 1076                           l4266 0EE4  
                         l4258 0EC6                           l3634 1DCA                           l3626 1DA0  
                         l3618 1D7E                           l3642 232C                           l3394 1994  
                         l4098 07AE                           l4194 0DF8                           l4178 0D80  
                         l3660 23B6                           l4380 17B4                           l4372 1786  
                         l4356 1758                           l4348 171E                           l3740 1330  
                         l3732 12F8                           l3724 12D4                           l3716 1296  
                         l3484 167E                           l3548 21CA                           l3580 11E2  
                         l3572 118C                           l3556 10C8                           l3708 1AEA  
                         l3468 1D22                           l3804 24A0                           l3812 245A  
                         l4292 0FB2                           l4276 0F3A                           l4268 0EF2  
                         l3628 1DA8                           l3644 2336                           l3636 2312  
                         l1980 25A4                           l3396 19A2                           l3900 0110  
                         l4196 0DFC                           l3830 187E                           l3822 182E  
                         l4390 17EE                           l4382 17BE                           l4374 1786  
                         l4358 1768                           l3750 1366                           l3734 130A  
                         l3742 1334                           l3726 12DE                           l3718 129A  
                         l3494 16A8                           l3486 1682                           l3478 1642  
                         l3590 1238                           l3582 11F0                           l3574 118E  
                         l3566 1146                           l3558 10D6                           l3806 24A2  
                         l3814 245E                           l4294 0FCE                           l4286 0F8E  
                         l4278 0F46                           l3646 2340                           l3638 231A  
                         l1982 25AC                           l3398 19AA                           l3670 193C  
                         l3662 18C6                           l3910 0142                           l3902 0118  
                         l4198 0E18                           l4550 1408                           l3656 239E  
                         l3832 18A0                           l3824 183C                           l3816 17F8  
                         l4384 17D0                           l4376 1798                           l4368 1772  
                         l3760 139C                           l3744 1344                           l3752 136A  
                         l3736 1320                           l3728 12E2                           l3496 16B2  
                         l3488 1690                           l3592 1248                           l3584 120E  
                         l3576 119A                           l3568 114E                           l3808 2446  
                         l4296 0FD6                           l4288 0F9A                           l3648 2348  
                         l1984 25AE                           l3840 2242                           l3680 196E  
                         l3672 194E                           l3664 18CC                           l3920 019C  
                         l3912 0154                           l3904 0120                           l4560 1446  
                         l4552 141A                           l3658 23B2                           l3826 1854  
                         l3818 1822                           l4386 17D4                           l4378 17AA  
                         l3770 13FA                           l3754 137C                           l3762 13A0  
                         l3746 1354                           l3738 1326                           l3690 1E00  
                         l3498 16BC                           l3594 1256                           l3586 1210  
                         l3578 11D6                           l4298 0FE2                           l3850 226C  
                         l3842 224A                           l3682 1978                           l3674 1954  
                         l3666 18EC                           l3930 01E2                           l3922 01A0  
                         l3914 015E                           l3906 0128                           l1994 1538  
                         l1986 1510                           l4570 148A                           l4562 1458  
                         l4554 1426                           l3828 186C                           l4388 17DC  
                         l3764 13C2                           l3756 1390                           l3748 135C  
                         l3692 1E16                           l3596 1258                           l3588 1214  
                         l3860 22A4                           l3852 2276                           l3844 224E  
                         l3836 2236                           l3780 2086                           l3772 203A  
                         l3684 1984                           l3676 195E                           l3668 190C  
                         l3940 0228                           l3932 01FE                           l3924 01B2  
                         l3916 0170                           l3908 0130                           l1988 1524  
                         l4580 14D0                           l4572 149E                           l4564 146A  
                         l4556 142E                           l4548 1404                           l3790 20DA  
                         l3766 13D6                           l3758 1394                           l3694 1E28  
                         l3686 1DD4                           l3862 22B4                           l3854 2284  
                         l3846 2258                           l3838 223E                           l3782 20A0  
                         l3774 2058                           l3678 1966                           l3950 02A2  
                         l3934 020A                           l3926 01C2                           l3918 018C  
                         l3942 0254                           l3870 0032                           l4582 14D4  
                         l4574 14A4                           l4566 1472                           l4558 1440  
                         l3792 20F2                           l3784 20AC                           l3768 13E8  
                         l3696 1E2C                           l3688 1DF2                           l3864 22C4  
                         l3856 2290                           l3848 2262                           l3776 206A  
                         l3960 0302                           l3952 02C8                           l3944 0268  
                         l3936 020E                           l3928 01C6                           l3880 0078  
                         l3872 003C                           l4584 14E8                           l4576 14B8  
                         l4568 1484                           l3786 20B0                           l3698 1E36  
                         l3858 2294                           l3778 207A                           l3970 0350  
                         l3962 0328                           l3954 02D2                           l3946 026C  
                         l3938 0214                           l3890 00E6                           l3882 0084  
                         l3874 0044                           l3866 0014                           l4586 14EC  
                         l4578 14BC                           l3788 20B8                           l3796 247C  
                         l3980 03B4                           l3964 0332                           l3956 02E2  
                         l3948 0292                           l3972 035C                           l3892 00EE  
                         l3884 00A0                           l3876 0060                           l3868 0028  
                         l4588 1500                           l3798 2498                           l3990 03FC  
                         l3982 03BE                           l3974 0362                           l3966 033C  
                         l3958 02F2                           l3894 00F8                           l3886 00B0  
                         l3878 0070                           l3992 0422                           l3984 03CE  
                         l3976 037E                           l3968 0348                           l3896 0100  
                         l3888 00DC                           _ADFM 7E07                           l3994 042A  
                         l3986 03DE                           l3978 038E                           l3898 0108  
                         l3996 042E                           l3988 03EC                           ?_isr 0001  
                         l3998 043C                           _ADON 7E10                           STR_1 2FF2  
                         STR_2 2FEF                           STR_3 2FD4                           STR_4 2FD7  
                         STR_5 2FDA                           STR_6 2FDD                           STR_7 2FE0  
                         STR_8 2FF8                           STR_9 2FD1                           _BRGH 7D62  
                         _CREN 7D5C                           _T0CS 7EAD                           u2000 2394  
                         u2001 2390                           u2010 23E6                           u1130 1EF0  
                         u2011 23E0                           u1131 1EEC                           u2100 1B56  
                         u1140 1F06                           u2101 1B52                           u1141 1F02  
                         u2030 2408                           u2110 22F2                           u1150 1F16  
                         u2031 2404                           u2111 22EE                           u1151 1F12  
                         u2040 1E74                           u2200 0974                           u2120 2576  
                         u3000 0060                           u1160 1F30                           u2041 1E70  
                         u2025 23E8                           u2201 0970                           u2121 2572  
                         u3001 005C                           u1161 1F2C                           u2050 1EBC  
                         u2210 09EA                           u2130 086C                           u3010 00A0  
                         u1170 1F48                           u2051 1EB8                           u2211 09E6  
                         u2131 0868                           u3011 009C                           u1171 1F44  
                         u2060 1ED8                           u2300 0B04                           u2220 0A0C  
                         u2140 087E                           u3100 01FE                           u3020 00B0  
                         u2061 1ED4                           u2301 0B00                           u2221 0A08  
                         u2141 087A                           u3101 01FA                           u3021 00AC  
                         u2070 214A                           u2310 0B18                           u2230 0A36  
                         u2150 088E                           u3110 0228                           u3030 00DC  
                         u2311 0B14                           u2231 0A32                           u2151 088A  
                         u3111 0224                           u3031 00D8                           u2080 2172  
                         u2320 0B32                           u2240 0A5A                           u2160 08D2  
                         u2400 1A1C                           u3120 0268                           u3040 0142  
                         u3200 0514                           u2321 0B2E                           u2241 0A56  
                         u2161 08CE                           u2401 1A18                           u3121 0264  
                         u3041 013E                           u3201 0510                           u2090 2182  
                         u2330 0B7A                           u2250 0A70                           u2170 08E4  
                         u2410 1A42                           u3130 0292                           u3050 0154  
                         u3210 0526                           u2091 217E                           u2331 0B76  
                         u2251 0A6C                           u2171 08E0                           u2411 1A3E  
                         u3131 028E                           u3051 0150                           u3211 0522  
                         u2340 0BAA                           u2260 0A8E                           u2180 08F4  
                         u2500 1690                           u2420 1C8E                           u3140 02C8  
                         u3060 0170                           u3300 0642                           u3220 0548  
                         u2077 2140                           u2341 0BA6                           u2261 0A8A  
                         u2181 08F0                           u2501 168C                           u2421 1C8A  
                         u3141 02C4                           u3061 016C                           u3301 063E  
                         u3221 0544                           u2350 0BD8                           u2270 0AAE  
                         u2190 0934                           u2510 16A4                           u2430 1CA8  
                         u3150 0328                           u3070 018C                           u3310 0690  
                         u3230 056A                           u2087 2168                           u2351 0BD4  
                         u2271 0AAA                           u2191 0930                           u2511 16A0  
                         u2431 1CA4                           u3151 0324                           u3071 0188  
                         u3311 068C                           u3231 0566                           u2280 0AC0  
                         u2520 16CC                           u2600 21CA                           u2440 1CC2  
                         u2360 19A2                           u3160 037E                           u3080 01B2  
                         u3400 07AE                           u3320 06A6                           u3240 057C  
                         u2281 0ABC                           u2521 16C8                           u2601 21C6  
                         u2441 1CBE                           u2361 199E                           u3161 037A  
                         u3081 01AE                           u3401 07AA                           u3321 06A2  
                         u3241 0578                           u2290 0AEE                           u2530 16EC  
                         u2610 10C8                           u2450 1CE0                           u2370 19BC  
                         u3170 03B4                           u3090 01E2                           u3410 07DC  
                         u3330 06C8                           u3250 05B6                           u2291 0AEA  
                         u2531 16E8                           u2611 10C4                           u2451 1CDC  
                         u2371 19B8                           u3171 03B0                           u3091 01DE  
                         u3411 07D8                           u3331 06C4                           u3251 05B2  
                         u2540 16FC                           u2700 1256                           u2620 10D6  
                         u2460 1CF6                           u2380 19E2                           u3180 0422  
                         u3340 06E4                           u3260 05D0                           u3500 0D0A  
                         u2541 16F8                           u2701 1252                           u2621 10D2  
                         u2461 1CF2                           u2381 19DE                           u3181 041E  
                         u3341 06E0                           u3261 05CC                           u3501 0D06  
                         u3421 0BF2                           u2710 23D2                           u2550 1F6E  
                         u2630 1132                           u2470 1D1A                           u2390 1A00  
                         u3350 0700                           u3270 05EC                           u3190 0456  
                         u3510 0D26                           u3430 0C0C                           u2711 23CE  
                         u2551 1F6A                           u2631 112E                           u2471 1D16  
                         u2391 19FC                           u3351 06FC                           u3271 05E8  
                         u3191 0452                           u3511 0D22                           u3431 0C08  
                         u2800 1320                           u2480 162E                           u2560 1F8C  
                         u2640 1188                           u3600 0FCE                           u2720 194E  
                         u3360 0720                           u3280 0608                           u3520 0D52  
                         u3440 0C48                           u2801 131C                           u2481 162A  
                         u2561 1F88                           u2641 1184                           u3601 0FCA  
                         u2721 194A                           u3361 071C                           u3281 0604  
                         u3521 0D4E                           u3441 0C44                           u2810 1344  
                         u2730 1E00                           u2490 1662                           u2570 1FA8  
                         u2650 11D2                           u3610 106C                           u3370 0746  
                         u3290 0624                           u3530 0D6C                           u3450 0C68  
        ?_read_external_eeprom 0001                           u2811 1340                           u2731 1DFC  
                         u2571 1FA4                           u2651 11CE                           u3611 1068  
                         u3371 0742                           u3291 0620                           u3531 0D68  
                         u3451 0C64                           u2820 137C                           u2740 127E  
                         u2580 2196                           u2660 11F0                           u3620 1092  
                         u2900 209C                           u3380 0760                           u3540 0D7A  
                         u3460 0C82                           u3700 146A                           u2821 1378  
                         u2741 127A                           u2581 2192                           u2661 11EC  
                         u3621 108E                           u3381 075C                           u3541 0D76  
                         u3461 0C7E                           u3701 1466                           u2910 20DA  
                         u3630 1798                           u2830 1390                           u2750 12AC  
                         u2590 21B4                           u2670 1200                           u3390 0782  
                         u3550 0E18                           u3470 0CAA                           u3710 1484  
                         u2911 20D6                           u3631 1794                           u2831 138C  
                         u2751 12A8                           u2495 1658                           u2591 21B0  
                         u2671 11FC                           u3391 077E                           u3551 0E14  
                         u3471 0CA6                           u3711 1480                           u2920 20F2  
                         u3640 17AA                           u3560 1C1C                           u2840 13D6  
                         u2760 12BE                           u2680 120E                           u3480 0CC0  
                         u3720 149E                           u2921 20EE                           u3641 17A6  
                         u3561 1C18                           u2841 13D2                           u2761 12BA  
                         u2681 120A                           u3481 0CBC                           u3721 149A  
                         u3650 17D0                           u3570 1C72                           u2850 13E8  
                         u2770 12D4                           u2690 1248                           u2930 247A  
                         u3490 0CEC                           u3730 14B8                           u3651 17CC  
                         u3571 1C6E                           u2851 13E4                           u2771 12D0  
                         u2691 1244                           u2931 2476                           u3491 0CE8  
                         u3731 14B4                           _PEIE 7F96                           u2940 1822  
                         u3660 17EE                           u2860 13FA                           u2780 12F8  
                         u3580 0F06                           u3740 14D0                           u2941 181E  
                         u3661 17EA                           u2861 13F6                           u2781 12F4  
                         u3581 0F02                           u3741 14CC                           u1990 25C4  
                         u2950 1854                           u2790 130A                           u3590 0F3A  
                         u2870 2058                           u3750 14E8                           u3670 141A  
                         u1991 25C0                           u2951 1850                           u2791 1306  
                         u3591 0F36                           u3807 1D58                           u2871 2054  
                         u3751 14E4                           u3671 1416                           u2960 186C  
                         u2880 206A                           u3760 1500                           u3680 1440  
                         u2961 1868                           u3817 1D6E                           u2881 2066  
                         u3761 14FC                           u3681 143C                           u2970 187E  
                         u2890 209A                           u3690 1458                           u2971 187A  
                         u3827 1D90                           u2891 2094                           u3691 1454  
                         _RCIE 7CED                           u2980 18A0                           _RCEN 7E2B  
                         _RCIF 7CF5                           u2981 189C                           u3837 1DA2  
                         u2990 0028                           u3847 1DB8                           u2991 0024  
                         u3857 1DCC                           u3797 1D3E                           _RBPU 7F8F  
                         _TMR0 0FD6                           _SPEN 7D5F                           _RSEN 7E29  
                         _TXIE 7CEC                           _TXEN 7D65                           _TXIF 7CF4  
                         _SYNC 7D64                           _flag 004B                           _main 1404  
                         _mark 008F                           _menu 0442                           _once 0083  
                         _pass 00A5                           _wait 0047                           _time 00E0  
                         fsr1h 0FE2                           _star 0041                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005D                           _puts 2446  
                         prodl 0FF3                           start 000E                ___fldiv@new_exp 0020  
         ??_init_matrix_keypad 0001                   ___param_bank 0000                 clcd_write@byte 0002  
                _i2c_rep_start 25D4                  ??_i2c_rx_mode 0001                          ??_isr 0001  
                 ?_init_ds1307 0001                  ___fltol@sign1 0030                          _ABDEN 7DC0  
                        _ADCS0 7E00                          _ADCS1 7E01                          _ADCS2 7E02  
                        ?_main 0001                   ?_read_ds1307 0001                          _ACKEN 7E2C  
                        _ACKDT 7E2D                          ?_menu 0001                          _BCLIF 7D0B  
              __end_of___fldiv 0BEC                          _ACQT0 7E03                          _ACQT1 7E04  
                        _ACQT2 7E05                __end_of___awdiv 1A54                          STR_10 2FEC  
                        STR_11 2FFB                          STR_20 2EF5                          STR_12 2FE9  
                        STR_21 2FB2                          STR_13 2FE6                          STR_22 2FCC  
                        STR_30 2F8E                          STR_14 2FF5                          STR_31 2F23  
                        STR_23 2ED3                          STR_15 2E7E                          STR_24 2E5B  
                        STR_32 2FE3                          STR_40 2FA6                          _BRG16 7DC3  
                        STR_16 2F40                          STR_25 2E5B                          STR_33 2FE3  
                        STR_41 2F9A                          STR_17 2F67                          STR_50 2F81  
                        STR_34 2F05                          STR_26 2EC2                          STR_42 2E5A  
                        STR_18 2F4D                          STR_35 2EB1                          STR_27 2EA0  
                        STR_51 2E6C                          STR_19 2F5A                          STR_44 2E5C  
                        STR_52 2FC5                          STR_28 2FBC                          STR_36 2DE3  
              __end_of___awmod 1D2C                          STR_29 2F14                          STR_37 2E06  
                        STR_38 2E6A                          STR_46 2E47                          STR_47 2F32  
                        STR_39 2E34                          STR_49 2EE4                          STR_57 2E8F  
                        STR_58 2F74                          STR_59 2E1F                __end_of___fltol 171E  
                        ?_puts 0002                ___awdiv@divisor 0003                __end_of___lwdiv 1FC8  
              __end_of___lwmod 21E8                   ?_init_config 0001                          i2l718 2232  
              ___awdiv@counter 0005                          _VCFG0 7E0C                          _VCFG1 7E0D  
                        _RCREG 0FAE                          _SENDB 7D63                          _SPBRG 0FAF  
                        _PORTB 0F81                          _PORTD 0F83                          _TRISB 0F93  
                        _TRISC 0F94                          _TRISD 0F95                          _SSPIF 7CF3  
              __end_of_car_log 1BCA                          _TXREG 0FAD                   ?_init_timer0 0001  
    write_external_eeprom@data 0002                          _delay 0075                          _blink 203A  
                        _enter 0097                          _count 0091                          _index 003B  
                        _event 126A                          _login 0012                          _speed 00AF  
                        _putch 2566                   view_log@vlog 000D                          tablat 0FF5  
               _default_screen 2282                __end_of_timeout 1990                          puts@s 0002  
                        ttemp5 005E                          ttemp6 0061                          ttemp7 0065  
                        status 0FD8                          wtemp8 005E                __end_of_strncmp 18C6  
             init_ds1307@dummy 0004                __initialization 1FC8                 ?_i2c_rep_start 0001  
       ?_write_external_eeprom 0002                   __end_of_main 1510                   __end_of_menu 0852  
                 __end_of_puts 247C               __end_of_i2c_idle 25C8               __end_of_i2c_read 25E4  
             __end_of_i2c_stop 25F4                  ?_download_log 0001                         ??_main 0035  
                       ??_menu 000B              default_screen@key 0034                         ??_puts 0004  
                __activetblptr 0002            __end_of_i2c_rx_mode 25EC                         ?_blink 000B  
                       _ADCON0 0FC2                         _ADCON1 0FC1                         _ABDOVF 7DC7  
             read_switches@key 0055         ??_read_external_eeprom 0002                         ?_event 0001  
       __end_of_default_screen 22CC                         _ADRESH 0FC4                         ?_login 0001  
                       _ADRESL 0FC3                         _T08BIT 7EAE               ___awdiv@dividend 0001  
                       ?_putch 0001                 clear_log@i_398 0006                         _GODONE 7E11  
                       i2l4600 2222                         i2l4602 222A                         i2l4604 2230  
                       i2l4596 21EA                         i2l4598 21F8                   _write_ds1307 251A  
                       _TMR0IE 7F95                         _TMR0IF 7F92                         _TMR2IE 7CE9  
                       _TMR0ON 7EAF                         _TMR2ON 7E52                         _SSPADD 0FC8  
                       _TRISC3 7CA3                         _TRISC4 7CA4                         _TRISC6 7CA6  
                       _TRISC7 7CA7                         _TRISD7 7CAF                         _SSPBUF 0FC9  
             __end_of___xxtofl 126A               __end_of_clr_pass 2590               __end_of_get_pass 23D4  
             __end_of_get_time 1E5A             speed_display@speed 0032                      ??___fldiv 0017  
                    ??___awdiv 0005                      ??___awmod 0005                         _c_wait 0095  
                    ??___fltol 002C                      ??___lwdiv 0005                      ??___lwmod 000C  
             __end_of_init_i2c 2566               __end_of_init_adc 251A                         _cursor 0043  
             __end_of_read_adc 2312                      ??_car_log 0008                         _old_pd 00A0  
                       _new_pd 009B                         clear_0 200E                         clear_1 201A  
                       clear_2 2026                 ??_download_log 000C               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         blink@x 000B                         isa$std 0001  
             __end_of_scan_key 1618                ___awmod@counter 0005                         _strcmp 20AC  
                 __pdataCOMRAM 0056                         login@i 000D                   __mediumconst 2DE2  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             __end_of_view_log 0EB2                      ??_timeout 000B                ?_default_screen 0001  
                    ??_strncmp 0007                  _event_capture 1E5A                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     __accesstop 0060  
      __end_of__initialization 202C                  ___rparam_used 0001                     ___fltol@f1 0028  
              ??_i2c_rep_start 0001                 __pcstackCOMRAM 0001                   __pidataBANK0 240E  
                  _i2c_rx_mode 25E4                  __end_of_blink 20AC                  __end_of_event 1404  
                __end_of_login 0442                  __end_of_putch 257C              __end_of_i2c_start 25FC  
            __end_of_i2c_write 25D4                        ??_blink 000D                        ??_event 000C  
                      ??_login 000D                        ??_putch 0001                 ?_event_capture 0001  
                   __pbssBANK0 0060                     __pbssBANK1 0100         write_external_eeprom@i 0003  
                    ?_i2c_idle 0001                      ?_i2c_read 0001                      ?_i2c_stop 0001  
                   _clcd_print 2118                     _clcd_putch 2538                     _clcd_write 23D4  
 write_external_eeprom@address 0005                read_ds1307@data 0003              read_switches@once 005C  
                      _ACKSTAT 7E2E                        ?_strcmp 0001                      ?___xxtofl 0001  
                    ?_clr_pass 0001                        _SSPCON1 0FC6                      ?_get_pass 0001  
                    ?_get_time 0001                  _read_switches 1EDE                     ??_i2c_idle 0001  
        __end_of_speed_display 1B12                     ??_i2c_read 0001                     ??_i2c_stop 0001  
                    ?_init_i2c 0001           __end_of_download_log 10B6                      ?_init_adc 0001  
                    ?_read_adc 0001              __end_of_clear_log 1C7C                 view_log@F10720 0100  
                    ?_scan_key 0001        ??_write_external_eeprom 0003                        __Hparam 0000  
                      __Lparam 0000                        ___fldiv 0852                        ___awdiv 1990  
                      ___awmod 1C7C                      ?_view_log 0001                        ___fltol 1618  
                      ___lwdiv 1F54                        ___lwmod 2184                        _car_log 1B12  
                      __pcinit 1FC8                        __ramtop 0600                        __ptext0 1404  
                      __ptext1 0BEC                        __ptext2 1EDE                        __ptext3 1510  
                      __ptext4 0442                        __ptext5 0012                        __ptext6 18C6  
                      __ptext7 257C                        __ptext8 1990                        __ptext9 203A  
                      _m_count 008D              __end_of_init_clcd 1DD4                     ??___xxtofl 0005  
            __end_of_init_uart 24A6               ___awmod@dividend 0001                  ??_change_pass 000D  
                      _seconds 005A                        _pre_key 004F                ??_event_capture 0006  
                      _timeout 18C6                 ?_read_switches 0001                     ??_clr_pass 0001  
                   ??_get_pass 0004                     ??_get_time 0004                        _strncmp 17F8  
               __pintcode_body 21E8           end_of_initialization 202C                     clear_log@i 000A  
                      menu@key 000B                     ??_init_i2c 0001                     ??_init_adc 0001  
                __Lmediumconst 2DE2                     ??_read_adc 0003                        int_func 21E8  
                   ??_scan_key 0001                    ?_clcd_print 0003                    ?_clcd_putch 0009  
                   _scrn_delay 008B                    ?_clcd_write 0001                        postdec1 0FE5  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE                     ??_view_log 000B                     _time_delay 0089  
                      strcmp@l 0001                        strcmp@r 0003                      _PORTBbits 0F81  
              read_adc@channel 0007               ??_default_screen 0034                  i2c_write@data 0001  
                ___xxtofl@sign 0009                read_adc@reg_val 0005                    ___fldiv@grs 0022  
                  ___fldiv@rem 001B            __end_of_change_pass 17F8              view_log@shift_pos 0039  
     read_external_eeprom@data 0003                 event_capture@i 0007                   ?_i2c_rx_mode 0001  
                __pidataCOMRAM 25FC                    _adc_reg_val 0049                 __end_of_strcmp 2118  
          start_initialization 1FC8            change_pass@attempt1 007B                ??_read_switches 0001  
                    _i2c_start 25F4                    __end_of_isr 2236                      _i2c_write 25C8  
        __end_of_i2c_rep_start 25DC                  ??_init_ds1307 0004                    __pdataBANK0 00B2  
                ??_read_ds1307 0002                   _download_log 0EB2                       ??_strcmp 0005  
  read_switches@detection_type 0001                  ??_init_config 0006                     login@i_372 0011  
                   login@i_373 0015                     login@i_376 0019                      ___fldiv@a 0013  
                    ___fldiv@b 000F                  ??_init_timer0 0001                    __pbssCOMRAM 0035  
                  _change_pass 171E                     ?_i2c_start 0001                     ?_i2c_write 0001  
                 change_pass@c 0053               ___lwdiv@dividend 0001  __end_of_write_external_eeprom 2396  
                    _clear_log 1BCA                      __pintcode 0008                  __pmediumconst 2DE2  
                     ?___fldiv 000F                       ?___awdiv 0001                       ?___awmod 0001  
                     ?___fltol 0028             read_ds1307@address 0002                       ?___lwdiv 0001  
                    _clock_reg 0071                       ?___lwmod 0008                       ?_car_log 0001  
                    _main_menu 00D0                      _arrow_pos 0056            __end_of_init_ds1307 2356  
                     ?_timeout 0001            __end_of_read_ds1307 24D0               ___lwdiv@quotient 0005  
                    _init_clcd 1D2C            __end_of_init_config 2282                      _init_uart 247C  
                     ?_strncmp 0001                  ?_write_ds1307 0002            __end_of_init_timer0 25A4  
  read_external_eeprom@address 0002                   ??_clcd_print 0006                   ??_clcd_putch 000A  
   __end_of_init_matrix_keypad 25B6                   ??_clcd_write 0002                     ?_clear_log 0001  
                     i2u377_40 21F8                       i2u377_41 21F4                       i2u378_40 2222  
                     i2u378_41 221E           event_capture@address 0006                  download_log@i 0023  
        clcd_write@control_bit 0001                      get_pass@i 0004                    ??_i2c_start 0001  
           __end_of_clcd_print 2184                    ??_i2c_write 0001             __end_of_clcd_putch 2550  
           __end_of_clcd_write 240E               view_log@vlog_pos 0085                     ?_init_clcd 0001  
                   ?_init_uart 0001                      copy_data0 1FDC                      copy_data1 1FFC  
        __end_of_event_capture 1EDE                 ??_write_ds1307 0003                       _i2c_idle 25B6  
                     _i2c_read 25DC                       _i2c_stop 25EC                       __Hrparam 0000  
                     __Lrparam 0000   __end_of_read_external_eeprom 24FA                    _init_ds1307 2312  
                  _read_ds1307 24A6                    _init_config 2236                       ___xxtofl 10B6  
          write_ds1307@address 0003                    _init_timer0 2590                ___lwdiv@divisor 0003  
              ___lwdiv@counter 0007                       __ptext10 2236                       __ptext11 2590  
                     __ptext20 2566                       __ptext12 25A4                       __ptext21 247C  
                     __ptext13 2550                       __ptext30 0852                       __ptext22 1C7C  
                     __ptext14 2312                       __ptext31 1DD4                       __ptext23 2282  
                     __ptext15 251A                       __ptext40 25D4                       __ptext32 24A6  
                     __ptext24 1A54                       __ptext16 1D2C                       __ptext41 25DC  
                     __ptext33 126A                       __ptext25 22CC                       __ptext17 24FA  
                     __ptext50 25EC                       __ptext42 25E4                       __ptext34 1BCA  
                     __ptext26 10B6                       __ptext18 0EB2                       __ptext51 25F4  
                     __ptext43 2538                       __ptext35 171E                       __ptext27 2184  
                     __ptext19 2446                       __ptext52 25B6                       __ptext44 2118  
                     __ptext36 17F8                       __ptext28 1F54                       __ptext45 23D4  
                     __ptext37 20AC                       __ptext29 1618                       __ptext46 1B12  
                     __ptext38 2396                       __ptext47 1E5A                       __ptext39 24D0  
                     __ptext48 2356                       __ptext49 25C8                       _clr_pass 257C  
                     _get_pass 2396                       _get_time 1DD4                       _attempts 0093  
                     car_log@i 000A                       _init_i2c 2550                       _init_adc 24FA  
                _speed_display 1A54                       _read_adc 22CC                       _menu_pos 003F  
                     _scan_key 1510                view_log@address 002F                       _password 00AA  
                  ??_clear_log 0006                       isa$xinst 0000                       _overflow 0087  
                     int$flags 005D                       _view_log 0BEC                       _position 00DC  
                _return_delay1 007F                      view_log@i 0030                      putch@byte 0001  
                     event@key 000C                   ?_change_pass 0001                       isr@count 0079  
                  ??_init_clcd 0003          __end_of_read_switches 1F54                    ??_init_uart 0001  
                     login@key 001D                       intlevel2 0000                    _screen_flag 0051  
               ?_speed_display 0032               ___lwmod@dividend 0008                      strncmp@_l 0001  
                    strncmp@_r 0003                   _return_delay 0081           __end_of_write_ds1307 2538  
          download_log@address 001E                ___lwmod@divisor 000A                ___lwmod@counter 000C  
                     strncmp@l 0009                       strncmp@n 0005                       strncmp@r 000B  
         download_log@vlog_pos 001F                    _press_delay 003D               write_ds1307@data 0002  
         _read_external_eeprom 24D0               download_log@next 0021               download_log@vlog 000D  
